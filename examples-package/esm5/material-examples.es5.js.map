{"version":3,"file":"material-examples.es5.js","sources":["../../src/material-examples/index.ts","../../src/material-examples/example-data.ts","../../src/material-examples/example-module.ts","../../src/material-examples/tooltip-position/tooltip-position-example.ts","../../src/material-examples/tooltip-overview/tooltip-overview-example.ts","../../src/material-examples/toolbar-overview/toolbar-overview-example.ts","../../src/material-examples/toolbar-multirow/toolbar-multirow-example.ts","../../src/material-examples/tabs-template-label/tabs-template-label-example.ts","../../src/material-examples/tabs-overview/tabs-overview-example.ts","../../src/material-examples/table-sorting/table-sorting-example.ts","../../src/material-examples/table-pagination/table-pagination-example.ts","../../src/material-examples/table-overview/table-overview-example.ts","../../src/material-examples/table-http/table-http-example.ts","../../src/material-examples/table-filtering/table-filtering-example.ts","../../src/material-examples/table-basic/table-basic-example.ts","../../src/material-examples/stepper-overview/stepper-overview-example.ts","../../src/material-examples/sort-overview/sort-overview-example.ts","../../src/material-examples/snack-bar-overview/snack-bar-overview-example.ts","../../src/material-examples/snack-bar-component/snack-bar-component-example.ts","../../src/material-examples/slider-overview/slider-overview-example.ts","../../src/material-examples/slider-configurable/slider-configurable-example.ts","../../src/material-examples/slide-toggle-overview/slide-toggle-overview-example.ts","../../src/material-examples/slide-toggle-forms/slide-toggle-forms-example.ts","../../src/material-examples/slide-toggle-configurable/slide-toggle-configurable-example.ts","../../src/material-examples/sidenav-overview/sidenav-overview-example.ts","../../src/material-examples/sidenav-fab/sidenav-fab-example.ts","../../src/material-examples/select-overview/select-overview-example.ts","../../src/material-examples/select-form/select-form-example.ts","../../src/material-examples/radio-overview/radio-overview-example.ts","../../src/material-examples/radio-ng-model/radio-ng-model-example.ts","../../src/material-examples/progress-spinner-overview/progress-spinner-overview-example.ts","../../src/material-examples/progress-spinner-configurable/progress-spinner-configurable-example.ts","../../src/material-examples/progress-bar-overview/progress-bar-overview-example.ts","../../src/material-examples/progress-bar-configurable/progress-bar-configurable-example.ts","../../src/material-examples/paginator-overview/paginator-overview-example.ts","../../src/material-examples/paginator-configurable/paginator-configurable-example.ts","../../src/material-examples/nested-menu/nested-menu-example.ts","../../src/material-examples/menu-overview/menu-overview-example.ts","../../src/material-examples/menu-icons/menu-icons-example.ts","../../src/material-examples/list-selection/list-selection-example.ts","../../src/material-examples/list-sections/list-sections-example.ts","../../src/material-examples/list-overview/list-overview-example.ts","../../src/material-examples/input-prefix-suffix/input-prefix-suffix-example.ts","../../src/material-examples/input-overview/input-overview-example.ts","../../src/material-examples/input-hint/input-hint-example.ts","../../src/material-examples/input-form/input-form-example.ts","../../src/material-examples/input-errors/input-errors-example.ts","../../src/material-examples/input-clearable/input-clearable-example.ts","../../src/material-examples/icon-svg-example/icon-svg-example.ts","../../src/material-examples/icon-overview/icon-overview-example.ts","../../src/material-examples/grid-list-overview/grid-list-overview-example.ts","../../src/material-examples/grid-list-dynamic/grid-list-dynamic-example.ts","../../src/material-examples/expansion-steps/expansion-steps-example.ts","../../src/material-examples/expansion-overview/expansion-overview-example.ts","../../src/material-examples/dialog-overview/dialog-overview-example.ts","../../src/material-examples/dialog-elements/dialog-elements-example.ts","../../src/material-examples/dialog-data/dialog-data-example.ts","../../src/material-examples/dialog-content/dialog-content-example.ts","../../src/material-examples/datepicker-touch/datepicker-touch-example.ts","../../src/material-examples/datepicker-start-view/datepicker-start-view-example.ts","../../src/material-examples/datepicker-overview/datepicker-overview-example.ts","../../src/material-examples/datepicker-min-max/datepicker-min-max-example.ts","../../src/material-examples/datepicker-filter/datepicker-filter-example.ts","../../src/material-examples/datepicker-api/datepicker-api-example.ts","../../src/material-examples/chips-stacked/chips-stacked-example.ts","../../src/material-examples/chips-overview/chips-overview-example.ts","../../src/material-examples/chips-input/chips-input-example.ts","../../src/material-examples/checkbox-overview/checkbox-overview-example.ts","../../src/material-examples/checkbox-configurable/checkbox-configurable-example.ts","../../src/material-examples/cdk-table-basic/cdk-table-basic-example.ts","../../src/material-examples/card-overview/card-overview-example.ts","../../src/material-examples/card-fancy/card-fancy-example.ts","../../src/material-examples/button-types/button-types-example.ts","../../src/material-examples/button-toggle-overview/button-toggle-overview-example.ts","../../src/material-examples/button-toggle-exclusive/button-toggle-exclusive-example.ts","../../src/material-examples/button-overview/button-overview-example.ts","../../src/material-examples/autocomplete-simple/autocomplete-simple-example.ts","../../src/material-examples/autocomplete-overview/autocomplete-overview-example.ts","../../src/material-examples/autocomplete-filter/autocomplete-filter-example.ts","../../src/material-examples/autocomplete-display/autocomplete-display-example.ts","../../src/material-examples/material-module.ts"],"sourcesContent":["/**\n * Generated bundle index. Do not edit.\n */\n\nexport {ExampleData,LiveExample,EXAMPLE_COMPONENTS,EXAMPLE_LIST,ExampleModule,ListOverviewExample,DatepickerOverviewExample,CardFancyExample,ToolbarMultirowExample,ButtonToggleOverviewExample,ExpansionOverviewExample,StepperOverviewExample} from './public_api';\n\nexport {AutocompleteDisplayExample as ɵa} from './autocomplete-display/autocomplete-display-example';\nexport {AutocompleteFilterExample as ɵb} from './autocomplete-filter/autocomplete-filter-example';\nexport {AutocompleteOverviewExample as ɵc} from './autocomplete-overview/autocomplete-overview-example';\nexport {AutocompleteSimpleExample as ɵd} from './autocomplete-simple/autocomplete-simple-example';\nexport {ButtonOverviewExample as ɵe} from './button-overview/button-overview-example';\nexport {ButtonToggleExclusiveExample as ɵf} from './button-toggle-exclusive/button-toggle-exclusive-example';\nexport {ButtonTypesExample as ɵg} from './button-types/button-types-example';\nexport {CardOverviewExample as ɵh} from './card-overview/card-overview-example';\nexport {CdkTableBasicExample as ɵi} from './cdk-table-basic/cdk-table-basic-example';\nexport {CheckboxConfigurableExample as ɵj} from './checkbox-configurable/checkbox-configurable-example';\nexport {CheckboxOverviewExample as ɵk} from './checkbox-overview/checkbox-overview-example';\nexport {ChipsInputExample as ɵl} from './chips-input/chips-input-example';\nexport {ChipsOverviewExample as ɵm} from './chips-overview/chips-overview-example';\nexport {ChipsStackedExample as ɵn} from './chips-stacked/chips-stacked-example';\nexport {DatepickerApiExample as ɵo} from './datepicker-api/datepicker-api-example';\nexport {DatepickerFilterExample as ɵp} from './datepicker-filter/datepicker-filter-example';\nexport {DatepickerMinMaxExample as ɵq} from './datepicker-min-max/datepicker-min-max-example';\nexport {DatepickerStartViewExample as ɵr} from './datepicker-start-view/datepicker-start-view-example';\nexport {DatepickerTouchExample as ɵs} from './datepicker-touch/datepicker-touch-example';\nexport {DialogContentExample as ɵt,DialogContentExampleDialog as ɵu} from './dialog-content/dialog-content-example';\nexport {DialogDataExample as ɵv,DialogDataExampleDialog as ɵw} from './dialog-data/dialog-data-example';\nexport {DialogElementsExample as ɵx,DialogElementsExampleDialog as ɵy} from './dialog-elements/dialog-elements-example';\nexport {DialogOverviewExample as ɵz,DialogOverviewExampleDialog as ɵba} from './dialog-overview/dialog-overview-example';\nexport {ExpansionStepsExample as ɵbb} from './expansion-steps/expansion-steps-example';\nexport {GridListDynamicExample as ɵbc} from './grid-list-dynamic/grid-list-dynamic-example';\nexport {GridListOverviewExample as ɵbd} from './grid-list-overview/grid-list-overview-example';\nexport {IconOverviewExample as ɵbe} from './icon-overview/icon-overview-example';\nexport {IconSvgExample as ɵbf} from './icon-svg-example/icon-svg-example';\nexport {InputClearableExample as ɵbg} from './input-clearable/input-clearable-example';\nexport {InputErrorsExample as ɵbh} from './input-errors/input-errors-example';\nexport {InputFormExample as ɵbi} from './input-form/input-form-example';\nexport {InputHintExample as ɵbj} from './input-hint/input-hint-example';\nexport {InputOverviewExample as ɵbk} from './input-overview/input-overview-example';\nexport {InputPrefixSuffixExample as ɵbl} from './input-prefix-suffix/input-prefix-suffix-example';\nexport {ListSectionsExample as ɵbm} from './list-sections/list-sections-example';\nexport {ListSelectionExample as ɵbn} from './list-selection/list-selection-example';\nexport {ExampleMaterialModule as ɵcx} from './material-module';\nexport {MenuIconsExample as ɵbo} from './menu-icons/menu-icons-example';\nexport {MenuOverviewExample as ɵbp} from './menu-overview/menu-overview-example';\nexport {NestedMenuExample as ɵbq} from './nested-menu/nested-menu-example';\nexport {PaginatorConfigurableExample as ɵbr} from './paginator-configurable/paginator-configurable-example';\nexport {PaginatorOverviewExample as ɵbs} from './paginator-overview/paginator-overview-example';\nexport {ProgressBarConfigurableExample as ɵbt} from './progress-bar-configurable/progress-bar-configurable-example';\nexport {ProgressBarOverviewExample as ɵbu} from './progress-bar-overview/progress-bar-overview-example';\nexport {ProgressSpinnerConfigurableExample as ɵbv} from './progress-spinner-configurable/progress-spinner-configurable-example';\nexport {ProgressSpinnerOverviewExample as ɵbw} from './progress-spinner-overview/progress-spinner-overview-example';\nexport {RadioNgModelExample as ɵbx} from './radio-ng-model/radio-ng-model-example';\nexport {RadioOverviewExample as ɵby} from './radio-overview/radio-overview-example';\nexport {SelectFormExample as ɵbz} from './select-form/select-form-example';\nexport {SelectOverviewExample as ɵca} from './select-overview/select-overview-example';\nexport {SidenavFabExample as ɵcb} from './sidenav-fab/sidenav-fab-example';\nexport {SidenavOverviewExample as ɵcc} from './sidenav-overview/sidenav-overview-example';\nexport {SlideToggleConfigurableExample as ɵcd} from './slide-toggle-configurable/slide-toggle-configurable-example';\nexport {SlideToggleFormsExample as ɵce} from './slide-toggle-forms/slide-toggle-forms-example';\nexport {SlideToggleOverviewExample as ɵcf} from './slide-toggle-overview/slide-toggle-overview-example';\nexport {SliderConfigurableExample as ɵcg} from './slider-configurable/slider-configurable-example';\nexport {SliderOverviewExample as ɵch} from './slider-overview/slider-overview-example';\nexport {PizzaPartyComponent as ɵcj,SnackBarComponentExample as ɵci} from './snack-bar-component/snack-bar-component-example';\nexport {SnackBarOverviewExample as ɵck} from './snack-bar-overview/snack-bar-overview-example';\nexport {SortOverviewExample as ɵcl} from './sort-overview/sort-overview-example';\nexport {TableBasicExample as ɵcm} from './table-basic/table-basic-example';\nexport {TableFilteringExample as ɵcn} from './table-filtering/table-filtering-example';\nexport {TableHttpExample as ɵco} from './table-http/table-http-example';\nexport {TableOverviewExample as ɵcp} from './table-overview/table-overview-example';\nexport {TablePaginationExample as ɵcq} from './table-pagination/table-pagination-example';\nexport {TableSortingExample as ɵcr} from './table-sorting/table-sorting-example';\nexport {TabsOverviewExample as ɵcs} from './tabs-overview/tabs-overview-example';\nexport {TabsTemplateLabelExample as ɵct} from './tabs-template-label/tabs-template-label-example';\nexport {ToolbarOverviewExample as ɵcu} from './toolbar-overview/toolbar-overview-example';\nexport {TooltipOverviewExample as ɵcv} from './tooltip-overview/tooltip-overview-example';\nexport {TooltipPositionExample as ɵcw} from './tooltip-position/tooltip-position-example';","import {EXAMPLE_COMPONENTS} from './example-module';\n/**\n * Example data\n *   with information about Component name, selector, files used in example, and path to examples\n */\nexport class ExampleData {\n  // TODO: figure out how do we get these variables.\n  description = 'Some description for material';\n  // TODO: use real example and delete the example/ folder.\n  examplePath = '/assets/example/';\n  exampleFiles = ['button-demo.html', 'button-demo.scss', 'button-demo.ts'];\n\n  // TODO: extract these variables from example code.\n  selectorName = 'button-demo';\n  indexFilename = 'button-demo';\n  componentName = 'ButtonDemo';\n/**\n * @param {?} example\n */\nconstructor(example: string) {\n    if (example && EXAMPLE_COMPONENTS[example]) {\n      this.examplePath = `/assets/plunker/examples/${example}/`;\n      // TODO(tinayuangao): Do not hard-code extensions\n      this.exampleFiles = ['html', 'ts', 'css']\n        .map((extension) => `${example}-example.${extension}`);\n      if (EXAMPLE_COMPONENTS[example].additionalFiles) {\n        this.exampleFiles = this.exampleFiles.concat(EXAMPLE_COMPONENTS[example].additionalFiles);\n      }\n      this.selectorName = this.indexFilename = `${example}-example`;\n\n      let exampleName = example.replace(/(?:^\\w|\\b\\w)/g, letter => letter.toUpperCase());\n\n      if (EXAMPLE_COMPONENTS[example].title) {\n        this.description = EXAMPLE_COMPONENTS[example].title;\n      } else {\n        this.description = exampleName.replace(/[\\-]+/g, ' ') + ' Example';\n      }\n\n      if (EXAMPLE_COMPONENTS[example].selectorName) {\n        this.componentName = EXAMPLE_COMPONENTS[example].selectorName;\n      } else {\n        this.componentName = exampleName.replace(/[\\-]+/g, '') + 'Example';\n      }\n    }\n  }\n}\n\nfunction ExampleData_tsickle_Closure_declarations() {\n/** @type {?} */\nExampleData.prototype.description;\n/** @type {?} */\nExampleData.prototype.examplePath;\n/** @type {?} */\nExampleData.prototype.exampleFiles;\n/** @type {?} */\nExampleData.prototype.selectorName;\n/** @type {?} */\nExampleData.prototype.indexFilename;\n/** @type {?} */\nExampleData.prototype.componentName;\n}\n\n","\n/* tslint:disable */\n/** DO NOT MANUALLY EDIT THIS FILE, IT IS GENERATED VIA GULP 'build-examples-module' */\n\nimport {NgModule} from '@angular/core';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {CommonModule} from '@angular/common';\nimport {ExampleMaterialModule} from './material-module';\n\nexport interface LiveExample {\n  title: string;\n  component: any;\n  additionalFiles?: string[];\n  selectorName?: string;\n}\n\nimport {AutocompleteDisplayExample} from './autocomplete-display/autocomplete-display-example';\nimport {AutocompleteFilterExample} from './autocomplete-filter/autocomplete-filter-example';\nimport {AutocompleteOverviewExample} from './autocomplete-overview/autocomplete-overview-example';\nimport {AutocompleteSimpleExample} from './autocomplete-simple/autocomplete-simple-example';\nimport {ButtonOverviewExample} from './button-overview/button-overview-example';\nimport {ButtonToggleExclusiveExample} from './button-toggle-exclusive/button-toggle-exclusive-example';\nimport {ButtonToggleOverviewExample} from './button-toggle-overview/button-toggle-overview-example';\nimport {ButtonTypesExample} from './button-types/button-types-example';\nimport {CardFancyExample} from './card-fancy/card-fancy-example';\nimport {CardOverviewExample} from './card-overview/card-overview-example';\nimport {CdkTableBasicExample} from './cdk-table-basic/cdk-table-basic-example';\nimport {CheckboxConfigurableExample} from './checkbox-configurable/checkbox-configurable-example';\nimport {CheckboxOverviewExample} from './checkbox-overview/checkbox-overview-example';\nimport {ChipsInputExample} from './chips-input/chips-input-example';\nimport {ChipsOverviewExample} from './chips-overview/chips-overview-example';\nimport {ChipsStackedExample} from './chips-stacked/chips-stacked-example';\nimport {DatepickerApiExample} from './datepicker-api/datepicker-api-example';\nimport {DatepickerFilterExample} from './datepicker-filter/datepicker-filter-example';\nimport {DatepickerMinMaxExample} from './datepicker-min-max/datepicker-min-max-example';\nimport {DatepickerOverviewExample} from './datepicker-overview/datepicker-overview-example';\nimport {DatepickerStartViewExample} from './datepicker-start-view/datepicker-start-view-example';\nimport {DatepickerTouchExample} from './datepicker-touch/datepicker-touch-example';\nimport {DialogContentExampleDialog,DialogContentExample} from './dialog-content/dialog-content-example';\nimport {DialogDataExampleDialog,DialogDataExample} from './dialog-data/dialog-data-example';\nimport {DialogElementsExampleDialog,DialogElementsExample} from './dialog-elements/dialog-elements-example';\nimport {DialogOverviewExampleDialog,DialogOverviewExample} from './dialog-overview/dialog-overview-example';\nimport {ExpansionOverviewExample} from './expansion-overview/expansion-overview-example';\nimport {ExpansionStepsExample} from './expansion-steps/expansion-steps-example';\nimport {GridListDynamicExample} from './grid-list-dynamic/grid-list-dynamic-example';\nimport {GridListOverviewExample} from './grid-list-overview/grid-list-overview-example';\nimport {IconOverviewExample} from './icon-overview/icon-overview-example';\nimport {IconSvgExample} from './icon-svg-example/icon-svg-example';\nimport {InputClearableExample} from './input-clearable/input-clearable-example';\nimport {InputErrorsExample} from './input-errors/input-errors-example';\nimport {InputFormExample} from './input-form/input-form-example';\nimport {InputHintExample} from './input-hint/input-hint-example';\nimport {InputOverviewExample} from './input-overview/input-overview-example';\nimport {InputPrefixSuffixExample} from './input-prefix-suffix/input-prefix-suffix-example';\nimport {ListOverviewExample} from './list-overview/list-overview-example';\nimport {ListSectionsExample} from './list-sections/list-sections-example';\nimport {ListSelectionExample} from './list-selection/list-selection-example';\nimport {MenuIconsExample} from './menu-icons/menu-icons-example';\nimport {MenuOverviewExample} from './menu-overview/menu-overview-example';\nimport {NestedMenuExample} from './nested-menu/nested-menu-example';\nimport {PaginatorConfigurableExample} from './paginator-configurable/paginator-configurable-example';\nimport {PaginatorOverviewExample} from './paginator-overview/paginator-overview-example';\nimport {ProgressBarConfigurableExample} from './progress-bar-configurable/progress-bar-configurable-example';\nimport {ProgressBarOverviewExample} from './progress-bar-overview/progress-bar-overview-example';\nimport {ProgressSpinnerConfigurableExample} from './progress-spinner-configurable/progress-spinner-configurable-example';\nimport {ProgressSpinnerOverviewExample} from './progress-spinner-overview/progress-spinner-overview-example';\nimport {RadioNgModelExample} from './radio-ng-model/radio-ng-model-example';\nimport {RadioOverviewExample} from './radio-overview/radio-overview-example';\nimport {SelectFormExample} from './select-form/select-form-example';\nimport {SelectOverviewExample} from './select-overview/select-overview-example';\nimport {SidenavFabExample} from './sidenav-fab/sidenav-fab-example';\nimport {SidenavOverviewExample} from './sidenav-overview/sidenav-overview-example';\nimport {SlideToggleConfigurableExample} from './slide-toggle-configurable/slide-toggle-configurable-example';\nimport {SlideToggleFormsExample} from './slide-toggle-forms/slide-toggle-forms-example';\nimport {SlideToggleOverviewExample} from './slide-toggle-overview/slide-toggle-overview-example';\nimport {SliderConfigurableExample} from './slider-configurable/slider-configurable-example';\nimport {SliderOverviewExample} from './slider-overview/slider-overview-example';\nimport {PizzaPartyComponent,SnackBarComponentExample} from './snack-bar-component/snack-bar-component-example';\nimport {SnackBarOverviewExample} from './snack-bar-overview/snack-bar-overview-example';\nimport {SortOverviewExample} from './sort-overview/sort-overview-example';\nimport {StepperOverviewExample} from './stepper-overview/stepper-overview-example';\nimport {TableBasicExample} from './table-basic/table-basic-example';\nimport {TableFilteringExample} from './table-filtering/table-filtering-example';\nimport {TableHttpExample} from './table-http/table-http-example';\nimport {TableOverviewExample} from './table-overview/table-overview-example';\nimport {TablePaginationExample} from './table-pagination/table-pagination-example';\nimport {TableSortingExample} from './table-sorting/table-sorting-example';\nimport {TabsOverviewExample} from './tabs-overview/tabs-overview-example';\nimport {TabsTemplateLabelExample} from './tabs-template-label/tabs-template-label-example';\nimport {ToolbarMultirowExample} from './toolbar-multirow/toolbar-multirow-example';\nimport {ToolbarOverviewExample} from './toolbar-overview/toolbar-overview-example';\nimport {TooltipOverviewExample} from './tooltip-overview/tooltip-overview-example';\nimport {TooltipPositionExample} from './tooltip-position/tooltip-position-example';\n\nexport const /** @type {?} */ EXAMPLE_COMPONENTS = {\n  'autocomplete-display': {\n    title: 'Display value autocomplete',\n    component: AutocompleteDisplayExample,\n    additionalFiles: null,\n    selectorName: null\n  },\n  'autocomplete-filter': {\n    title: 'Filter autocomplete',\n    component: AutocompleteFilterExample,\n    additionalFiles: null,\n    selectorName: null\n  },\n  'autocomplete-overview': {\n    title: 'Autocomplete overview',\n    component: AutocompleteOverviewExample,\n    additionalFiles: null,\n    selectorName: null\n  },\n  'autocomplete-simple': {\n    title: 'Simple autocomplete',\n    component: AutocompleteSimpleExample,\n    additionalFiles: null,\n    selectorName: null\n  },\n  'button-overview': {\n    title: 'Basic buttons',\n    component: ButtonOverviewExample,\n    additionalFiles: null,\n    selectorName: null\n  },\n  'button-toggle-exclusive': {\n    title: 'Exclusive selection',\n    component: ButtonToggleExclusiveExample,\n    additionalFiles: null,\n    selectorName: null\n  },\n  'button-toggle-overview': {\n    title: 'Basic button-toggles',\n    component: ButtonToggleOverviewExample,\n    additionalFiles: null,\n    selectorName: null\n  },\n  'button-types': {\n    title: 'Button varieties',\n    component: ButtonTypesExample,\n    additionalFiles: null,\n    selectorName: null\n  },\n  'card-fancy': {\n    title: 'Card with multiple sections',\n    component: CardFancyExample,\n    additionalFiles: null,\n    selectorName: null\n  },\n  'card-overview': {\n    title: 'Basic cards',\n    component: CardOverviewExample,\n    additionalFiles: null,\n    selectorName: null\n  },\n  'cdk-table-basic': {\n    title: 'Basic CDK data-table',\n    component: CdkTableBasicExample,\n    additionalFiles: null,\n    selectorName: null\n  },\n  'checkbox-configurable': {\n    title: 'Configurable checkbox',\n    component: CheckboxConfigurableExample,\n    additionalFiles: null,\n    selectorName: null\n  },\n  'checkbox-overview': {\n    title: 'Basic checkboxes',\n    component: CheckboxOverviewExample,\n    additionalFiles: null,\n    selectorName: null\n  },\n  'chips-input': {\n    title: 'Chips with input',\n    component: ChipsInputExample,\n    additionalFiles: null,\n    selectorName: null\n  },\n  'chips-overview': {\n    title: 'Basic chips',\n    component: ChipsOverviewExample,\n    additionalFiles: null,\n    selectorName: null\n  },\n  'chips-stacked': {\n    title: 'Stacked chips',\n    component: ChipsStackedExample,\n    additionalFiles: null,\n    selectorName: null\n  },\n  'datepicker-api': {\n    title: 'Datepicker API',\n    component: DatepickerApiExample,\n    additionalFiles: null,\n    selectorName: null\n  },\n  'datepicker-filter': {\n    title: 'Datepicker Filter',\n    component: DatepickerFilterExample,\n    additionalFiles: null,\n    selectorName: null\n  },\n  'datepicker-min-max': {\n    title: 'Datepicker Min Max',\n    component: DatepickerMinMaxExample,\n    additionalFiles: null,\n    selectorName: null\n  },\n  'datepicker-overview': {\n    title: 'Basic datepicker',\n    component: DatepickerOverviewExample,\n    additionalFiles: null,\n    selectorName: null\n  },\n  'datepicker-start-view': {\n    title: 'Datepicker start date',\n    component: DatepickerStartViewExample,\n    additionalFiles: null,\n    selectorName: null\n  },\n  'datepicker-touch': {\n    title: 'Datepicker Touch',\n    component: DatepickerTouchExample,\n    additionalFiles: null,\n    selectorName: null\n  },\n  'dialog-content': {\n    title: 'Dialog with header, scrollable content and actions',\n    component: DialogContentExample,\n    additionalFiles: [\"dialog-content-example-dialog.html\"],\n    selectorName: 'DialogContentExample, DialogContentExampleDialog'\n  },\n  'dialog-data': {\n    title: 'Injecting data when opening a dialog',\n    component: DialogDataExample,\n    additionalFiles: [\"dialog-data-example-dialog.html\"],\n    selectorName: 'DialogDataExample, DialogDataExampleDialog'\n  },\n  'dialog-elements': {\n    title: 'Dialog elements',\n    component: DialogElementsExample,\n    additionalFiles: [\"dialog-elements-example-dialog.html\"],\n    selectorName: 'DialogElementsExample, DialogElementsExampleDialog'\n  },\n  'dialog-overview': {\n    title: 'Dialog Overview',\n    component: DialogOverviewExample,\n    additionalFiles: [\"dialog-overview-example-dialog.html\"],\n    selectorName: 'DialogOverviewExample, DialogOverviewExampleDialog'\n  },\n  'expansion-overview': {\n    title: 'Basic expansion panel',\n    component: ExpansionOverviewExample,\n    additionalFiles: null,\n    selectorName: null\n  },\n  'expansion-steps': {\n    title: 'Expansion panel as accordion',\n    component: ExpansionStepsExample,\n    additionalFiles: null,\n    selectorName: null\n  },\n  'grid-list-dynamic': {\n    title: 'Dynamic grid-list',\n    component: GridListDynamicExample,\n    additionalFiles: null,\n    selectorName: null\n  },\n  'grid-list-overview': {\n    title: 'Basic grid-list',\n    component: GridListOverviewExample,\n    additionalFiles: null,\n    selectorName: null\n  },\n  'icon-overview': {\n    title: 'Basic icons',\n    component: IconOverviewExample,\n    additionalFiles: null,\n    selectorName: null\n  },\n  'icon-svg': {\n    title: 'SVG icons',\n    component: IconSvgExample,\n    additionalFiles: null,\n    selectorName: null\n  },\n  'input-clearable': {\n    title: 'Input Clearable',\n    component: InputClearableExample,\n    additionalFiles: null,\n    selectorName: null\n  },\n  'input-errors': {\n    title: 'Input Errors',\n    component: InputErrorsExample,\n    additionalFiles: null,\n    selectorName: null\n  },\n  'input-form': {\n    title: 'Inputs in a form',\n    component: InputFormExample,\n    additionalFiles: null,\n    selectorName: null\n  },\n  'input-hint': {\n    title: 'Input hints',\n    component: InputHintExample,\n    additionalFiles: null,\n    selectorName: null\n  },\n  'input-overview': {\n    title: 'Basic Inputs',\n    component: InputOverviewExample,\n    additionalFiles: null,\n    selectorName: null\n  },\n  'input-prefix-suffix': {\n    title: 'Input Prefixes and Suffixes',\n    component: InputPrefixSuffixExample,\n    additionalFiles: null,\n    selectorName: null\n  },\n  'list-overview': {\n    title: 'Basic list',\n    component: ListOverviewExample,\n    additionalFiles: null,\n    selectorName: null\n  },\n  'list-sections': {\n    title: 'List with sections',\n    component: ListSectionsExample,\n    additionalFiles: null,\n    selectorName: null\n  },\n  'list-selection': {\n    title: 'List with selection',\n    component: ListSelectionExample,\n    additionalFiles: null,\n    selectorName: null\n  },\n  'menu-icons': {\n    title: 'Menu with icons',\n    component: MenuIconsExample,\n    additionalFiles: null,\n    selectorName: null\n  },\n  'menu-overview': {\n    title: 'Basic menu',\n    component: MenuOverviewExample,\n    additionalFiles: null,\n    selectorName: null\n  },\n  'nested-menu': {\n    title: 'Nested menu',\n    component: NestedMenuExample,\n    additionalFiles: null,\n    selectorName: null\n  },\n  'paginator-configurable': {\n    title: 'Configurable paginator',\n    component: PaginatorConfigurableExample,\n    additionalFiles: null,\n    selectorName: null\n  },\n  'paginator-overview': {\n    title: 'Paginator',\n    component: PaginatorOverviewExample,\n    additionalFiles: null,\n    selectorName: null\n  },\n  'progress-bar-configurable': {\n    title: 'Configurable progress-bar',\n    component: ProgressBarConfigurableExample,\n    additionalFiles: null,\n    selectorName: null\n  },\n  'progress-bar-overview': {\n    title: 'Basic progress-bar',\n    component: ProgressBarOverviewExample,\n    additionalFiles: null,\n    selectorName: null\n  },\n  'progress-spinner-configurable': {\n    title: 'Configurable progress spinner',\n    component: ProgressSpinnerConfigurableExample,\n    additionalFiles: null,\n    selectorName: null\n  },\n  'progress-spinner-overview': {\n    title: 'Basic progress-spinner',\n    component: ProgressSpinnerOverviewExample,\n    additionalFiles: null,\n    selectorName: null\n  },\n  'radio-ng-model': {\n    title: 'Radios with ngModel',\n    component: RadioNgModelExample,\n    additionalFiles: null,\n    selectorName: null\n  },\n  'radio-overview': {\n    title: 'Basic radios',\n    component: RadioOverviewExample,\n    additionalFiles: null,\n    selectorName: null\n  },\n  'select-form': {\n    title: 'Select in a form',\n    component: SelectFormExample,\n    additionalFiles: null,\n    selectorName: null\n  },\n  'select-overview': {\n    title: 'Basic select',\n    component: SelectOverviewExample,\n    additionalFiles: null,\n    selectorName: null\n  },\n  'sidenav-fab': {\n    title: 'Sidenav with a FAB',\n    component: SidenavFabExample,\n    additionalFiles: null,\n    selectorName: null\n  },\n  'sidenav-overview': {\n    title: 'Basic sidenav',\n    component: SidenavOverviewExample,\n    additionalFiles: null,\n    selectorName: null\n  },\n  'slide-toggle-configurable': {\n    title: 'Configurable slide-toggle',\n    component: SlideToggleConfigurableExample,\n    additionalFiles: null,\n    selectorName: null\n  },\n  'slide-toggle-forms': {\n    title: 'Slide-toggle with forms',\n    component: SlideToggleFormsExample,\n    additionalFiles: null,\n    selectorName: null\n  },\n  'slide-toggle-overview': {\n    title: 'Basic slide-toggles',\n    component: SlideToggleOverviewExample,\n    additionalFiles: null,\n    selectorName: null\n  },\n  'slider-configurable': {\n    title: 'Configurable slider',\n    component: SliderConfigurableExample,\n    additionalFiles: null,\n    selectorName: null\n  },\n  'slider-overview': {\n    title: 'Basic slider',\n    component: SliderOverviewExample,\n    additionalFiles: null,\n    selectorName: null\n  },\n  'snack-bar-component': {\n    title: 'Snack-bar with a custom component',\n    component: SnackBarComponentExample,\n    additionalFiles: [\"snack-bar-component-example-snack.html\"],\n    selectorName: 'SnackBarComponentExample, PizzaPartyComponent'\n  },\n  'snack-bar-overview': {\n    title: 'Basic snack-bar',\n    component: SnackBarOverviewExample,\n    additionalFiles: null,\n    selectorName: null\n  },\n  'sort-overview': {\n    title: 'Sorting overview',\n    component: SortOverviewExample,\n    additionalFiles: null,\n    selectorName: null\n  },\n  'stepper-overview': {\n    title: 'Stepper overview',\n    component: StepperOverviewExample,\n    additionalFiles: null,\n    selectorName: null\n  },\n  'table-basic': {\n    title: 'Basic table',\n    component: TableBasicExample,\n    additionalFiles: null,\n    selectorName: null\n  },\n  'table-filtering': {\n    title: 'Table with filtering',\n    component: TableFilteringExample,\n    additionalFiles: null,\n    selectorName: null\n  },\n  'table-http': {\n    title: 'Table retrieving data through HTTP',\n    component: TableHttpExample,\n    additionalFiles: null,\n    selectorName: null\n  },\n  'table-overview': {\n    title: 'Feature-rich data table',\n    component: TableOverviewExample,\n    additionalFiles: null,\n    selectorName: null\n  },\n  'table-pagination': {\n    title: 'Table with pagination',\n    component: TablePaginationExample,\n    additionalFiles: null,\n    selectorName: null\n  },\n  'table-sorting': {\n    title: 'Table with sorting',\n    component: TableSortingExample,\n    additionalFiles: null,\n    selectorName: null\n  },\n  'tabs-overview': {\n    title: 'Basic tabs',\n    component: TabsOverviewExample,\n    additionalFiles: null,\n    selectorName: null\n  },\n  'tabs-template-label': {\n    title: 'Complex Example',\n    component: TabsTemplateLabelExample,\n    additionalFiles: null,\n    selectorName: null\n  },\n  'toolbar-multirow': {\n    title: 'Multi-row toolbar',\n    component: ToolbarMultirowExample,\n    additionalFiles: null,\n    selectorName: null\n  },\n  'toolbar-overview': {\n    title: 'Basic toolbar',\n    component: ToolbarOverviewExample,\n    additionalFiles: null,\n    selectorName: null\n  },\n  'tooltip-overview': {\n    title: 'Basic tooltip',\n    component: TooltipOverviewExample,\n    additionalFiles: null,\n    selectorName: null\n  },\n  'tooltip-position': {\n    title: 'Tooltip with custom position',\n    component: TooltipPositionExample,\n    additionalFiles: null,\n    selectorName: null\n  },\n};\n\nexport const /** @type {?} */ EXAMPLE_LIST = [\n  AutocompleteDisplayExample,\n  AutocompleteFilterExample,\n  AutocompleteOverviewExample,\n  AutocompleteSimpleExample,\n  ButtonOverviewExample,\n  ButtonToggleExclusiveExample,\n  ButtonToggleOverviewExample,\n  ButtonTypesExample,\n  CardFancyExample,\n  CardOverviewExample,\n  CdkTableBasicExample,\n  CheckboxConfigurableExample,\n  CheckboxOverviewExample,\n  ChipsInputExample,\n  ChipsOverviewExample,\n  ChipsStackedExample,\n  DatepickerApiExample,\n  DatepickerFilterExample,\n  DatepickerMinMaxExample,\n  DatepickerOverviewExample,\n  DatepickerStartViewExample,\n  DatepickerTouchExample,\n  DialogContentExampleDialog,DialogContentExample,\n  DialogDataExampleDialog,DialogDataExample,\n  DialogElementsExampleDialog,DialogElementsExample,\n  DialogOverviewExampleDialog,DialogOverviewExample,\n  ExpansionOverviewExample,\n  ExpansionStepsExample,\n  GridListDynamicExample,\n  GridListOverviewExample,\n  IconOverviewExample,\n  IconSvgExample,\n  InputClearableExample,\n  InputErrorsExample,\n  InputFormExample,\n  InputHintExample,\n  InputOverviewExample,\n  InputPrefixSuffixExample,\n  ListOverviewExample,\n  ListSectionsExample,\n  ListSelectionExample,\n  MenuIconsExample,\n  MenuOverviewExample,\n  NestedMenuExample,\n  PaginatorConfigurableExample,\n  PaginatorOverviewExample,\n  ProgressBarConfigurableExample,\n  ProgressBarOverviewExample,\n  ProgressSpinnerConfigurableExample,\n  ProgressSpinnerOverviewExample,\n  RadioNgModelExample,\n  RadioOverviewExample,\n  SelectFormExample,\n  SelectOverviewExample,\n  SidenavFabExample,\n  SidenavOverviewExample,\n  SlideToggleConfigurableExample,\n  SlideToggleFormsExample,\n  SlideToggleOverviewExample,\n  SliderConfigurableExample,\n  SliderOverviewExample,\n  PizzaPartyComponent,SnackBarComponentExample,\n  SnackBarOverviewExample,\n  SortOverviewExample,\n  StepperOverviewExample,\n  TableBasicExample,\n  TableFilteringExample,\n  TableHttpExample,\n  TableOverviewExample,\n  TablePaginationExample,\n  TableSortingExample,\n  TabsOverviewExample,\n  TabsTemplateLabelExample,\n  ToolbarMultirowExample,\n  ToolbarOverviewExample,\n  TooltipOverviewExample,\n  TooltipPositionExample,\n];\nexport class ExampleModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  declarations: EXAMPLE_LIST,\n  entryComponents: EXAMPLE_LIST,\n  imports: [\n    ExampleMaterialModule,\n    FormsModule,\n    ReactiveFormsModule,\n    CommonModule\n  ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ExampleModule_tsickle_Closure_declarations() {\n/** @type {?} */\nExampleModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nExampleModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {Component} from '@angular/core';\n/**\n * \\@title Tooltip with custom position\n */\nexport class TooltipPositionExample {\n  position = 'before';\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'tooltip-position-example',\n  templateUrl: 'tooltip-position-example.html',\n  styleUrls: ['tooltip-position-example.css'],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction TooltipPositionExample_tsickle_Closure_declarations() {\n/** @type {?} */\nTooltipPositionExample.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTooltipPositionExample.ctorParameters;\n/** @type {?} */\nTooltipPositionExample.prototype.position;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {Component} from '@angular/core';\n/**\n * \\@title Basic tooltip\n */\nexport class TooltipOverviewExample {static decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'tooltip-overview-example',\n  templateUrl: 'tooltip-overview-example.html',\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction TooltipOverviewExample_tsickle_Closure_declarations() {\n/** @type {?} */\nTooltipOverviewExample.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTooltipOverviewExample.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {Component} from '@angular/core';\n/**\n * \\@title Basic toolbar\n */\nexport class ToolbarOverviewExample {static decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'toolbar-overview-example',\n  templateUrl: 'toolbar-overview-example.html',\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ToolbarOverviewExample_tsickle_Closure_declarations() {\n/** @type {?} */\nToolbarOverviewExample.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nToolbarOverviewExample.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {Component} from '@angular/core';\n/**\n * \\@title Multi-row toolbar\n */\nexport class ToolbarMultirowExample {static decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'toolbar-multirow-example',\n  templateUrl: 'toolbar-multirow-example.html',\n  styleUrls: ['toolbar-multirow-example.css'],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ToolbarMultirowExample_tsickle_Closure_declarations() {\n/** @type {?} */\nToolbarMultirowExample.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nToolbarMultirowExample.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {Component} from '@angular/core';\n/**\n * \\@title Complex Example\n */\nexport class TabsTemplateLabelExample {static decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'tabs-template-label-example',\n  templateUrl: 'tabs-template-label-example.html',\n  styleUrls: ['./tabs-template-label-example.css']\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction TabsTemplateLabelExample_tsickle_Closure_declarations() {\n/** @type {?} */\nTabsTemplateLabelExample.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTabsTemplateLabelExample.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {Component} from '@angular/core';\n/**\n * \\@title Basic tabs\n */\nexport class TabsOverviewExample {static decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'tabs-overview-example',\n  templateUrl: 'tabs-overview-example.html',\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction TabsOverviewExample_tsickle_Closure_declarations() {\n/** @type {?} */\nTabsOverviewExample.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTabsOverviewExample.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {Component, ViewChild} from '@angular/core';\nimport {DataSource} from '@angular/cdk/collections';\nimport {MatSort} from '@angular/material';\nimport {BehaviorSubject} from 'rxjs/BehaviorSubject';\nimport {Observable} from 'rxjs/Observable';\nimport'rxjs/add/operator/startWith';\nimport'rxjs/add/observable/merge';\nimport'rxjs/add/operator/map';\n/**\n * \\@title Table with sorting\n */\nexport class TableSortingExample {\n  displayedColumns = ['userId', 'userName', 'progress', 'color'];\n  exampleDatabase = new ExampleDatabase();\n  dataSource: ExampleDataSource | null;\n\n   sort: MatSort;\n/**\n * @return {?}\n */\nngOnInit() {\n    this.dataSource = new ExampleDataSource(this.exampleDatabase, this.sort);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'table-sorting-example',\n  styleUrls: ['table-sorting-example.css'],\n  templateUrl: 'table-sorting-example.html',\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'sort': [{ type: ViewChild, args: [MatSort, ] },],\n};\n}\n\nfunction TableSortingExample_tsickle_Closure_declarations() {\n/** @type {?} */\nTableSortingExample.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTableSortingExample.ctorParameters;\n/** @type {?} */\nTableSortingExample.propDecorators;\n/** @type {?} */\nTableSortingExample.prototype.displayedColumns;\n/** @type {?} */\nTableSortingExample.prototype.exampleDatabase;\n/** @type {?} */\nTableSortingExample.prototype.dataSource;\n/** @type {?} */\nTableSortingExample.prototype.sort;\n}\n\n/**\n * Constants used to fill up our data base.\n */\nconst COLORS = ['maroon', 'red', 'orange', 'yellow', 'olive', 'green', 'purple',\n  'fuchsia', 'lime', 'teal', 'aqua', 'blue', 'navy', 'black', 'gray'];\nconst /** @type {?} */ NAMES = ['Maia', 'Asher', 'Olivia', 'Atticus', 'Amelia', 'Jack',\n  'Charlotte', 'Theodore', 'Isla', 'Oliver', 'Isabella', 'Jasper',\n  'Cora', 'Levi', 'Violet', 'Arthur', 'Mia', 'Thomas', 'Elizabeth'];\n\nexport interface UserData {\n  id: string;\n  name: string;\n  progress: string;\n  color: string;\n}\n/**\n * An example database that the data source uses to retrieve data for the table.\n */\nexport class ExampleDatabase {\n/**\n * Stream that emits whenever the data has been modified.\n */\ndataChange: BehaviorSubject<UserData[]> = new BehaviorSubject<UserData[]>([]);\n/**\n * @return {?}\n */\nget data(): UserData[] { return this.dataChange.value; }\nconstructor() {\n    // Fill up the database with 100 users.\n    for (let i = 0; i < 100; i++) { this.addUser(); }\n  }\n/**\n * Adds a new user to the database.\n * @return {?}\n */\naddUser() {\n    const /** @type {?} */ copiedData = this.data.slice();\n    copiedData.push(this.createNewUser());\n    this.dataChange.next(copiedData);\n  }\n/**\n * Builds and returns a new User.\n * @return {?}\n */\nprivate createNewUser() {\n    const /** @type {?} */ name =\n        NAMES[Math.round(Math.random() * (NAMES.length - 1))] + ' ' +\n        NAMES[Math.round(Math.random() * (NAMES.length - 1))].charAt(0) + '.';\n\n    return {\n      id: (this.data.length + 1).toString(),\n      name: name,\n      progress: Math.round(Math.random() * 100).toString(),\n      color: COLORS[Math.round(Math.random() * (COLORS.length - 1))]\n    };\n  }\n}\n\nfunction ExampleDatabase_tsickle_Closure_declarations() {\n/**\n * Stream that emits whenever the data has been modified.\n * @type {?}\n */\nExampleDatabase.prototype.dataChange;\n}\n\n/**\n * Data source to provide what data should be rendered in the table. Note that the data source\n * can retrieve its data in any way. In this case, the data source is provided a reference\n * to a common data base, ExampleDatabase. It is not the data source's responsibility to manage\n * the underlying data. Instead, it only needs to take the data and send the table exactly what\n * should be rendered.\n */\nexport class ExampleDataSource extends DataSource<any> {\n/**\n * @param {?} _exampleDatabase\n * @param {?} _sort\n */\nconstructor(private _exampleDatabase: ExampleDatabase,\nprivate _sort: MatSort) {\n    super();\n  }\n/**\n * Connect function called by the table to retrieve one stream containing the data to render.\n * @return {?}\n */\nconnect(): Observable<UserData[]> {\n    const /** @type {?} */ displayDataChanges = [\n      this._exampleDatabase.dataChange,\n      this._sort.sortChange,\n    ];\n\n    return Observable.merge(...displayDataChanges).map(() => {\n      return this.getSortedData();\n    });\n  }\n/**\n * @return {?}\n */\ndisconnect() {}\n/**\n * Returns a sorted copy of the database data.\n * @return {?}\n */\ngetSortedData(): UserData[] {\n    const /** @type {?} */ data = this._exampleDatabase.data.slice();\n    if (!this._sort.active || this._sort.direction == '') { return data; }\n\n    return data.sort((a, b) => {\n      let /** @type {?} */ propertyA: number|string = '';\n      let /** @type {?} */ propertyB: number|string = '';\n\n      switch (this._sort.active) {\n        case 'userId': [propertyA, propertyB] = [a.id, b.id]; break;\n        case 'userName': [propertyA, propertyB] = [a.name, b.name]; break;\n        case 'progress': [propertyA, propertyB] = [a.progress, b.progress]; break;\n        case 'color': [propertyA, propertyB] = [a.color, b.color]; break;\n      }\n\n      let /** @type {?} */ valueA = isNaN(+propertyA) ? propertyA : +propertyA;\n      let /** @type {?} */ valueB = isNaN(+propertyB) ? propertyB : +propertyB;\n\n      return (valueA < valueB ? -1 : 1) * (this._sort.direction == 'asc' ? 1 : -1);\n    });\n  }\n}\n\nfunction ExampleDataSource_tsickle_Closure_declarations() {\n/** @type {?} */\nExampleDataSource.prototype._exampleDatabase;\n/** @type {?} */\nExampleDataSource.prototype._sort;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {Component, ViewChild} from '@angular/core';\nimport {DataSource} from '@angular/cdk/collections';\nimport {MatPaginator} from '@angular/material';\nimport {BehaviorSubject} from 'rxjs/BehaviorSubject';\nimport {Observable} from 'rxjs/Observable';\nimport'rxjs/add/operator/startWith';\nimport'rxjs/add/observable/merge';\nimport'rxjs/add/operator/map';\n/**\n * \\@title Table with pagination\n */\nexport class TablePaginationExample {\n  displayedColumns = ['userId', 'userName', 'progress', 'color'];\n  exampleDatabase = new ExampleDatabase();\n  dataSource: ExampleDataSource | null;\n\n   paginator: MatPaginator;\n/**\n * @return {?}\n */\nngOnInit() {\n    this.dataSource = new ExampleDataSource(this.exampleDatabase, this.paginator);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'table-pagination-example',\n  styleUrls: ['table-pagination-example.css'],\n  templateUrl: 'table-pagination-example.html',\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'paginator': [{ type: ViewChild, args: [MatPaginator, ] },],\n};\n}\n\nfunction TablePaginationExample_tsickle_Closure_declarations() {\n/** @type {?} */\nTablePaginationExample.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTablePaginationExample.ctorParameters;\n/** @type {?} */\nTablePaginationExample.propDecorators;\n/** @type {?} */\nTablePaginationExample.prototype.displayedColumns;\n/** @type {?} */\nTablePaginationExample.prototype.exampleDatabase;\n/** @type {?} */\nTablePaginationExample.prototype.dataSource;\n/** @type {?} */\nTablePaginationExample.prototype.paginator;\n}\n\n/**\n * Constants used to fill up our data base.\n */\nconst COLORS = ['maroon', 'red', 'orange', 'yellow', 'olive', 'green', 'purple',\n  'fuchsia', 'lime', 'teal', 'aqua', 'blue', 'navy', 'black', 'gray'];\nconst /** @type {?} */ NAMES = ['Maia', 'Asher', 'Olivia', 'Atticus', 'Amelia', 'Jack',\n  'Charlotte', 'Theodore', 'Isla', 'Oliver', 'Isabella', 'Jasper',\n  'Cora', 'Levi', 'Violet', 'Arthur', 'Mia', 'Thomas', 'Elizabeth'];\n\nexport interface UserData {\n  id: string;\n  name: string;\n  progress: string;\n  color: string;\n}\n/**\n * An example database that the data source uses to retrieve data for the table.\n */\nexport class ExampleDatabase {\n/**\n * Stream that emits whenever the data has been modified.\n */\ndataChange: BehaviorSubject<UserData[]> = new BehaviorSubject<UserData[]>([]);\n/**\n * @return {?}\n */\nget data(): UserData[] { return this.dataChange.value; }\nconstructor() {\n    // Fill up the database with 100 users.\n    for (let i = 0; i < 100; i++) { this.addUser(); }\n  }\n/**\n * Adds a new user to the database.\n * @return {?}\n */\naddUser() {\n    const /** @type {?} */ copiedData = this.data.slice();\n    copiedData.push(this.createNewUser());\n    this.dataChange.next(copiedData);\n  }\n/**\n * Builds and returns a new User.\n * @return {?}\n */\nprivate createNewUser() {\n    const /** @type {?} */ name =\n        NAMES[Math.round(Math.random() * (NAMES.length - 1))] + ' ' +\n        NAMES[Math.round(Math.random() * (NAMES.length - 1))].charAt(0) + '.';\n\n    return {\n      id: (this.data.length + 1).toString(),\n      name: name,\n      progress: Math.round(Math.random() * 100).toString(),\n      color: COLORS[Math.round(Math.random() * (COLORS.length - 1))]\n    };\n  }\n}\n\nfunction ExampleDatabase_tsickle_Closure_declarations() {\n/**\n * Stream that emits whenever the data has been modified.\n * @type {?}\n */\nExampleDatabase.prototype.dataChange;\n}\n\n/**\n * Data source to provide what data should be rendered in the table. Note that the data source\n * can retrieve its data in any way. In this case, the data source is provided a reference\n * to a common data base, ExampleDatabase. It is not the data source's responsibility to manage\n * the underlying data. Instead, it only needs to take the data and send the table exactly what\n * should be rendered.\n */\nexport class ExampleDataSource extends DataSource<any> {\n/**\n * @param {?} _exampleDatabase\n * @param {?} _paginator\n */\nconstructor(private _exampleDatabase: ExampleDatabase,\nprivate _paginator: MatPaginator) {\n    super();\n  }\n/**\n * Connect function called by the table to retrieve one stream containing the data to render.\n * @return {?}\n */\nconnect(): Observable<UserData[]> {\n    const /** @type {?} */ displayDataChanges = [\n      this._exampleDatabase.dataChange,\n      this._paginator.page,\n    ];\n\n    return Observable.merge(...displayDataChanges).map(() => {\n      const /** @type {?} */ data = this._exampleDatabase.data.slice();\n\n      // Grab the page's slice of data.\n      const /** @type {?} */ startIndex = this._paginator.pageIndex * this._paginator.pageSize;\n      return data.splice(startIndex, this._paginator.pageSize);\n    });\n  }\n/**\n * @return {?}\n */\ndisconnect() {}\n}\n\nfunction ExampleDataSource_tsickle_Closure_declarations() {\n/** @type {?} */\nExampleDataSource.prototype._exampleDatabase;\n/** @type {?} */\nExampleDataSource.prototype._paginator;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {Component, ElementRef, ViewChild} from '@angular/core';\nimport {DataSource} from '@angular/cdk/collections';\nimport {MatPaginator, MatSort} from '@angular/material';\nimport {SelectionModel} from '@angular/cdk/collections';\nimport {BehaviorSubject} from 'rxjs/BehaviorSubject';\nimport {Observable} from 'rxjs/Observable';\nimport'rxjs/add/operator/startWith';\nimport'rxjs/add/observable/merge';\nimport'rxjs/add/observable/fromEvent';\nimport'rxjs/add/operator/map';\nimport'rxjs/add/operator/distinctUntilChanged';\nimport'rxjs/add/operator/debounceTime';\n/**\n * \\@title Feature-rich data table\n */\nexport class TableOverviewExample {\n  displayedColumns = ['select', 'userId', 'userName', 'progress', 'color'];\n  exampleDatabase = new ExampleDatabase();\n  selection = new SelectionModel<string>(true, []);\n  dataSource: ExampleDataSource | null;\n\n   paginator: MatPaginator;\n   sort: MatSort;\n   filter: ElementRef;\n/**\n * @return {?}\n */\nngOnInit() {\n    this.dataSource = new ExampleDataSource(this.exampleDatabase, this.paginator, this.sort);\n    Observable.fromEvent(this.filter.nativeElement, 'keyup')\n        .debounceTime(150)\n        .distinctUntilChanged()\n        .subscribe(() => {\n          if (!this.dataSource) { return; }\n          this.dataSource.filter = this.filter.nativeElement.value;\n        });\n  }\n/**\n * @return {?}\n */\nisAllSelected(): boolean {\n    if (!this.dataSource) { return false; }\n    if (this.selection.isEmpty()) { return false; }\n\n    if (this.filter.nativeElement.value) {\n      return this.selection.selected.length == this.dataSource.renderedData.length;\n    } else {\n      return this.selection.selected.length == this.exampleDatabase.data.length;\n    }\n  }\n/**\n * @return {?}\n */\nmasterToggle() {\n    if (!this.dataSource) { return; }\n\n    if (this.isAllSelected()) {\n      this.selection.clear();\n    } else if (this.filter.nativeElement.value) {\n      this.dataSource.renderedData.forEach(data => this.selection.select(data.id));\n    } else {\n      this.exampleDatabase.data.forEach(data => this.selection.select(data.id));\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'table-overview-example',\n  styleUrls: ['table-overview-example.css'],\n  templateUrl: 'table-overview-example.html',\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'paginator': [{ type: ViewChild, args: [MatPaginator, ] },],\n'sort': [{ type: ViewChild, args: [MatSort, ] },],\n'filter': [{ type: ViewChild, args: ['filter', ] },],\n};\n}\n\nfunction TableOverviewExample_tsickle_Closure_declarations() {\n/** @type {?} */\nTableOverviewExample.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTableOverviewExample.ctorParameters;\n/** @type {?} */\nTableOverviewExample.propDecorators;\n/** @type {?} */\nTableOverviewExample.prototype.displayedColumns;\n/** @type {?} */\nTableOverviewExample.prototype.exampleDatabase;\n/** @type {?} */\nTableOverviewExample.prototype.selection;\n/** @type {?} */\nTableOverviewExample.prototype.dataSource;\n/** @type {?} */\nTableOverviewExample.prototype.paginator;\n/** @type {?} */\nTableOverviewExample.prototype.sort;\n/** @type {?} */\nTableOverviewExample.prototype.filter;\n}\n\n/**\n * Constants used to fill up our data base.\n */\nconst COLORS = ['maroon', 'red', 'orange', 'yellow', 'olive', 'green', 'purple',\n  'fuchsia', 'lime', 'teal', 'aqua', 'blue', 'navy', 'black', 'gray'];\nconst /** @type {?} */ NAMES = ['Maia', 'Asher', 'Olivia', 'Atticus', 'Amelia', 'Jack',\n  'Charlotte', 'Theodore', 'Isla', 'Oliver', 'Isabella', 'Jasper',\n  'Cora', 'Levi', 'Violet', 'Arthur', 'Mia', 'Thomas', 'Elizabeth'];\n\nexport interface UserData {\n  id: string;\n  name: string;\n  progress: string;\n  color: string;\n}\n/**\n * An example database that the data source uses to retrieve data for the table.\n */\nexport class ExampleDatabase {\n/**\n * Stream that emits whenever the data has been modified.\n */\ndataChange: BehaviorSubject<UserData[]> = new BehaviorSubject<UserData[]>([]);\n/**\n * @return {?}\n */\nget data(): UserData[] { return this.dataChange.value; }\nconstructor() {\n    // Fill up the database with 100 users.\n    for (let i = 0; i < 100; i++) { this.addUser(); }\n  }\n/**\n * Adds a new user to the database.\n * @return {?}\n */\naddUser() {\n    const /** @type {?} */ copiedData = this.data.slice();\n    copiedData.push(this.createNewUser());\n    this.dataChange.next(copiedData);\n  }\n/**\n * Builds and returns a new User.\n * @return {?}\n */\nprivate createNewUser() {\n    const /** @type {?} */ name =\n        NAMES[Math.round(Math.random() * (NAMES.length - 1))] + ' ' +\n        NAMES[Math.round(Math.random() * (NAMES.length - 1))].charAt(0) + '.';\n\n    return {\n      id: (this.data.length + 1).toString(),\n      name: name,\n      progress: Math.round(Math.random() * 100).toString(),\n      color: COLORS[Math.round(Math.random() * (COLORS.length - 1))]\n    };\n  }\n}\n\nfunction ExampleDatabase_tsickle_Closure_declarations() {\n/**\n * Stream that emits whenever the data has been modified.\n * @type {?}\n */\nExampleDatabase.prototype.dataChange;\n}\n\n/**\n * Data source to provide what data should be rendered in the table. Note that the data source\n * can retrieve its data in any way. In this case, the data source is provided a reference\n * to a common data base, ExampleDatabase. It is not the data source's responsibility to manage\n * the underlying data. Instead, it only needs to take the data and send the table exactly what\n * should be rendered.\n */\nexport class ExampleDataSource extends DataSource<any> {\n  _filterChange = new BehaviorSubject('');\n/**\n * @return {?}\n */\nget filter(): string { return this._filterChange.value; }\n/**\n * @param {?} filter\n * @return {?}\n */\nset filter(filter: string) { this._filterChange.next(filter); }\n\n  filteredData: UserData[] = [];\n  renderedData: UserData[] = [];\n/**\n * @param {?} _exampleDatabase\n * @param {?} _paginator\n * @param {?} _sort\n */\nconstructor(private _exampleDatabase: ExampleDatabase,\nprivate _paginator: MatPaginator,\nprivate _sort: MatSort) {\n    super();\n\n    // Reset to the first page when the user changes the filter.\n    this._filterChange.subscribe(() => this._paginator.pageIndex = 0);\n  }\n/**\n * Connect function called by the table to retrieve one stream containing the data to render.\n * @return {?}\n */\nconnect(): Observable<UserData[]> {\n    // Listen for any changes in the base data, sorting, filtering, or pagination\n    const /** @type {?} */ displayDataChanges = [\n      this._exampleDatabase.dataChange,\n      this._sort.sortChange,\n      this._filterChange,\n      this._paginator.page,\n    ];\n\n    return Observable.merge(...displayDataChanges).map(() => {\n      // Filter data\n      this.filteredData = this._exampleDatabase.data.slice().filter((item: UserData) => {\n        let /** @type {?} */ searchStr = (item.name + item.color).toLowerCase();\n        return searchStr.indexOf(this.filter.toLowerCase()) != -1;\n      });\n\n      // Sort filtered data\n      const /** @type {?} */ sortedData = this.sortData(this.filteredData.slice());\n\n      // Grab the page's slice of the filtered sorted data.\n      const /** @type {?} */ startIndex = this._paginator.pageIndex * this._paginator.pageSize;\n      this.renderedData = sortedData.splice(startIndex, this._paginator.pageSize);\n      return this.renderedData;\n    });\n  }\n/**\n * @return {?}\n */\ndisconnect() {}\n/**\n * Returns a sorted copy of the database data.\n * @param {?} data\n * @return {?}\n */\nsortData(data: UserData[]): UserData[] {\n    if (!this._sort.active || this._sort.direction == '') { return data; }\n\n    return data.sort((a, b) => {\n      let /** @type {?} */ propertyA: number|string = '';\n      let /** @type {?} */ propertyB: number|string = '';\n\n      switch (this._sort.active) {\n        case 'userId': [propertyA, propertyB] = [a.id, b.id]; break;\n        case 'userName': [propertyA, propertyB] = [a.name, b.name]; break;\n        case 'progress': [propertyA, propertyB] = [a.progress, b.progress]; break;\n        case 'color': [propertyA, propertyB] = [a.color, b.color]; break;\n      }\n\n      let /** @type {?} */ valueA = isNaN(+propertyA) ? propertyA : +propertyA;\n      let /** @type {?} */ valueB = isNaN(+propertyB) ? propertyB : +propertyB;\n\n      return (valueA < valueB ? -1 : 1) * (this._sort.direction == 'asc' ? 1 : -1);\n    });\n  }\n}\n\nfunction ExampleDataSource_tsickle_Closure_declarations() {\n/** @type {?} */\nExampleDataSource.prototype._filterChange;\n/** @type {?} */\nExampleDataSource.prototype.filteredData;\n/** @type {?} */\nExampleDataSource.prototype.renderedData;\n/** @type {?} */\nExampleDataSource.prototype._exampleDatabase;\n/** @type {?} */\nExampleDataSource.prototype._paginator;\n/** @type {?} */\nExampleDataSource.prototype._sort;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {Http} from '@angular/http';\nimport {DataSource} from '@angular/cdk/collections';\nimport {MatPaginator, MatSort} from '@angular/material';\nimport {Observable} from 'rxjs/Observable';\nimport'rxjs/add/observable/merge';\nimport'rxjs/add/observable/of';\nimport'rxjs/add/operator/catch';\nimport'rxjs/add/operator/map';\nimport'rxjs/add/operator/startWith';\nimport'rxjs/add/operator/switchMap';\n/**\n * \\@title Table retrieving data through HTTP\n */\nexport class TableHttpExample implements OnInit {\n  displayedColumns = ['created_at', 'state', 'number', 'title'];\n  exampleDatabase: ExampleHttpDao | null;\n  dataSource: ExampleDataSource | null;\n\n   paginator: MatPaginator;\n   sort: MatSort;\n/**\n * @param {?} http\n */\nconstructor(private http: Http) {}\n/**\n * @return {?}\n */\nngOnInit() {\n    this.exampleDatabase = new ExampleHttpDao(this.http);\n    this.dataSource = new ExampleDataSource( /** @type {?} */((\n      this.exampleDatabase)), this.paginator, this.sort);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'table-http-example',\n  styleUrls: ['table-http-example.css'],\n  templateUrl: 'table-http-example.html',\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Http, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'paginator': [{ type: ViewChild, args: [MatPaginator, ] },],\n'sort': [{ type: ViewChild, args: [MatSort, ] },],\n};\n}\n\nfunction TableHttpExample_tsickle_Closure_declarations() {\n/** @type {?} */\nTableHttpExample.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTableHttpExample.ctorParameters;\n/** @type {?} */\nTableHttpExample.propDecorators;\n/** @type {?} */\nTableHttpExample.prototype.displayedColumns;\n/** @type {?} */\nTableHttpExample.prototype.exampleDatabase;\n/** @type {?} */\nTableHttpExample.prototype.dataSource;\n/** @type {?} */\nTableHttpExample.prototype.paginator;\n/** @type {?} */\nTableHttpExample.prototype.sort;\n/** @type {?} */\nTableHttpExample.prototype.http;\n}\n\n\nexport interface GithubApi {\n  items: GithubIssue[];\n  total_count: number;\n}\n\nexport interface GithubIssue {\n  created_at: string;\n  number: string;\n  state: string;\n  title: string;\n}\n/**\n * An example database that the data source uses to retrieve data for the table.\n */\nexport class ExampleHttpDao {\n/**\n * @param {?} http\n */\nconstructor(private http: Http) {}\n/**\n * @param {?} sort\n * @param {?} order\n * @param {?} page\n * @return {?}\n */\ngetRepoIssues(sort: string, order: string, page: number): Observable<GithubApi> {\n    const /** @type {?} */ href = 'https://api.github.com/search/issues';\n    const /** @type {?} */ requestUrl =\n      `${href}?q=repo:angular/material2&sort=${sort}&order=${order}&page=${page + 1}`;\n\n    return this.http.get(requestUrl)\n                    .map(response => /** @type {?} */(( response.json() as GithubApi)));\n  }\n}\n\nfunction ExampleHttpDao_tsickle_Closure_declarations() {\n/** @type {?} */\nExampleHttpDao.prototype.http;\n}\n\n/**\n * Data source to provide what data should be rendered in the table. Note that the data source\n * can retrieve its data in any way. In this case, the data source is provided a reference\n * to a common data base, ExampleHttpDao. It is not the data source's responsibility to manage\n * the underlying data. Instead, it only needs to take the data and send the table exactly what\n * should be rendered.\n */\nexport class ExampleDataSource extends DataSource<GithubIssue> {\n  // The number of issues returned by github matching the query.\n  resultsLength = 0;\n  isLoadingResults = false;\n  isRateLimitReached = false;\n/**\n * @param {?} exampleDatabase\n * @param {?} paginator\n * @param {?} sort\n */\nconstructor(private exampleDatabase: ExampleHttpDao,\nprivate paginator: MatPaginator,\nprivate sort: MatSort) {\n    super();\n  }\n/**\n * Connect function called by the table to retrieve one stream containing the data to render.\n * @return {?}\n */\nconnect(): Observable<GithubIssue[]> {\n    const /** @type {?} */ displayDataChanges = [\n      this.sort.sortChange,\n      this.paginator.page\n    ];\n\n    // If the user changes the sort order, reset back to the first page.\n    this.sort.sortChange.subscribe(() => this.paginator.pageIndex = 0);\n\n    return Observable.merge(...displayDataChanges)\n      .startWith(null)\n      .switchMap(() => {\n        this.isLoadingResults = true;\n        return this.exampleDatabase.getRepoIssues(\n          this.sort.active, this.sort.direction, this.paginator.pageIndex);\n      })\n      .map(data => {\n        // Flip flag to show that loading has finished.\n        this.isLoadingResults = false;\n        this.isRateLimitReached = false;\n        this.resultsLength = data.total_count;\n\n        return data.items;\n      })\n      .catch(() => {\n        this.isLoadingResults = false;\n        // Catch if the GitHub API has reached its rate limit. Return empty data.\n        this.isRateLimitReached = true;\n        return Observable.of([]);\n      });\n  }\n/**\n * @return {?}\n */\ndisconnect() {}\n}\n\nfunction ExampleDataSource_tsickle_Closure_declarations() {\n/** @type {?} */\nExampleDataSource.prototype.resultsLength;\n/** @type {?} */\nExampleDataSource.prototype.isLoadingResults;\n/** @type {?} */\nExampleDataSource.prototype.isRateLimitReached;\n/** @type {?} */\nExampleDataSource.prototype.exampleDatabase;\n/** @type {?} */\nExampleDataSource.prototype.paginator;\n/** @type {?} */\nExampleDataSource.prototype.sort;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {Component, ElementRef, ViewChild} from '@angular/core';\nimport {DataSource} from '@angular/cdk/collections';\nimport {BehaviorSubject} from 'rxjs/BehaviorSubject';\nimport {Observable} from 'rxjs/Observable';\nimport'rxjs/add/operator/startWith';\nimport'rxjs/add/observable/merge';\nimport'rxjs/add/operator/map';\nimport'rxjs/add/operator/debounceTime';\nimport'rxjs/add/operator/distinctUntilChanged';\nimport'rxjs/add/observable/fromEvent';\n/**\n * \\@title Table with filtering\n */\nexport class TableFilteringExample {\n  displayedColumns = ['userId', 'userName', 'progress', 'color'];\n  exampleDatabase = new ExampleDatabase();\n  dataSource: ExampleDataSource | null;\n\n   filter: ElementRef;\n/**\n * @return {?}\n */\nngOnInit() {\n    this.dataSource = new ExampleDataSource(this.exampleDatabase);\n    Observable.fromEvent(this.filter.nativeElement, 'keyup')\n        .debounceTime(150)\n        .distinctUntilChanged()\n        .subscribe(() => {\n          if (!this.dataSource) { return; }\n          this.dataSource.filter = this.filter.nativeElement.value;\n        });\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'table-filtering-example',\n  styleUrls: ['table-filtering-example.css'],\n  templateUrl: 'table-filtering-example.html',\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'filter': [{ type: ViewChild, args: ['filter', ] },],\n};\n}\n\nfunction TableFilteringExample_tsickle_Closure_declarations() {\n/** @type {?} */\nTableFilteringExample.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTableFilteringExample.ctorParameters;\n/** @type {?} */\nTableFilteringExample.propDecorators;\n/** @type {?} */\nTableFilteringExample.prototype.displayedColumns;\n/** @type {?} */\nTableFilteringExample.prototype.exampleDatabase;\n/** @type {?} */\nTableFilteringExample.prototype.dataSource;\n/** @type {?} */\nTableFilteringExample.prototype.filter;\n}\n\n/**\n * Constants used to fill up our data base.\n */\nconst COLORS = ['maroon', 'red', 'orange', 'yellow', 'olive', 'green', 'purple',\n  'fuchsia', 'lime', 'teal', 'aqua', 'blue', 'navy', 'black', 'gray'];\nconst /** @type {?} */ NAMES = ['Maia', 'Asher', 'Olivia', 'Atticus', 'Amelia', 'Jack',\n  'Charlotte', 'Theodore', 'Isla', 'Oliver', 'Isabella', 'Jasper',\n  'Cora', 'Levi', 'Violet', 'Arthur', 'Mia', 'Thomas', 'Elizabeth'];\n\nexport interface UserData {\n  id: string;\n  name: string;\n  progress: string;\n  color: string;\n}\n/**\n * An example database that the data source uses to retrieve data for the table.\n */\nexport class ExampleDatabase {\n/**\n * Stream that emits whenever the data has been modified.\n */\ndataChange: BehaviorSubject<UserData[]> = new BehaviorSubject<UserData[]>([]);\n/**\n * @return {?}\n */\nget data(): UserData[] { return this.dataChange.value; }\nconstructor() {\n    // Fill up the database with 100 users.\n    for (let i = 0; i < 100; i++) { this.addUser(); }\n  }\n/**\n * Adds a new user to the database.\n * @return {?}\n */\naddUser() {\n    const /** @type {?} */ copiedData = this.data.slice();\n    copiedData.push(this.createNewUser());\n    this.dataChange.next(copiedData);\n  }\n/**\n * Builds and returns a new User.\n * @return {?}\n */\nprivate createNewUser() {\n    const /** @type {?} */ name =\n        NAMES[Math.round(Math.random() * (NAMES.length - 1))] + ' ' +\n        NAMES[Math.round(Math.random() * (NAMES.length - 1))].charAt(0) + '.';\n\n    return {\n      id: (this.data.length + 1).toString(),\n      name: name,\n      progress: Math.round(Math.random() * 100).toString(),\n      color: COLORS[Math.round(Math.random() * (COLORS.length - 1))]\n    };\n  }\n}\n\nfunction ExampleDatabase_tsickle_Closure_declarations() {\n/**\n * Stream that emits whenever the data has been modified.\n * @type {?}\n */\nExampleDatabase.prototype.dataChange;\n}\n\n/**\n * Data source to provide what data should be rendered in the table. Note that the data source\n * can retrieve its data in any way. In this case, the data source is provided a reference\n * to a common data base, ExampleDatabase. It is not the data source's responsibility to manage\n * the underlying data. Instead, it only needs to take the data and send the table exactly what\n * should be rendered.\n */\nexport class ExampleDataSource extends DataSource<any> {\n  _filterChange = new BehaviorSubject('');\n/**\n * @return {?}\n */\nget filter(): string { return this._filterChange.value; }\n/**\n * @param {?} filter\n * @return {?}\n */\nset filter(filter: string) { this._filterChange.next(filter); }\n/**\n * @param {?} _exampleDatabase\n */\nconstructor(private _exampleDatabase: ExampleDatabase) {\n    super();\n  }\n/**\n * Connect function called by the table to retrieve one stream containing the data to render.\n * @return {?}\n */\nconnect(): Observable<UserData[]> {\n    const /** @type {?} */ displayDataChanges = [\n      this._exampleDatabase.dataChange,\n      this._filterChange,\n    ];\n\n    return Observable.merge(...displayDataChanges).map(() => {\n      return this._exampleDatabase.data.slice().filter((item: UserData) => {\n        let /** @type {?} */ searchStr = (item.name + item.color).toLowerCase();\n        return searchStr.indexOf(this.filter.toLowerCase()) != -1;\n      });\n    });\n  }\n/**\n * @return {?}\n */\ndisconnect() {}\n}\n\nfunction ExampleDataSource_tsickle_Closure_declarations() {\n/** @type {?} */\nExampleDataSource.prototype._filterChange;\n/** @type {?} */\nExampleDataSource.prototype._exampleDatabase;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {Component} from '@angular/core';\nimport {DataSource} from '@angular/cdk/collections';\nimport {Observable} from 'rxjs/Observable';\nimport'rxjs/add/observable/of';\n/**\n * \\@title Basic table\n */\nexport class TableBasicExample {\n  displayedColumns = ['position', 'name', 'weight', 'symbol'];\n  dataSource = new ExampleDataSource();\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'table-basic-example',\n  styleUrls: ['table-basic-example.css'],\n  templateUrl: 'table-basic-example.html',\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction TableBasicExample_tsickle_Closure_declarations() {\n/** @type {?} */\nTableBasicExample.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTableBasicExample.ctorParameters;\n/** @type {?} */\nTableBasicExample.prototype.displayedColumns;\n/** @type {?} */\nTableBasicExample.prototype.dataSource;\n}\n\n\nexport interface Element {\n  name: string;\n  position: number;\n  weight: number;\n  symbol: string;\n}\n\nconst /** @type {?} */ data: Element[] = [\n  {position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H'},\n  {position: 2, name: 'Helium', weight: 4.0026, symbol: 'He'},\n  {position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li'},\n  {position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be'},\n  {position: 5, name: 'Boron', weight: 10.811, symbol: 'B'},\n  {position: 6, name: 'Carbon', weight: 12.0107, symbol: 'C'},\n  {position: 7, name: 'Nitrogen', weight: 14.0067, symbol: 'N'},\n  {position: 8, name: 'Oxygen', weight: 15.9994, symbol: 'O'},\n  {position: 9, name: 'Fluorine', weight: 18.9984, symbol: 'F'},\n  {position: 10, name: 'Neon', weight: 20.1797, symbol: 'Ne'},\n  {position: 11, name: 'Sodium', weight: 22.9897, symbol: 'Na'},\n  {position: 12, name: 'Magnesium', weight: 24.305, symbol: 'Mg'},\n  {position: 13, name: 'Aluminum', weight: 26.9815, symbol: 'Al'},\n  {position: 14, name: 'Silicon', weight: 28.0855, symbol: 'Si'},\n  {position: 15, name: 'Phosphorus', weight: 30.9738, symbol: 'P'},\n  {position: 16, name: 'Sulfur', weight: 32.065, symbol: 'S'},\n  {position: 17, name: 'Chlorine', weight: 35.453, symbol: 'Cl'},\n  {position: 18, name: 'Argon', weight: 39.948, symbol: 'Ar'},\n  {position: 19, name: 'Potassium', weight: 39.0983, symbol: 'K'},\n  {position: 20, name: 'Calcium', weight: 40.078, symbol: 'Ca'},\n];\n/**\n * Data source to provide what data should be rendered in the table. The observable provided\n * in connect should emit exactly the data that should be rendered by the table. If the data is\n * altered, the observable should emit that new set of data on the stream. In our case here,\n * we return a stream that contains only one set of data that doesn't change.\n */\nexport class ExampleDataSource extends DataSource<any> {\n/**\n * Connect function called by the table to retrieve one stream containing the data to render.\n * @return {?}\n */\nconnect(): Observable<Element[]> {\n    return Observable.of(data);\n  }\n/**\n * @return {?}\n */\ndisconnect() {}\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {Component} from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\n/**\n * \\@title Stepper overview\n */\nexport class StepperOverviewExample {\n  isLinear = false;\n  firstFormGroup: FormGroup;\n  secondFormGroup: FormGroup;\n/**\n * @param {?} _formBuilder\n */\nconstructor(private _formBuilder: FormBuilder) { }\n/**\n * @return {?}\n */\nngOnInit() {\n    this.firstFormGroup = this._formBuilder.group({\n      firstCtrl: ['', Validators.required]\n    });\n    this.secondFormGroup = this._formBuilder.group({\n      secondCtrl: ['', Validators.required]\n    });\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'stepper-overview-example',\n  templateUrl: 'stepper-overview-example.html',\n  styleUrls: ['stepper-overview-example.css']\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: FormBuilder, },\n];\n}\n\nfunction StepperOverviewExample_tsickle_Closure_declarations() {\n/** @type {?} */\nStepperOverviewExample.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nStepperOverviewExample.ctorParameters;\n/** @type {?} */\nStepperOverviewExample.prototype.isLinear;\n/** @type {?} */\nStepperOverviewExample.prototype.firstFormGroup;\n/** @type {?} */\nStepperOverviewExample.prototype.secondFormGroup;\n/** @type {?} */\nStepperOverviewExample.prototype._formBuilder;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {Component} from '@angular/core';\nimport {Sort} from '@angular/material';\n/**\n * \\@title Sorting overview\n */\nexport class SortOverviewExample {\n  desserts = [\n    {name: 'Frozen yogurt', calories: '159', fat: '6', carbs: '24', protein: '4'},\n    {name: 'Ice cream sandwich', calories: '237', fat: '9', carbs: '37', protein: '4'},\n    {name: 'Eclair', calories: '262', fat: '16', carbs: '24', protein: '6'},\n    {name: 'Cupcake', calories: '305', fat: '4', carbs: '67', protein: '4'},\n    {name: 'Gingerbread', calories: '356', fat: '16', carbs: '49', protein: '4'},\n  ];\n\n  sortedData;\nconstructor() {\n    this.sortedData = this.desserts.slice();\n  }\n/**\n * @param {?} sort\n * @return {?}\n */\nsortData(sort: Sort) {\n    const /** @type {?} */ data = this.desserts.slice();\n    if (!sort.active || sort.direction == '') {\n      this.sortedData = data;\n      return;\n    }\n\n    this.sortedData = data.sort((a, b) => {\n      let /** @type {?} */ isAsc = sort.direction == 'asc';\n      switch (sort.active) {\n        case 'name': return compare(a.name, b.name, isAsc);\n        case 'calories': return compare(+a.calories, +b.calories, isAsc);\n        case 'fat': return compare(+a.fat, +b.fat, isAsc);\n        case 'carbs': return compare(+a.carbs, +b.carbs, isAsc);\n        case 'protein': return compare(+a.protein, +b.protein, isAsc);\n        default: return 0;\n      }\n    });\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'sort-overview-example',\n  templateUrl: 'sort-overview-example.html',\n  styleUrls: ['sort-overview-example.css'],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction SortOverviewExample_tsickle_Closure_declarations() {\n/** @type {?} */\nSortOverviewExample.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSortOverviewExample.ctorParameters;\n/** @type {?} */\nSortOverviewExample.prototype.desserts;\n/** @type {?} */\nSortOverviewExample.prototype.sortedData;\n}\n\n/**\n * @param {?} a\n * @param {?} b\n * @param {?} isAsc\n * @return {?}\n */\nfunction compare(a, b, isAsc) {\n  return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {Component} from '@angular/core';\nimport {MatSnackBar} from '@angular/material';\n/**\n * \\@title Basic snack-bar\n */\nexport class SnackBarOverviewExample {\n/**\n * @param {?} snackBar\n */\nconstructor(public snackBar: MatSnackBar) {}\n/**\n * @param {?} message\n * @param {?} action\n * @return {?}\n */\nopenSnackBar(message: string, action: string) {\n    this.snackBar.open(message, action, {\n      duration: 2000,\n    });\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'snack-bar-overview-example',\n  templateUrl: 'snack-bar-overview-example.html',\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: MatSnackBar, },\n];\n}\n\nfunction SnackBarOverviewExample_tsickle_Closure_declarations() {\n/** @type {?} */\nSnackBarOverviewExample.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSnackBarOverviewExample.ctorParameters;\n/** @type {?} */\nSnackBarOverviewExample.prototype.snackBar;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {Component} from '@angular/core';\nimport {MatSnackBar} from '@angular/material';\n/**\n * \\@title Snack-bar with a custom component\n */\nexport class SnackBarComponentExample {\n/**\n * @param {?} snackBar\n */\nconstructor(public snackBar: MatSnackBar) {}\n/**\n * @return {?}\n */\nopenSnackBar() {\n    this.snackBar.openFromComponent(PizzaPartyComponent, {\n      duration: 500,\n    });\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'snack-bar-component-example',\n  templateUrl: 'snack-bar-component-example.html',\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: MatSnackBar, },\n];\n}\n\nfunction SnackBarComponentExample_tsickle_Closure_declarations() {\n/** @type {?} */\nSnackBarComponentExample.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSnackBarComponentExample.ctorParameters;\n/** @type {?} */\nSnackBarComponentExample.prototype.snackBar;\n}\n\nexport class PizzaPartyComponent {static decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'snack-bar-component-example-snack',\n  templateUrl: 'snack-bar-component-example-snack.html',\n  styleUrls: ['snack-bar-component-example-snack.css'],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction PizzaPartyComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nPizzaPartyComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nPizzaPartyComponent.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {Component} from '@angular/core';\n/**\n * \\@title Basic slider\n */\nexport class SliderOverviewExample {static decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'slider-overview-example',\n  templateUrl: 'slider-overview-example.html',\n  styleUrls: ['slider-overview-example.css'],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction SliderOverviewExample_tsickle_Closure_declarations() {\n/** @type {?} */\nSliderOverviewExample.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSliderOverviewExample.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {Component, ViewEncapsulation} from '@angular/core';\n/**\n * \\@title Configurable slider\n */\nexport class SliderConfigurableExample {\n  autoTicks = false;\n  disabled = false;\n  invert = false;\n  max = 100;\n  min = 0;\n  showTicks = false;\n  step = 1;\n  thumbLabel = false;\n  value = 0;\n  vertical = false;\n/**\n * @return {?}\n */\nget tickInterval(): number | 'auto' {\n    return this.showTicks ? (this.autoTicks ? 'auto' : this._tickInterval) : 0;\n  }\n/**\n * @param {?} v\n * @return {?}\n */\nset tickInterval(v) {\n    this._tickInterval = Number(v);\n  }\nprivate _tickInterval = 1;\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'slider-configurable-example',\n  templateUrl: 'slider-configurable-example.html',\n  styleUrls: ['slider-configurable-example.css'],\n  encapsulation: ViewEncapsulation.None,\n  preserveWhitespaces: false,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction SliderConfigurableExample_tsickle_Closure_declarations() {\n/** @type {?} */\nSliderConfigurableExample.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSliderConfigurableExample.ctorParameters;\n/** @type {?} */\nSliderConfigurableExample.prototype.autoTicks;\n/** @type {?} */\nSliderConfigurableExample.prototype.disabled;\n/** @type {?} */\nSliderConfigurableExample.prototype.invert;\n/** @type {?} */\nSliderConfigurableExample.prototype.max;\n/** @type {?} */\nSliderConfigurableExample.prototype.min;\n/** @type {?} */\nSliderConfigurableExample.prototype.showTicks;\n/** @type {?} */\nSliderConfigurableExample.prototype.step;\n/** @type {?} */\nSliderConfigurableExample.prototype.thumbLabel;\n/** @type {?} */\nSliderConfigurableExample.prototype.value;\n/** @type {?} */\nSliderConfigurableExample.prototype.vertical;\n/** @type {?} */\nSliderConfigurableExample.prototype._tickInterval;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {Component} from '@angular/core';\n/**\n * \\@title Basic slide-toggles\n */\nexport class SlideToggleOverviewExample {static decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'slide-toggle-overview-example',\n  templateUrl: 'slide-toggle-overview-example.html',\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction SlideToggleOverviewExample_tsickle_Closure_declarations() {\n/** @type {?} */\nSlideToggleOverviewExample.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSlideToggleOverviewExample.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {Component} from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\n/**\n * \\@title Slide-toggle with forms\n */\nexport class SlideToggleFormsExample {\n  isChecked = true;\n  formGroup: FormGroup;\n/**\n * @param {?} formBuilder\n */\nconstructor(formBuilder: FormBuilder) {\n    this.formGroup = formBuilder.group({\n      enableWifi: '',\n      acceptTerms: ['', Validators.requiredTrue]\n    });\n  }\n/**\n * @param {?} formValue\n * @return {?}\n */\nonFormSubmit(formValue: any) {\n    alert(JSON.stringify(formValue, null, 2));\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'slide-toggle-forms-example',\n  templateUrl: './slide-toggle-forms-example.html',\n  styleUrls: ['./slide-toggle-forms-example.css'],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: FormBuilder, },\n];\n}\n\nfunction SlideToggleFormsExample_tsickle_Closure_declarations() {\n/** @type {?} */\nSlideToggleFormsExample.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSlideToggleFormsExample.ctorParameters;\n/** @type {?} */\nSlideToggleFormsExample.prototype.isChecked;\n/** @type {?} */\nSlideToggleFormsExample.prototype.formGroup;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {Component} from '@angular/core';\n/**\n * \\@title Configurable slide-toggle\n */\nexport class SlideToggleConfigurableExample {\n  color = 'accent';\n  checked = false;\n  disabled = false;\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'slide-toggle-configurable-example',\n  templateUrl: 'slide-toggle-configurable-example.html',\n  styleUrls: ['slide-toggle-configurable-example.css'],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction SlideToggleConfigurableExample_tsickle_Closure_declarations() {\n/** @type {?} */\nSlideToggleConfigurableExample.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSlideToggleConfigurableExample.ctorParameters;\n/** @type {?} */\nSlideToggleConfigurableExample.prototype.color;\n/** @type {?} */\nSlideToggleConfigurableExample.prototype.checked;\n/** @type {?} */\nSlideToggleConfigurableExample.prototype.disabled;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {Component} from '@angular/core';\n/**\n * \\@title Basic sidenav\n */\nexport class SidenavOverviewExample {static decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'sidenav-overview-example',\n  templateUrl: 'sidenav-overview-example.html',\n  styleUrls: ['sidenav-overview-example.css'],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction SidenavOverviewExample_tsickle_Closure_declarations() {\n/** @type {?} */\nSidenavOverviewExample.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSidenavOverviewExample.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {Component, ViewEncapsulation} from '@angular/core';\n/**\n * \\@title Sidenav with a FAB\n */\nexport class SidenavFabExample {static decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'sidenav-fab-example',\n  templateUrl: 'sidenav-fab-example.html',\n  styleUrls: ['sidenav-fab-example.css'],\n  encapsulation: ViewEncapsulation.None,\n  preserveWhitespaces: false,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction SidenavFabExample_tsickle_Closure_declarations() {\n/** @type {?} */\nSidenavFabExample.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSidenavFabExample.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {Component} from '@angular/core';\n/**\n * \\@title Basic select\n */\nexport class SelectOverviewExample {\n  foods = [\n    {value: 'steak-0', viewValue: 'Steak'},\n    {value: 'pizza-1', viewValue: 'Pizza'},\n    {value: 'tacos-2', viewValue: 'Tacos'}\n  ];\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'select-overview-example',\n  templateUrl: 'select-overview-example.html',\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction SelectOverviewExample_tsickle_Closure_declarations() {\n/** @type {?} */\nSelectOverviewExample.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSelectOverviewExample.ctorParameters;\n/** @type {?} */\nSelectOverviewExample.prototype.foods;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {Component} from '@angular/core';\n/**\n * \\@title Select in a form\n */\nexport class SelectFormExample {\n  selectedValue: string;\n\n  foods = [\n    {value: 'steak-0', viewValue: 'Steak'},\n    {value: 'pizza-1', viewValue: 'Pizza'},\n    {value: 'tacos-2', viewValue: 'Tacos'}\n  ];\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'select-form-example',\n  templateUrl: 'select-form-example.html',\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction SelectFormExample_tsickle_Closure_declarations() {\n/** @type {?} */\nSelectFormExample.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSelectFormExample.ctorParameters;\n/** @type {?} */\nSelectFormExample.prototype.selectedValue;\n/** @type {?} */\nSelectFormExample.prototype.foods;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {Component} from '@angular/core';\n/**\n * \\@title Basic radios\n */\nexport class RadioOverviewExample {static decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'radio-overview-example',\n  templateUrl: 'radio-overview-example.html',\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction RadioOverviewExample_tsickle_Closure_declarations() {\n/** @type {?} */\nRadioOverviewExample.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nRadioOverviewExample.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {Component} from '@angular/core';\n/**\n * \\@title Radios with ngModel\n */\nexport class RadioNgModelExample {\n  favoriteSeason: string;\n\n  seasons = [\n    'Winter',\n    'Spring',\n    'Summer',\n    'Autumn',\n  ];\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'radio-ng-model-example',\n  templateUrl: 'radio-ng-model-example.html',\n  styleUrls: ['radio-ng-model-example.css'],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction RadioNgModelExample_tsickle_Closure_declarations() {\n/** @type {?} */\nRadioNgModelExample.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nRadioNgModelExample.ctorParameters;\n/** @type {?} */\nRadioNgModelExample.prototype.favoriteSeason;\n/** @type {?} */\nRadioNgModelExample.prototype.seasons;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {Component} from '@angular/core';\n/**\n * \\@title Basic progress-spinner\n */\nexport class ProgressSpinnerOverviewExample {static decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'progress-spinner-overview-example',\n  templateUrl: 'progress-spinner-overview-example.html',\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ProgressSpinnerOverviewExample_tsickle_Closure_declarations() {\n/** @type {?} */\nProgressSpinnerOverviewExample.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nProgressSpinnerOverviewExample.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {Component} from '@angular/core';\n/**\n * \\@title Configurable progress spinner\n */\nexport class ProgressSpinnerConfigurableExample {\n  color = 'primary';\n  mode = 'determinate';\n  value = 50;\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'progress-spinner-configurable-example',\n  templateUrl: 'progress-spinner-configurable-example.html',\n  styleUrls: ['progress-spinner-configurable-example.css'],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ProgressSpinnerConfigurableExample_tsickle_Closure_declarations() {\n/** @type {?} */\nProgressSpinnerConfigurableExample.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nProgressSpinnerConfigurableExample.ctorParameters;\n/** @type {?} */\nProgressSpinnerConfigurableExample.prototype.color;\n/** @type {?} */\nProgressSpinnerConfigurableExample.prototype.mode;\n/** @type {?} */\nProgressSpinnerConfigurableExample.prototype.value;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {Component} from '@angular/core';\n/**\n * \\@title Basic progress-bar\n */\nexport class ProgressBarOverviewExample {static decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'progress-bar-overview-example',\n  templateUrl: 'progress-bar-overview-example.html',\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ProgressBarOverviewExample_tsickle_Closure_declarations() {\n/** @type {?} */\nProgressBarOverviewExample.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nProgressBarOverviewExample.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {Component} from '@angular/core';\n/**\n * \\@title Configurable progress-bar\n */\nexport class ProgressBarConfigurableExample {\n  color = 'primary';\n  mode = 'determinate';\n  value = 50;\n  bufferValue = 75;\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'progress-bar-configurable-example',\n  templateUrl: 'progress-bar-configurable-example.html',\n  styleUrls: ['progress-bar-configurable-example.css'],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ProgressBarConfigurableExample_tsickle_Closure_declarations() {\n/** @type {?} */\nProgressBarConfigurableExample.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nProgressBarConfigurableExample.ctorParameters;\n/** @type {?} */\nProgressBarConfigurableExample.prototype.color;\n/** @type {?} */\nProgressBarConfigurableExample.prototype.mode;\n/** @type {?} */\nProgressBarConfigurableExample.prototype.value;\n/** @type {?} */\nProgressBarConfigurableExample.prototype.bufferValue;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {Component} from '@angular/core';\n/**\n * \\@title Paginator\n */\nexport class PaginatorOverviewExample {static decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'paginator-overview-example',\n  templateUrl: 'paginator-overview-example.html',\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction PaginatorOverviewExample_tsickle_Closure_declarations() {\n/** @type {?} */\nPaginatorOverviewExample.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nPaginatorOverviewExample.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {Component} from '@angular/core';\nimport {PageEvent} from '@angular/material';\n/**\n * \\@title Configurable paginator\n */\nexport class PaginatorConfigurableExample {\n  // MatPaginator Inputs\n  length = 100;\n  pageSize = 10;\n  pageSizeOptions = [5, 10, 25, 100];\n\n  // MatPaginator Output\n  pageEvent: PageEvent;\n/**\n * @param {?} setPageSizeOptionsInput\n * @return {?}\n */\nsetPageSizeOptions(setPageSizeOptionsInput: string) {\n    this.pageSizeOptions = setPageSizeOptionsInput.split(',').map(str => +str);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'paginator-configurable-example',\n  templateUrl: 'paginator-configurable-example.html',\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction PaginatorConfigurableExample_tsickle_Closure_declarations() {\n/** @type {?} */\nPaginatorConfigurableExample.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nPaginatorConfigurableExample.ctorParameters;\n/** @type {?} */\nPaginatorConfigurableExample.prototype.length;\n/** @type {?} */\nPaginatorConfigurableExample.prototype.pageSize;\n/** @type {?} */\nPaginatorConfigurableExample.prototype.pageSizeOptions;\n/** @type {?} */\nPaginatorConfigurableExample.prototype.pageEvent;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {Component} from '@angular/core';\n/**\n * \\@title Nested menu\n */\nexport class NestedMenuExample {static decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'nested-menu-example',\n  templateUrl: 'nested-menu-example.html',\n  styleUrls: ['nested-menu-example.css']\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction NestedMenuExample_tsickle_Closure_declarations() {\n/** @type {?} */\nNestedMenuExample.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNestedMenuExample.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {Component} from '@angular/core';\n/**\n * \\@title Basic menu\n */\nexport class MenuOverviewExample {static decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'menu-overview-example',\n  templateUrl: 'menu-overview-example.html',\n  styleUrls: ['menu-overview-example.css'],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MenuOverviewExample_tsickle_Closure_declarations() {\n/** @type {?} */\nMenuOverviewExample.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMenuOverviewExample.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {Component} from '@angular/core';\n/**\n * \\@title Menu with icons\n */\nexport class MenuIconsExample {static decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'menu-icons-example',\n  templateUrl: 'menu-icons-example.html',\n  styleUrls: ['menu-icons-example.css'],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MenuIconsExample_tsickle_Closure_declarations() {\n/** @type {?} */\nMenuIconsExample.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMenuIconsExample.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {Component} from '@angular/core';\n/**\n * \\@title List with selection\n */\nexport class ListSelectionExample {\n  typesOfShoes = ['Boots', 'Clogs', 'Loafers', 'Moccasins', 'Sneakers'];\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'list-selection-example',\n  styleUrls: ['list-selection-example.css'],\n  templateUrl: 'list-selection-example.html',\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ListSelectionExample_tsickle_Closure_declarations() {\n/** @type {?} */\nListSelectionExample.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nListSelectionExample.ctorParameters;\n/** @type {?} */\nListSelectionExample.prototype.typesOfShoes;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {Component} from '@angular/core';\n/**\n * \\@title List with sections\n */\nexport class ListSectionsExample {\n  folders = [\n    {\n      name: 'Photos',\n      updated: new Date('1/1/16'),\n    },\n    {\n      name: 'Recipes',\n      updated: new Date('1/17/16'),\n    },\n    {\n      name: 'Work',\n      updated: new Date('1/28/16'),\n    }\n  ];\n  notes = [\n    {\n      name: 'Vacation Itinerary',\n      updated: new Date('2/20/16'),\n    },\n    {\n      name: 'Kitchen Remodel',\n      updated: new Date('1/18/16'),\n    }\n  ];\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'list-sections-example',\n  styleUrls: ['list-sections-example.css'],\n  templateUrl: 'list-sections-example.html',\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ListSectionsExample_tsickle_Closure_declarations() {\n/** @type {?} */\nListSectionsExample.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nListSectionsExample.ctorParameters;\n/** @type {?} */\nListSectionsExample.prototype.folders;\n/** @type {?} */\nListSectionsExample.prototype.notes;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {Component} from '@angular/core';\n/**\n * \\@title Basic list\n */\nexport class ListOverviewExample {static decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'list-overview-example',\n  templateUrl: 'list-overview-example.html',\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ListOverviewExample_tsickle_Closure_declarations() {\n/** @type {?} */\nListOverviewExample.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nListOverviewExample.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {Component} from '@angular/core';\n/**\n * \\@title Input Prefixes and Suffixes\n */\nexport class InputPrefixSuffixExample { static decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'input-prefix-suffix-example',\n  templateUrl: 'input-prefix-suffix-example.html',\n  styleUrls: ['input-prefix-suffix-example.css'],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction InputPrefixSuffixExample_tsickle_Closure_declarations() {\n/** @type {?} */\nInputPrefixSuffixExample.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nInputPrefixSuffixExample.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {Component} from '@angular/core';\n/**\n * \\@title Basic Inputs\n */\nexport class InputOverviewExample {static decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'input-overview-example',\n  styleUrls: ['input-overview-example.css'],\n  templateUrl: 'input-overview-example.html',\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction InputOverviewExample_tsickle_Closure_declarations() {\n/** @type {?} */\nInputOverviewExample.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nInputOverviewExample.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {Component} from '@angular/core';\n/**\n * \\@title Input hints\n */\nexport class InputHintExample { static decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'input-hint-example',\n  templateUrl: 'input-hint-example.html',\n  styleUrls: ['input-hint-example.css'],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction InputHintExample_tsickle_Closure_declarations() {\n/** @type {?} */\nInputHintExample.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nInputHintExample.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {Component} from '@angular/core';\n/**\n * \\@title Inputs in a form\n */\nexport class InputFormExample {static decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'input-form-example',\n  templateUrl: 'input-form-example.html',\n  styleUrls: ['input-form-example.css'],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction InputFormExample_tsickle_Closure_declarations() {\n/** @type {?} */\nInputFormExample.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nInputFormExample.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {Component} from '@angular/core';\nimport {FormControl, Validators} from '@angular/forms';\n\nconst /** @type {?} */ EMAIL_REGEX = /^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\n/**\n * \\@title Input Errors\n */\nexport class InputErrorsExample {\n\n  emailFormControl = new FormControl('', [\n    Validators.required,\n    Validators.pattern(EMAIL_REGEX)]);\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'input-errors-example',\n  templateUrl: 'input-errors-example.html',\n  styleUrls: ['input-errors-example.css'],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction InputErrorsExample_tsickle_Closure_declarations() {\n/** @type {?} */\nInputErrorsExample.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nInputErrorsExample.ctorParameters;\n/** @type {?} */\nInputErrorsExample.prototype.emailFormControl;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {Component} from '@angular/core';\n/**\n * \\@title Input Clearable\n */\nexport class InputClearableExample {\n  value = 'Clear me';\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'input-clearable-example',\n  templateUrl: './input-clearable-example.html',\n  styleUrls: ['./input-clearable-example.css'],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction InputClearableExample_tsickle_Closure_declarations() {\n/** @type {?} */\nInputClearableExample.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nInputClearableExample.ctorParameters;\n/** @type {?} */\nInputClearableExample.prototype.value;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {Component} from '@angular/core';\nimport {DomSanitizer} from '@angular/platform-browser';\nimport {MatIconRegistry} from '@angular/material';\n/**\n * \\@title SVG icons\n */\nexport class IconSvgExample {\n/**\n * @param {?} iconRegistry\n * @param {?} sanitizer\n */\nconstructor(iconRegistry: MatIconRegistry, sanitizer: DomSanitizer) {\n    iconRegistry.addSvgIcon(\n        'thumbs-up',\n        sanitizer.bypassSecurityTrustResourceUrl('assets/img/examples/thumbup-icon.svg'));\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'icon-svg-example',\n  templateUrl: 'icon-svg-example.html',\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: MatIconRegistry, },\n{type: DomSanitizer, },\n];\n}\n\nfunction IconSvgExample_tsickle_Closure_declarations() {\n/** @type {?} */\nIconSvgExample.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nIconSvgExample.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {Component} from '@angular/core';\n/**\n * \\@title Basic icons\n */\nexport class IconOverviewExample {static decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'icon-overview-example',\n  templateUrl: 'icon-overview-example.html',\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction IconOverviewExample_tsickle_Closure_declarations() {\n/** @type {?} */\nIconOverviewExample.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nIconOverviewExample.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {Component} from '@angular/core';\n/**\n * \\@title Basic grid-list\n */\nexport class GridListOverviewExample {static decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'grid-list-overview-example',\n  styleUrls: ['grid-list-overview-example.css'],\n  templateUrl: 'grid-list-overview-example.html',\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction GridListOverviewExample_tsickle_Closure_declarations() {\n/** @type {?} */\nGridListOverviewExample.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nGridListOverviewExample.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {Component} from '@angular/core';\n/**\n * \\@title Dynamic grid-list\n */\nexport class GridListDynamicExample {\n  tiles = [\n    {text: 'One', cols: 3, rows: 1, color: 'lightblue'},\n    {text: 'Two', cols: 1, rows: 2, color: 'lightgreen'},\n    {text: 'Three', cols: 1, rows: 1, color: 'lightpink'},\n    {text: 'Four', cols: 2, rows: 1, color: '#DDBDF1'},\n  ];\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'grid-list-dynamic-example',\n  templateUrl: 'grid-list-dynamic-example.html',\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction GridListDynamicExample_tsickle_Closure_declarations() {\n/** @type {?} */\nGridListDynamicExample.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nGridListDynamicExample.ctorParameters;\n/** @type {?} */\nGridListDynamicExample.prototype.tiles;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {Component} from '@angular/core';\n/**\n * \\@title Expansion panel as accordion\n */\nexport class ExpansionStepsExample {\n  step = 0;\n/**\n * @param {?} index\n * @return {?}\n */\nsetStep(index: number) {\n    this.step = index;\n  }\n/**\n * @return {?}\n */\nnextStep() {\n    this.step++;\n  }\n/**\n * @return {?}\n */\nprevStep() {\n    this.step--;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'expansion-steps-example',\n  templateUrl: 'expansion-steps-example.html',\n  styleUrls: ['expansion-steps-example.css']\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ExpansionStepsExample_tsickle_Closure_declarations() {\n/** @type {?} */\nExpansionStepsExample.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nExpansionStepsExample.ctorParameters;\n/** @type {?} */\nExpansionStepsExample.prototype.step;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {Component} from '@angular/core';\n/**\n * \\@title Basic expansion panel\n */\nexport class ExpansionOverviewExample {static decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'expansion-overview-example',\n  templateUrl: 'expansion-overview-example.html',\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ExpansionOverviewExample_tsickle_Closure_declarations() {\n/** @type {?} */\nExpansionOverviewExample.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nExpansionOverviewExample.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {Component, Inject} from '@angular/core';\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material';\n/**\n * \\@title Dialog Overview\n */\nexport class DialogOverviewExample {\n\n  animal: string;\n  name: string;\n/**\n * @param {?} dialog\n */\nconstructor(public dialog: MatDialog) {}\n/**\n * @return {?}\n */\nopenDialog(): void {\n    let /** @type {?} */ dialogRef = this.dialog.open(DialogOverviewExampleDialog, {\n      width: '250px',\n      data: { name: this.name, animal: this.animal }\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      console.log('The dialog was closed');\n      this.animal = result;\n    });\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'dialog-overview-example',\n  templateUrl: 'dialog-overview-example.html'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: MatDialog, },\n];\n}\n\nfunction DialogOverviewExample_tsickle_Closure_declarations() {\n/** @type {?} */\nDialogOverviewExample.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDialogOverviewExample.ctorParameters;\n/** @type {?} */\nDialogOverviewExample.prototype.animal;\n/** @type {?} */\nDialogOverviewExample.prototype.name;\n/** @type {?} */\nDialogOverviewExample.prototype.dialog;\n}\n\nexport class DialogOverviewExampleDialog {\n/**\n * @param {?} dialogRef\n * @param {?} data\n */\nconstructor(\npublic dialogRef: MatDialogRef<DialogOverviewExampleDialog>,\npublic data: any) { }\n/**\n * @return {?}\n */\nonNoClick(): void {\n    this.dialogRef.close();\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'dialog-overview-example-dialog',\n  templateUrl: 'dialog-overview-example-dialog.html',\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: MatDialogRef, },\n{type: undefined, decorators: [{ type: Inject, args: [MAT_DIALOG_DATA, ] }, ]},\n];\n}\n\nfunction DialogOverviewExampleDialog_tsickle_Closure_declarations() {\n/** @type {?} */\nDialogOverviewExampleDialog.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDialogOverviewExampleDialog.ctorParameters;\n/** @type {?} */\nDialogOverviewExampleDialog.prototype.dialogRef;\n/** @type {?} */\nDialogOverviewExampleDialog.prototype.data;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {Component} from '@angular/core';\nimport {MatDialog} from '@angular/material';\n/**\n * \\@title Dialog elements\n */\nexport class DialogElementsExample {\n/**\n * @param {?} dialog\n */\nconstructor(public dialog: MatDialog) { }\n/**\n * @return {?}\n */\nopenDialog() {\n    this.dialog.open(DialogElementsExampleDialog);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'dialog-elements-example',\n  templateUrl: 'dialog-elements-example.html',\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: MatDialog, },\n];\n}\n\nfunction DialogElementsExample_tsickle_Closure_declarations() {\n/** @type {?} */\nDialogElementsExample.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDialogElementsExample.ctorParameters;\n/** @type {?} */\nDialogElementsExample.prototype.dialog;\n}\n\nexport class DialogElementsExampleDialog { static decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'dialog-elements-example-dialog',\n  templateUrl: 'dialog-elements-example-dialog.html',\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction DialogElementsExampleDialog_tsickle_Closure_declarations() {\n/** @type {?} */\nDialogElementsExampleDialog.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDialogElementsExampleDialog.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {Component, Inject} from '@angular/core';\nimport {MatDialog, MAT_DIALOG_DATA} from '@angular/material';\n/**\n * \\@title Injecting data when opening a dialog\n */\nexport class DialogDataExample {\n/**\n * @param {?} dialog\n */\nconstructor(public dialog: MatDialog) {}\n/**\n * @return {?}\n */\nopenDialog() {\n    this.dialog.open(DialogDataExampleDialog, {\n      data: {\n        animal: 'panda'\n      }\n    });\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'dialog-data-example',\n  templateUrl: 'dialog-data-example.html',\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: MatDialog, },\n];\n}\n\nfunction DialogDataExample_tsickle_Closure_declarations() {\n/** @type {?} */\nDialogDataExample.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDialogDataExample.ctorParameters;\n/** @type {?} */\nDialogDataExample.prototype.dialog;\n}\n\nexport class DialogDataExampleDialog {\n/**\n * @param {?} data\n */\nconstructor(\npublic data: any) {}\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'dialog-data-example-dialog',\n  templateUrl: 'dialog-data-example-dialog.html',\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: undefined, decorators: [{ type: Inject, args: [MAT_DIALOG_DATA, ] }, ]},\n];\n}\n\nfunction DialogDataExampleDialog_tsickle_Closure_declarations() {\n/** @type {?} */\nDialogDataExampleDialog.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDialogDataExampleDialog.ctorParameters;\n/** @type {?} */\nDialogDataExampleDialog.prototype.data;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {Component} from '@angular/core';\nimport {MatDialog} from '@angular/material';\n/**\n * \\@title Dialog with header, scrollable content and actions\n */\nexport class DialogContentExample {\n/**\n * @param {?} dialog\n */\nconstructor(public dialog: MatDialog) {}\n/**\n * @return {?}\n */\nopenDialog() {\n    const /** @type {?} */ dialogRef = this.dialog.open(DialogContentExampleDialog, {\n      height: '350px'\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      console.log(`Dialog result: ${result}`);\n    });\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'dialog-content-example',\n  templateUrl: 'dialog-content-example.html',\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: MatDialog, },\n];\n}\n\nfunction DialogContentExample_tsickle_Closure_declarations() {\n/** @type {?} */\nDialogContentExample.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDialogContentExample.ctorParameters;\n/** @type {?} */\nDialogContentExample.prototype.dialog;\n}\n\nexport class DialogContentExampleDialog {static decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'dialog-content-example-dialog',\n  templateUrl: 'dialog-content-example-dialog.html',\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction DialogContentExampleDialog_tsickle_Closure_declarations() {\n/** @type {?} */\nDialogContentExampleDialog.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDialogContentExampleDialog.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {Component} from '@angular/core';\n/**\n * \\@title Datepicker Touch\n */\nexport class DatepickerTouchExample {\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'datepicker-touch-example',\n  templateUrl: 'datepicker-touch-example.html',\n  styleUrls: ['datepicker-touch-example.css'],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction DatepickerTouchExample_tsickle_Closure_declarations() {\n/** @type {?} */\nDatepickerTouchExample.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDatepickerTouchExample.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {Component} from '@angular/core';\n/**\n * \\@title Datepicker start date\n */\nexport class DatepickerStartViewExample {\n  startDate = new Date(1990, 0, 1);\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'datepicker-start-view-example',\n  templateUrl: 'datepicker-start-view-example.html',\n  styleUrls: ['datepicker-start-view-example.css'],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction DatepickerStartViewExample_tsickle_Closure_declarations() {\n/** @type {?} */\nDatepickerStartViewExample.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDatepickerStartViewExample.ctorParameters;\n/** @type {?} */\nDatepickerStartViewExample.prototype.startDate;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {Component} from '@angular/core';\n/**\n * \\@title Basic datepicker\n */\nexport class DatepickerOverviewExample {static decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'datepicker-overview-example',\n  templateUrl: 'datepicker-overview-example.html',\n  styleUrls: ['datepicker-overview-example.css'],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction DatepickerOverviewExample_tsickle_Closure_declarations() {\n/** @type {?} */\nDatepickerOverviewExample.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDatepickerOverviewExample.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {Component} from '@angular/core';\n/**\n * \\@title Datepicker Min Max\n */\nexport class DatepickerMinMaxExample {\n  minDate = new Date(2000, 0, 1);\n  maxDate = new Date(2020, 0, 1);\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'datepicker-min-max-example',\n  templateUrl: 'datepicker-min-max-example.html',\n  styleUrls: ['datepicker-min-max-example.css'],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction DatepickerMinMaxExample_tsickle_Closure_declarations() {\n/** @type {?} */\nDatepickerMinMaxExample.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDatepickerMinMaxExample.ctorParameters;\n/** @type {?} */\nDatepickerMinMaxExample.prototype.minDate;\n/** @type {?} */\nDatepickerMinMaxExample.prototype.maxDate;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {Component} from '@angular/core';\n/**\n * \\@title Datepicker Filter\n */\nexport class DatepickerFilterExample {\n  myFilter = (d: Date): boolean => {\n    const /** @type {?} */ day = d.getDay();\n    // Prevent Saturday and Sunday from being selected.\n    return day !== 0 && day !== 6;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'datepicker-filter-example',\n  templateUrl: 'datepicker-filter-example.html',\n  styleUrls: ['datepicker-filter-example.css'],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction DatepickerFilterExample_tsickle_Closure_declarations() {\n/** @type {?} */\nDatepickerFilterExample.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDatepickerFilterExample.ctorParameters;\n/** @type {?} */\nDatepickerFilterExample.prototype.myFilter;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {Component} from '@angular/core';\n/**\n * \\@title Datepicker API\n */\nexport class DatepickerApiExample {\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'datepicker-api-example',\n  templateUrl: 'datepicker-api-example.html',\n  styleUrls: ['datepicker-api-example.css'],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction DatepickerApiExample_tsickle_Closure_declarations() {\n/** @type {?} */\nDatepickerApiExample.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDatepickerApiExample.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {Component} from '@angular/core';\n/**\n * \\@title Stacked chips\n */\nexport class ChipsStackedExample {\n  color: string;\n\n  availableColors = [\n    { name: 'none', color: '' },\n    { name: 'Primary', color: 'primary' },\n    { name: 'Accent', color: 'accent' },\n    { name: 'Warn', color: 'warn' }\n  ];\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'chips-stacked-example',\n  templateUrl: 'chips-stacked-example.html',\n  styleUrls: ['chips-stacked-example.css'],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ChipsStackedExample_tsickle_Closure_declarations() {\n/** @type {?} */\nChipsStackedExample.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nChipsStackedExample.ctorParameters;\n/** @type {?} */\nChipsStackedExample.prototype.color;\n/** @type {?} */\nChipsStackedExample.prototype.availableColors;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {Component} from '@angular/core';\n/**\n * \\@title Basic chips\n */\nexport class ChipsOverviewExample {static decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'chips-overview-example',\n  templateUrl: 'chips-overview-example.html',\n  styleUrls: ['chips-overview-example.css'],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ChipsOverviewExample_tsickle_Closure_declarations() {\n/** @type {?} */\nChipsOverviewExample.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nChipsOverviewExample.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {Component} from '@angular/core';\nimport {MatChipInputEvent} from '@angular/material';\nimport {ENTER} from '@angular/cdk/keycodes';\n\nconst /** @type {?} */ COMMA = 188;\n/**\n * \\@title Chips with input\n */\nexport class ChipsInputExample {\n  visible: boolean = true;\n  selectable: boolean = true;\n  removable: boolean = true;\n  addOnBlur: boolean = true;\n\n  // Enter, comma\n  separatorKeysCodes = [ENTER, COMMA];\n\n  fruits = [\n    { name: 'Lemon' },\n    { name: 'Lime' },\n    { name: 'Apple' },\n  ];\n/**\n * @param {?} event\n * @return {?}\n */\nadd(event: MatChipInputEvent): void {\n    let /** @type {?} */ input = event.input;\n    let /** @type {?} */ value = event.value;\n\n    // Add our person\n    if ((value || '').trim()) {\n      this.fruits.push({ name: value.trim() });\n    }\n\n    // Reset the input value\n    if (input) {\n      input.value = '';\n    }\n  }\n/**\n * @param {?} fruit\n * @return {?}\n */\nremove(fruit: any): void {\n    let /** @type {?} */ index = this.fruits.indexOf(fruit);\n\n    if (index >= 0) {\n      this.fruits.splice(index, 1);\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'chips-input-example',\n  templateUrl: 'chips-input-example.html',\n  styleUrls: ['chips-input-example.css']\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ChipsInputExample_tsickle_Closure_declarations() {\n/** @type {?} */\nChipsInputExample.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nChipsInputExample.ctorParameters;\n/** @type {?} */\nChipsInputExample.prototype.visible;\n/** @type {?} */\nChipsInputExample.prototype.selectable;\n/** @type {?} */\nChipsInputExample.prototype.removable;\n/** @type {?} */\nChipsInputExample.prototype.addOnBlur;\n/** @type {?} */\nChipsInputExample.prototype.separatorKeysCodes;\n/** @type {?} */\nChipsInputExample.prototype.fruits;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {Component} from '@angular/core';\n/**\n * \\@title Basic checkboxes\n */\nexport class CheckboxOverviewExample {static decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'checkbox-overview-example',\n  templateUrl: 'checkbox-overview-example.html',\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction CheckboxOverviewExample_tsickle_Closure_declarations() {\n/** @type {?} */\nCheckboxOverviewExample.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nCheckboxOverviewExample.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {Component} from '@angular/core';\n/**\n * \\@title Configurable checkbox\n */\nexport class CheckboxConfigurableExample {\n  checked = false;\n  indeterminate = false;\n  align = 'start';\n  disabled = false;\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'checkbox-configurable-example',\n  templateUrl: 'checkbox-configurable-example.html',\n  styleUrls: ['checkbox-configurable-example.css'],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction CheckboxConfigurableExample_tsickle_Closure_declarations() {\n/** @type {?} */\nCheckboxConfigurableExample.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nCheckboxConfigurableExample.ctorParameters;\n/** @type {?} */\nCheckboxConfigurableExample.prototype.checked;\n/** @type {?} */\nCheckboxConfigurableExample.prototype.indeterminate;\n/** @type {?} */\nCheckboxConfigurableExample.prototype.align;\n/** @type {?} */\nCheckboxConfigurableExample.prototype.disabled;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {Component} from '@angular/core';\nimport {DataSource} from '@angular/cdk/collections';\nimport {BehaviorSubject} from 'rxjs/BehaviorSubject';\nimport {Observable} from 'rxjs/Observable';\nimport'rxjs/add/operator/startWith';\nimport'rxjs/add/observable/merge';\nimport'rxjs/add/operator/map';\n/**\n * \\@title Basic CDK data-table\n */\nexport class CdkTableBasicExample {\n  displayedColumns = ['userId', 'userName', 'progress', 'color'];\n  exampleDatabase = new ExampleDatabase();\n  dataSource: ExampleDataSource | null;\n/**\n * @return {?}\n */\nngOnInit() {\n    this.dataSource = new ExampleDataSource(this.exampleDatabase);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'cdk-table-basic-example',\n  styleUrls: ['cdk-table-basic-example.css'],\n  templateUrl: 'cdk-table-basic-example.html',\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction CdkTableBasicExample_tsickle_Closure_declarations() {\n/** @type {?} */\nCdkTableBasicExample.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nCdkTableBasicExample.ctorParameters;\n/** @type {?} */\nCdkTableBasicExample.prototype.displayedColumns;\n/** @type {?} */\nCdkTableBasicExample.prototype.exampleDatabase;\n/** @type {?} */\nCdkTableBasicExample.prototype.dataSource;\n}\n\n/**\n * Constants used to fill up our data base.\n */\nconst COLORS = ['maroon', 'red', 'orange', 'yellow', 'olive', 'green', 'purple',\n  'fuchsia', 'lime', 'teal', 'aqua', 'blue', 'navy', 'black', 'gray'];\nconst /** @type {?} */ NAMES = ['Maia', 'Asher', 'Olivia', 'Atticus', 'Amelia', 'Jack',\n  'Charlotte', 'Theodore', 'Isla', 'Oliver', 'Isabella', 'Jasper',\n  'Cora', 'Levi', 'Violet', 'Arthur', 'Mia', 'Thomas', 'Elizabeth'];\n\nexport interface UserData {\n  id: string;\n  name: string;\n  progress: string;\n  color: string;\n}\n/**\n * An example database that the data source uses to retrieve data for the table.\n */\nexport class ExampleDatabase {\n/**\n * Stream that emits whenever the data has been modified.\n */\ndataChange: BehaviorSubject<UserData[]> = new BehaviorSubject<UserData[]>([]);\n/**\n * @return {?}\n */\nget data(): UserData[] { return this.dataChange.value; }\nconstructor() {\n    // Fill up the database with 100 users.\n    for (let i = 0; i < 100; i++) { this.addUser(); }\n  }\n/**\n * Adds a new user to the database.\n * @return {?}\n */\naddUser() {\n    const /** @type {?} */ copiedData = this.data.slice();\n    copiedData.push(this.createNewUser());\n    this.dataChange.next(copiedData);\n  }\n/**\n * Builds and returns a new User.\n * @return {?}\n */\nprivate createNewUser() {\n    const /** @type {?} */ name =\n        NAMES[Math.round(Math.random() * (NAMES.length - 1))] + ' ' +\n        NAMES[Math.round(Math.random() * (NAMES.length - 1))].charAt(0) + '.';\n\n    return {\n      id: (this.data.length + 1).toString(),\n      name: name,\n      progress: Math.round(Math.random() * 100).toString(),\n      color: COLORS[Math.round(Math.random() * (COLORS.length - 1))]\n    };\n  }\n}\n\nfunction ExampleDatabase_tsickle_Closure_declarations() {\n/**\n * Stream that emits whenever the data has been modified.\n * @type {?}\n */\nExampleDatabase.prototype.dataChange;\n}\n\n/**\n * Data source to provide what data should be rendered in the table. Note that the data source\n * can retrieve its data in any way. In this case, the data source is provided a reference\n * to a common data base, ExampleDatabase. It is not the data source's responsibility to manage\n * the underlying data. Instead, it only needs to take the data and send the table exactly what\n * should be rendered.\n */\nexport class ExampleDataSource extends DataSource<any> {\n/**\n * @param {?} _exampleDatabase\n */\nconstructor(private _exampleDatabase: ExampleDatabase) {\n    super();\n  }\n/**\n * Connect function called by the table to retrieve one stream containing the data to render.\n * @return {?}\n */\nconnect(): Observable<UserData[]> {\n    return this._exampleDatabase.dataChange;\n  }\n/**\n * @return {?}\n */\ndisconnect() {}\n}\n\nfunction ExampleDataSource_tsickle_Closure_declarations() {\n/** @type {?} */\nExampleDataSource.prototype._exampleDatabase;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {Component} from '@angular/core';\n/**\n * \\@title Basic cards\n */\nexport class CardOverviewExample {static decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'card-overview-example',\n  templateUrl: 'card-overview-example.html',\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction CardOverviewExample_tsickle_Closure_declarations() {\n/** @type {?} */\nCardOverviewExample.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nCardOverviewExample.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {Component} from '@angular/core';\n/**\n * \\@title Card with multiple sections\n */\nexport class CardFancyExample {static decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'card-fancy-example',\n  templateUrl: 'card-fancy-example.html',\n  styleUrls: ['card-fancy-example.css'],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction CardFancyExample_tsickle_Closure_declarations() {\n/** @type {?} */\nCardFancyExample.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nCardFancyExample.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {Component} from '@angular/core';\n/**\n * \\@title Button varieties\n */\nexport class ButtonTypesExample {static decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'button-types-example',\n  templateUrl: 'button-types-example.html',\n  styleUrls: ['button-types-example.css'],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ButtonTypesExample_tsickle_Closure_declarations() {\n/** @type {?} */\nButtonTypesExample.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nButtonTypesExample.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {Component} from '@angular/core';\n/**\n * \\@title Basic button-toggles\n */\nexport class ButtonToggleOverviewExample {static decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'button-toggle-overview-example',\n  templateUrl: 'button-toggle-overview-example.html',\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ButtonToggleOverviewExample_tsickle_Closure_declarations() {\n/** @type {?} */\nButtonToggleOverviewExample.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nButtonToggleOverviewExample.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {Component} from '@angular/core';\n/**\n * \\@title Exclusive selection\n */\nexport class ButtonToggleExclusiveExample {static decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'button-toggle-exclusive-example',\n  templateUrl: 'button-toggle-exclusive-example.html',\n  styleUrls: ['button-toggle-exclusive-example.css'],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ButtonToggleExclusiveExample_tsickle_Closure_declarations() {\n/** @type {?} */\nButtonToggleExclusiveExample.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nButtonToggleExclusiveExample.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {Component} from '@angular/core';\n/**\n * \\@title Basic buttons\n */\nexport class ButtonOverviewExample {static decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'button-overview-example',\n  templateUrl: 'button-overview-example.html',\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ButtonOverviewExample_tsickle_Closure_declarations() {\n/** @type {?} */\nButtonOverviewExample.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nButtonOverviewExample.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {Component} from '@angular/core';\nimport {FormControl} from '@angular/forms';\n/**\n * \\@title Simple autocomplete\n */\nexport class AutocompleteSimpleExample {\n\n  myControl: FormControl = new FormControl();\n\n  options = [\n    'One',\n    'Two',\n    'Three'\n   ];\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'autocomplete-simple-example',\n  templateUrl: 'autocomplete-simple-example.html',\n  styleUrls: ['autocomplete-simple-example.css']\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction AutocompleteSimpleExample_tsickle_Closure_declarations() {\n/** @type {?} */\nAutocompleteSimpleExample.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nAutocompleteSimpleExample.ctorParameters;\n/** @type {?} */\nAutocompleteSimpleExample.prototype.myControl;\n/** @type {?} */\nAutocompleteSimpleExample.prototype.options;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {Component} from '@angular/core';\nimport {FormControl} from '@angular/forms';\n\nimport {Observable} from 'rxjs/Observable';\nimport'rxjs/add/operator/startWith';\nimport'rxjs/add/operator/map';\n/**\n * \\@title Autocomplete overview\n */\nexport class AutocompleteOverviewExample {\n  stateCtrl: FormControl;\n  filteredStates: Observable<any[]>;\n\n  states: any[] = [\n    {\n      name: 'Arkansas',\n      population: '2.978M',\n      // https://commons.wikimedia.org/wiki/File:Flag_of_Arkansas.svg\n      flag: 'https://upload.wikimedia.org/wikipedia/commons/9/9d/Flag_of_Arkansas.svg'\n    },\n    {\n      name: 'California',\n      population: '39.14M',\n      // https://commons.wikimedia.org/wiki/File:Flag_of_California.svg\n      flag: 'https://upload.wikimedia.org/wikipedia/commons/0/01/Flag_of_California.svg'\n    },\n    {\n      name: 'Florida',\n      population: '20.27M',\n      // https://commons.wikimedia.org/wiki/File:Flag_of_Florida.svg\n      flag: 'https://upload.wikimedia.org/wikipedia/commons/f/f7/Flag_of_Florida.svg'\n    },\n    {\n      name: 'Texas',\n      population: '27.47M',\n      // https://commons.wikimedia.org/wiki/File:Flag_of_Texas.svg\n      flag: 'https://upload.wikimedia.org/wikipedia/commons/f/f7/Flag_of_Texas.svg'\n    }\n  ];\nconstructor() {\n    this.stateCtrl = new FormControl();\n    this.filteredStates = this.stateCtrl.valueChanges\n        .startWith(null)\n        .map(state => state ? this.filterStates(state) : this.states.slice());\n  }\n/**\n * @param {?} name\n * @return {?}\n */\nfilterStates(name: string) {\n    return this.states.filter(state =>\n      state.name.toLowerCase().indexOf(name.toLowerCase()) === 0);\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'autocomplete-overview-example',\n  templateUrl: 'autocomplete-overview-example.html',\n  styleUrls: ['autocomplete-overview-example.css']\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction AutocompleteOverviewExample_tsickle_Closure_declarations() {\n/** @type {?} */\nAutocompleteOverviewExample.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nAutocompleteOverviewExample.ctorParameters;\n/** @type {?} */\nAutocompleteOverviewExample.prototype.stateCtrl;\n/** @type {?} */\nAutocompleteOverviewExample.prototype.filteredStates;\n/** @type {?} */\nAutocompleteOverviewExample.prototype.states;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {Component} from '@angular/core';\nimport {FormControl} from '@angular/forms';\nimport {Observable} from 'rxjs/Observable';\nimport'rxjs/add/operator/startWith';\nimport'rxjs/add/operator/map';\n/**\n * \\@title Filter autocomplete\n */\nexport class AutocompleteFilterExample {\n\n  myControl: FormControl = new FormControl();\n\n  options = [\n    'One',\n    'Two',\n    'Three'\n  ];\n\n  filteredOptions: Observable<string[]>;\n/**\n * @return {?}\n */\nngOnInit() {\n      this.filteredOptions = this.myControl.valueChanges\n         .startWith(null)\n         .map(val => val ? this.filter(val) : this.options.slice());\n   }\n/**\n * @param {?} val\n * @return {?}\n */\nfilter(val: string): string[] {\n      return this.options.filter(option =>\n        option.toLowerCase().indexOf(val.toLowerCase()) === 0);\n   }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'autocomplete-filter-example',\n  templateUrl: 'autocomplete-filter-example.html',\n  styleUrls: ['autocomplete-filter-example.css']\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction AutocompleteFilterExample_tsickle_Closure_declarations() {\n/** @type {?} */\nAutocompleteFilterExample.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nAutocompleteFilterExample.ctorParameters;\n/** @type {?} */\nAutocompleteFilterExample.prototype.myControl;\n/** @type {?} */\nAutocompleteFilterExample.prototype.options;\n/** @type {?} */\nAutocompleteFilterExample.prototype.filteredOptions;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {Component} from '@angular/core';\nimport {FormControl} from '@angular/forms';\nimport {Observable} from 'rxjs/Observable';\nimport'rxjs/add/operator/startWith';\nimport'rxjs/add/operator/map';\nexport class User {\n/**\n * @param {?} name\n */\nconstructor(public name: string) { }\n}\n\nfunction User_tsickle_Closure_declarations() {\n/** @type {?} */\nUser.prototype.name;\n}\n\n/**\n * \\@title Display value autocomplete\n */\nexport class AutocompleteDisplayExample {\n\n  myControl = new FormControl();\n\n  options = [\n    new User('Mary'),\n    new User('Shelley'),\n    new User('Igor')\n  ];\n\n  filteredOptions: Observable<User[]>;\n/**\n * @return {?}\n */\nngOnInit() {\n    this.filteredOptions = this.myControl.valueChanges\n        .startWith(null)\n        .map(user => user && typeof user === 'object' ? user.name : user)\n        .map(name => name ? this.filter(name) : this.options.slice());\n  }\n/**\n * @param {?} name\n * @return {?}\n */\nfilter(name: string): User[] {\n    return this.options.filter(option =>\n      option.name.toLowerCase().indexOf(name.toLowerCase()) === 0);\n  }\n/**\n * @param {?} user\n * @return {?}\n */\ndisplayFn(user: User): string {\n    return user ? user.name : user;\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'autocomplete-display-example',\n  templateUrl: 'autocomplete-display-example.html',\n  styleUrls: ['autocomplete-display-example.css']\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction AutocompleteDisplayExample_tsickle_Closure_declarations() {\n/** @type {?} */\nAutocompleteDisplayExample.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nAutocompleteDisplayExample.ctorParameters;\n/** @type {?} */\nAutocompleteDisplayExample.prototype.myControl;\n/** @type {?} */\nAutocompleteDisplayExample.prototype.options;\n/** @type {?} */\nAutocompleteDisplayExample.prototype.filteredOptions;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {NgModule} from '@angular/core';\n\nimport {CdkTableModule} from '@angular/cdk/table';\nimport {\n  MatAutocompleteModule, MatButtonModule, MatButtonToggleModule, MatPaginatorModule,\n  MatCardModule, MatCheckboxModule, MatChipsModule, MatDatepickerModule,\n  MatDialogModule, MatGridListModule, MatIconModule, MatInputModule,\n  MatListModule, MatMenuModule, MatProgressBarModule, MatProgressSpinnerModule,\n  MatRadioModule, MatSelectModule, MatSidenavModule, MatSliderModule, MatSortModule,\n  MatSlideToggleModule, MatSnackBarModule, MatTableModule, MatTabsModule, MatToolbarModule,\n  MatTooltipModule, MatFormFieldModule, MatExpansionModule, MatStepperModule\n} from '@angular/material';\nexport class ExampleMaterialModule {static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  exports: [\n    CdkTableModule,\n    MatAutocompleteModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatExpansionModule,\n    MatFormFieldModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatSelectModule,\n    MatSlideToggleModule,\n    MatSliderModule,\n    MatSidenavModule,\n    MatSnackBarModule,\n    MatStepperModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatPaginatorModule,\n    MatSortModule,\n    MatTableModule\n  ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ExampleMaterialModule_tsickle_Closure_declarations() {\n/** @type {?} */\nExampleMaterialModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nExampleMaterialModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"],"names":["ExampleDataSource","COLORS","NAMES","ExampleDatabase"],"mappings":"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"}