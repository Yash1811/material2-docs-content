{"version":3,"file":"material-examples.js","sources":["../packages/material-examples/material-module.js","../packages/material-examples/autocomplete-display/autocomplete-display-example.js","../packages/material-examples/autocomplete-filter/autocomplete-filter-example.js","../packages/material-examples/autocomplete-overview/autocomplete-overview-example.js","../packages/material-examples/autocomplete-simple/autocomplete-simple-example.js","../packages/material-examples/button-overview/button-overview-example.js","../packages/material-examples/button-toggle-exclusive/button-toggle-exclusive-example.js","../packages/material-examples/button-toggle-overview/button-toggle-overview-example.js","../packages/material-examples/button-types/button-types-example.js","../packages/material-examples/card-fancy/card-fancy-example.js","../packages/material-examples/card-overview/card-overview-example.js","../packages/material-examples/cdk-table-basic/cdk-table-basic-example.js","../packages/material-examples/checkbox-configurable/checkbox-configurable-example.js","../packages/material-examples/checkbox-overview/checkbox-overview-example.js","../packages/material-examples/chips-input/chips-input-example.js","../packages/material-examples/chips-overview/chips-overview-example.js","../packages/material-examples/chips-stacked/chips-stacked-example.js","../packages/material-examples/datepicker-api/datepicker-api-example.js","../packages/material-examples/datepicker-filter/datepicker-filter-example.js","../packages/material-examples/datepicker-min-max/datepicker-min-max-example.js","../packages/material-examples/datepicker-overview/datepicker-overview-example.js","../packages/material-examples/datepicker-start-view/datepicker-start-view-example.js","../packages/material-examples/datepicker-touch/datepicker-touch-example.js","../packages/material-examples/dialog-content/dialog-content-example.js","../packages/material-examples/dialog-data/dialog-data-example.js","../packages/material-examples/dialog-elements/dialog-elements-example.js","../packages/material-examples/dialog-overview/dialog-overview-example.js","../packages/material-examples/expansion-overview/expansion-overview-example.js","../packages/material-examples/expansion-steps/expansion-steps-example.js","../packages/material-examples/grid-list-dynamic/grid-list-dynamic-example.js","../packages/material-examples/grid-list-overview/grid-list-overview-example.js","../packages/material-examples/icon-overview/icon-overview-example.js","../packages/material-examples/icon-svg-example/icon-svg-example.js","../packages/material-examples/input-clearable/input-clearable-example.js","../packages/material-examples/input-errors/input-errors-example.js","../packages/material-examples/input-form/input-form-example.js","../packages/material-examples/input-hint/input-hint-example.js","../packages/material-examples/input-overview/input-overview-example.js","../packages/material-examples/input-prefix-suffix/input-prefix-suffix-example.js","../packages/material-examples/list-overview/list-overview-example.js","../packages/material-examples/list-sections/list-sections-example.js","../packages/material-examples/list-selection/list-selection-example.js","../packages/material-examples/menu-icons/menu-icons-example.js","../packages/material-examples/menu-overview/menu-overview-example.js","../packages/material-examples/nested-menu/nested-menu-example.js","../packages/material-examples/paginator-configurable/paginator-configurable-example.js","../packages/material-examples/paginator-overview/paginator-overview-example.js","../packages/material-examples/progress-bar-configurable/progress-bar-configurable-example.js","../packages/material-examples/progress-bar-overview/progress-bar-overview-example.js","../packages/material-examples/progress-spinner-configurable/progress-spinner-configurable-example.js","../packages/material-examples/progress-spinner-overview/progress-spinner-overview-example.js","../packages/material-examples/radio-ng-model/radio-ng-model-example.js","../packages/material-examples/radio-overview/radio-overview-example.js","../packages/material-examples/select-form/select-form-example.js","../packages/material-examples/select-overview/select-overview-example.js","../packages/material-examples/sidenav-fab/sidenav-fab-example.js","../packages/material-examples/sidenav-overview/sidenav-overview-example.js","../packages/material-examples/slide-toggle-configurable/slide-toggle-configurable-example.js","../packages/material-examples/slide-toggle-forms/slide-toggle-forms-example.js","../packages/material-examples/slide-toggle-overview/slide-toggle-overview-example.js","../packages/material-examples/slider-configurable/slider-configurable-example.js","../packages/material-examples/slider-overview/slider-overview-example.js","../packages/material-examples/snack-bar-component/snack-bar-component-example.js","../packages/material-examples/snack-bar-overview/snack-bar-overview-example.js","../packages/material-examples/sort-overview/sort-overview-example.js","../packages/material-examples/stepper-overview/stepper-overview-example.js","../packages/material-examples/table-basic/table-basic-example.js","../packages/material-examples/table-filtering/table-filtering-example.js","../packages/material-examples/table-http/table-http-example.js","../packages/material-examples/table-overview/table-overview-example.js","../packages/material-examples/table-pagination/table-pagination-example.js","../packages/material-examples/table-sorting/table-sorting-example.js","../packages/material-examples/tabs-overview/tabs-overview-example.js","../packages/material-examples/tabs-template-label/tabs-template-label-example.js","../packages/material-examples/toolbar-multirow/toolbar-multirow-example.js","../packages/material-examples/toolbar-overview/toolbar-overview-example.js","../packages/material-examples/tooltip-overview/tooltip-overview-example.js","../packages/material-examples/tooltip-position/tooltip-position-example.js","../packages/material-examples/example-module.js","../packages/material-examples/example-data.js","../packages/material-examples/index.js"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { CdkTableModule } from '@angular/cdk/table';\nimport { MatAutocompleteModule, MatButtonModule, MatButtonToggleModule, MatPaginatorModule, MatCardModule, MatCheckboxModule, MatChipsModule, MatDatepickerModule, MatDialogModule, MatGridListModule, MatIconModule, MatInputModule, MatListModule, MatMenuModule, MatProgressBarModule, MatProgressSpinnerModule, MatRadioModule, MatSelectModule, MatSidenavModule, MatSliderModule, MatSortModule, MatSlideToggleModule, MatSnackBarModule, MatTableModule, MatTabsModule, MatToolbarModule, MatTooltipModule, MatFormFieldModule, MatExpansionModule, MatStepperModule } from '@angular/material';\nexport class ExampleMaterialModule {\n}\nExampleMaterialModule.decorators = [\n    { type: NgModule, args: [{\n                exports: [\n                    CdkTableModule,\n                    MatAutocompleteModule,\n                    MatButtonModule,\n                    MatButtonToggleModule,\n                    MatCardModule,\n                    MatCheckboxModule,\n                    MatChipsModule,\n                    MatDatepickerModule,\n                    MatDialogModule,\n                    MatExpansionModule,\n                    MatFormFieldModule,\n                    MatGridListModule,\n                    MatIconModule,\n                    MatInputModule,\n                    MatListModule,\n                    MatMenuModule,\n                    MatProgressBarModule,\n                    MatProgressSpinnerModule,\n                    MatRadioModule,\n                    MatSelectModule,\n                    MatSlideToggleModule,\n                    MatSliderModule,\n                    MatSidenavModule,\n                    MatSnackBarModule,\n                    MatStepperModule,\n                    MatTabsModule,\n                    MatToolbarModule,\n                    MatTooltipModule,\n                    MatPaginatorModule,\n                    MatSortModule,\n                    MatTableModule\n                ]\n            },] },\n];\n/**\n * @nocollapse\n */\nExampleMaterialModule.ctorParameters = () => [];\nfunction ExampleMaterialModule_tsickle_Closure_declarations() {\n    /** @type {?} */\n    ExampleMaterialModule.decorators;\n    /**\n     * @nocollapse\n     * @type {?}\n     */\n    ExampleMaterialModule.ctorParameters;\n}\n//# sourceMappingURL=material-module.js.map","import { Component } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport 'rxjs/add/operator/startWith';\nimport 'rxjs/add/operator/map';\nexport class User {\n    /**\n     * @param {?} name\n     */\n    constructor(name) {\n        this.name = name;\n    }\n}\nfunction User_tsickle_Closure_declarations() {\n    /** @type {?} */\n    User.prototype.name;\n}\n/**\n * \\@title Display value autocomplete\n */\nexport class AutocompleteDisplayExample {\n    constructor() {\n        this.myControl = new FormControl();\n        this.options = [\n            new User('Mary'),\n            new User('Shelley'),\n            new User('Igor')\n        ];\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this.filteredOptions = this.myControl.valueChanges\n            .startWith(null)\n            .map(user => user && typeof user === 'object' ? user.name : user)\n            .map(name => name ? this.filter(name) : this.options.slice());\n    }\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    filter(name) {\n        return this.options.filter(option => option.name.toLowerCase().indexOf(name.toLowerCase()) === 0);\n    }\n    /**\n     * @param {?} user\n     * @return {?}\n     */\n    displayFn(user) {\n        return user ? user.name : user;\n    }\n}\nAutocompleteDisplayExample.decorators = [\n    { type: Component, args: [{\n                selector: 'autocomplete-display-example',\n                template: \"<form class=\\\"example-form\\\"><mat-form-field class=\\\"example-full-width\\\"><input type=\\\"text\\\" placeholder=\\\"Assignee\\\" aria-label=\\\"Assignee\\\" matInput [formControl]=\\\"myControl\\\" [matAutocomplete]=\\\"auto\\\"><mat-autocomplete #auto=\\\"matAutocomplete\\\" [displayWith]=\\\"displayFn\\\"><mat-option *ngFor=\\\"let option of filteredOptions | async\\\" [value]=\\\"option\\\">{{ option.name }}</mat-option></mat-autocomplete></mat-form-field></form>\",\n                styles: [\".example-form { min-width: 150px; max-width: 500px; width: 100%; } .example-full-width { width: 100%; } \"]\n            },] },\n];\n/**\n * @nocollapse\n */\nAutocompleteDisplayExample.ctorParameters = () => [];\nfunction AutocompleteDisplayExample_tsickle_Closure_declarations() {\n    /** @type {?} */\n    AutocompleteDisplayExample.decorators;\n    /**\n     * @nocollapse\n     * @type {?}\n     */\n    AutocompleteDisplayExample.ctorParameters;\n    /** @type {?} */\n    AutocompleteDisplayExample.prototype.myControl;\n    /** @type {?} */\n    AutocompleteDisplayExample.prototype.options;\n    /** @type {?} */\n    AutocompleteDisplayExample.prototype.filteredOptions;\n}\n//# sourceMappingURL=autocomplete-display-example.js.map","import { Component } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport 'rxjs/add/operator/startWith';\nimport 'rxjs/add/operator/map';\n/**\n * \\@title Filter autocomplete\n */\nexport class AutocompleteFilterExample {\n    constructor() {\n        this.myControl = new FormControl();\n        this.options = [\n            'One',\n            'Two',\n            'Three'\n        ];\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this.filteredOptions = this.myControl.valueChanges\n            .startWith(null)\n            .map(val => val ? this.filter(val) : this.options.slice());\n    }\n    /**\n     * @param {?} val\n     * @return {?}\n     */\n    filter(val) {\n        return this.options.filter(option => option.toLowerCase().indexOf(val.toLowerCase()) === 0);\n    }\n}\nAutocompleteFilterExample.decorators = [\n    { type: Component, args: [{\n                selector: 'autocomplete-filter-example',\n                template: \"<form class=\\\"example-form\\\"><mat-form-field class=\\\"example-full-width\\\"><input type=\\\"text\\\" placeholder=\\\"Pick one\\\" aria-label=\\\"Number\\\" matInput [formControl]=\\\"myControl\\\" [matAutocomplete]=\\\"auto\\\"><mat-autocomplete #auto=\\\"matAutocomplete\\\"><mat-option *ngFor=\\\"let option of filteredOptions | async\\\" [value]=\\\"option\\\">{{ option }}</mat-option></mat-autocomplete></mat-form-field></form>\",\n                styles: [\".example-form { min-width: 150px; max-width: 500px; width: 100%; } .example-full-width { width: 100%; } \"]\n            },] },\n];\n/**\n * @nocollapse\n */\nAutocompleteFilterExample.ctorParameters = () => [];\nfunction AutocompleteFilterExample_tsickle_Closure_declarations() {\n    /** @type {?} */\n    AutocompleteFilterExample.decorators;\n    /**\n     * @nocollapse\n     * @type {?}\n     */\n    AutocompleteFilterExample.ctorParameters;\n    /** @type {?} */\n    AutocompleteFilterExample.prototype.myControl;\n    /** @type {?} */\n    AutocompleteFilterExample.prototype.options;\n    /** @type {?} */\n    AutocompleteFilterExample.prototype.filteredOptions;\n}\n//# sourceMappingURL=autocomplete-filter-example.js.map","import { Component } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport 'rxjs/add/operator/startWith';\nimport 'rxjs/add/operator/map';\n/**\n * \\@title Autocomplete overview\n */\nexport class AutocompleteOverviewExample {\n    constructor() {\n        this.states = [\n            {\n                name: 'Arkansas',\n                population: '2.978M',\n                // https://commons.wikimedia.org/wiki/File:Flag_of_Arkansas.svg\n                flag: 'https://upload.wikimedia.org/wikipedia/commons/9/9d/Flag_of_Arkansas.svg'\n            },\n            {\n                name: 'California',\n                population: '39.14M',\n                // https://commons.wikimedia.org/wiki/File:Flag_of_California.svg\n                flag: 'https://upload.wikimedia.org/wikipedia/commons/0/01/Flag_of_California.svg'\n            },\n            {\n                name: 'Florida',\n                population: '20.27M',\n                // https://commons.wikimedia.org/wiki/File:Flag_of_Florida.svg\n                flag: 'https://upload.wikimedia.org/wikipedia/commons/f/f7/Flag_of_Florida.svg'\n            },\n            {\n                name: 'Texas',\n                population: '27.47M',\n                // https://commons.wikimedia.org/wiki/File:Flag_of_Texas.svg\n                flag: 'https://upload.wikimedia.org/wikipedia/commons/f/f7/Flag_of_Texas.svg'\n            }\n        ];\n        this.stateCtrl = new FormControl();\n        this.filteredStates = this.stateCtrl.valueChanges\n            .startWith(null)\n            .map(state => state ? this.filterStates(state) : this.states.slice());\n    }\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    filterStates(name) {\n        return this.states.filter(state => state.name.toLowerCase().indexOf(name.toLowerCase()) === 0);\n    }\n}\nAutocompleteOverviewExample.decorators = [\n    { type: Component, args: [{\n                selector: 'autocomplete-overview-example',\n                template: \"<form class=\\\"example-form\\\"><mat-form-field class=\\\"example-full-width\\\"><input matInput placeholder=\\\"State\\\" aria-label=\\\"State\\\" [matAutocomplete]=\\\"auto\\\" [formControl]=\\\"stateCtrl\\\"><mat-autocomplete #auto=\\\"matAutocomplete\\\"><mat-option *ngFor=\\\"let state of filteredStates | async\\\" [value]=\\\"state.name\\\"><img style=\\\"vertical-align:middle\\\" aria-hidden src=\\\"{{state.flag}}\\\" height=\\\"25\\\"> <span>{{ state.name }}</span> | <small>Population: {{state.population}}</small></mat-option></mat-autocomplete></mat-form-field><br><mat-slide-toggle [checked]=\\\"stateCtrl.disabled\\\" (change)=\\\"stateCtrl.disabled ? stateCtrl.enable() : stateCtrl.disable()\\\">Disable Input?</mat-slide-toggle></form>\",\n                styles: [\".example-form { min-width: 150px; max-width: 500px; width: 100%; } .example-full-width { width: 100%; } \"]\n            },] },\n];\n/**\n * @nocollapse\n */\nAutocompleteOverviewExample.ctorParameters = () => [];\nfunction AutocompleteOverviewExample_tsickle_Closure_declarations() {\n    /** @type {?} */\n    AutocompleteOverviewExample.decorators;\n    /**\n     * @nocollapse\n     * @type {?}\n     */\n    AutocompleteOverviewExample.ctorParameters;\n    /** @type {?} */\n    AutocompleteOverviewExample.prototype.stateCtrl;\n    /** @type {?} */\n    AutocompleteOverviewExample.prototype.filteredStates;\n    /** @type {?} */\n    AutocompleteOverviewExample.prototype.states;\n}\n//# sourceMappingURL=autocomplete-overview-example.js.map","import { Component } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n/**\n * \\@title Simple autocomplete\n */\nexport class AutocompleteSimpleExample {\n    constructor() {\n        this.myControl = new FormControl();\n        this.options = [\n            'One',\n            'Two',\n            'Three'\n        ];\n    }\n}\nAutocompleteSimpleExample.decorators = [\n    { type: Component, args: [{\n                selector: 'autocomplete-simple-example',\n                template: \"<form class=\\\"example-form\\\"><mat-form-field class=\\\"example-full-width\\\"><input type=\\\"text\\\" placeholder=\\\"Pick one\\\" aria-label=\\\"Number\\\" matInput [formControl]=\\\"myControl\\\" [matAutocomplete]=\\\"auto\\\"><mat-autocomplete #auto=\\\"matAutocomplete\\\"><mat-option *ngFor=\\\"let option of options\\\" [value]=\\\"option\\\">{{ option }}</mat-option></mat-autocomplete></mat-form-field></form>\",\n                styles: [\".example-form { min-width: 150px; max-width: 500px; width: 100%; } .example-full-width { width: 100%; } \"]\n            },] },\n];\n/**\n * @nocollapse\n */\nAutocompleteSimpleExample.ctorParameters = () => [];\nfunction AutocompleteSimpleExample_tsickle_Closure_declarations() {\n    /** @type {?} */\n    AutocompleteSimpleExample.decorators;\n    /**\n     * @nocollapse\n     * @type {?}\n     */\n    AutocompleteSimpleExample.ctorParameters;\n    /** @type {?} */\n    AutocompleteSimpleExample.prototype.myControl;\n    /** @type {?} */\n    AutocompleteSimpleExample.prototype.options;\n}\n//# sourceMappingURL=autocomplete-simple-example.js.map","import { Component } from '@angular/core';\n/**\n * \\@title Basic buttons\n */\nexport class ButtonOverviewExample {\n}\nButtonOverviewExample.decorators = [\n    { type: Component, args: [{\n                selector: 'button-overview-example',\n                template: \"<button mat-button>Click me!</button>\",\n            },] },\n];\n/**\n * @nocollapse\n */\nButtonOverviewExample.ctorParameters = () => [];\nfunction ButtonOverviewExample_tsickle_Closure_declarations() {\n    /** @type {?} */\n    ButtonOverviewExample.decorators;\n    /**\n     * @nocollapse\n     * @type {?}\n     */\n    ButtonOverviewExample.ctorParameters;\n}\n//# sourceMappingURL=button-overview-example.js.map","import { Component } from '@angular/core';\n/**\n * \\@title Exclusive selection\n */\nexport class ButtonToggleExclusiveExample {\n}\nButtonToggleExclusiveExample.decorators = [\n    { type: Component, args: [{\n                selector: 'button-toggle-exclusive-example',\n                template: \"<mat-button-toggle-group #group=\\\"matButtonToggleGroup\\\"><mat-button-toggle value=\\\"left\\\"><mat-icon>format_align_left</mat-icon></mat-button-toggle><mat-button-toggle value=\\\"center\\\"><mat-icon>format_align_center</mat-icon></mat-button-toggle><mat-button-toggle value=\\\"right\\\"><mat-icon>format_align_right</mat-icon></mat-button-toggle><mat-button-toggle value=\\\"justify\\\" disabled=\\\"disabled\\\"><mat-icon>format_align_justify</mat-icon></mat-button-toggle></mat-button-toggle-group><div class=\\\"example-selected-value\\\">Selected value: {{group.value}}</div>\",\n                styles: [\".example-selected-value { margin: 15px 0; } \"],\n            },] },\n];\n/**\n * @nocollapse\n */\nButtonToggleExclusiveExample.ctorParameters = () => [];\nfunction ButtonToggleExclusiveExample_tsickle_Closure_declarations() {\n    /** @type {?} */\n    ButtonToggleExclusiveExample.decorators;\n    /**\n     * @nocollapse\n     * @type {?}\n     */\n    ButtonToggleExclusiveExample.ctorParameters;\n}\n//# sourceMappingURL=button-toggle-exclusive-example.js.map","import { Component } from '@angular/core';\n/**\n * \\@title Basic button-toggles\n */\nexport class ButtonToggleOverviewExample {\n}\nButtonToggleOverviewExample.decorators = [\n    { type: Component, args: [{\n                selector: 'button-toggle-overview-example',\n                template: \"<mat-button-toggle>Toggle me!</mat-button-toggle>\",\n            },] },\n];\n/**\n * @nocollapse\n */\nButtonToggleOverviewExample.ctorParameters = () => [];\nfunction ButtonToggleOverviewExample_tsickle_Closure_declarations() {\n    /** @type {?} */\n    ButtonToggleOverviewExample.decorators;\n    /**\n     * @nocollapse\n     * @type {?}\n     */\n    ButtonToggleOverviewExample.ctorParameters;\n}\n//# sourceMappingURL=button-toggle-overview-example.js.map","import { Component } from '@angular/core';\n/**\n * \\@title Button varieties\n */\nexport class ButtonTypesExample {\n}\nButtonTypesExample.decorators = [\n    { type: Component, args: [{\n                selector: 'button-types-example',\n                template: \"<h3>Basic Buttons</h3><div class=\\\"button-row\\\"><button mat-button>Basic</button> <button mat-button color=\\\"primary\\\">Primary</button> <button mat-button color=\\\"accent\\\">Accent</button> <button mat-button color=\\\"warn\\\">Warn</button> <button mat-button disabled=\\\"disabled\\\">Disabled</button> <a mat-button routerLink=\\\".\\\">Link</a></div><h3>Raised Buttons</h3><div class=\\\"button-row\\\"><button mat-raised-button>Basic</button> <button mat-raised-button color=\\\"primary\\\">Primary</button> <button mat-raised-button color=\\\"accent\\\">Accent</button> <button mat-raised-button color=\\\"warn\\\">Warn</button> <button mat-raised-button disabled=\\\"disabled\\\">Disabled</button> <a mat-raised-button routerLink=\\\".\\\">Link</a></div><h3>Icon Buttons</h3><div class=\\\"button-row\\\"><button mat-icon-button><mat-icon class=\\\"md-24\\\" aria-label=\\\"Example icon-button with a heart icon\\\">favorite</mat-icon></button> <button mat-icon-button color=\\\"primary\\\"><mat-icon class=\\\"md-24\\\" aria-label=\\\"Example icon-button with a heart icon\\\">favorite</mat-icon></button> <button mat-icon-button color=\\\"accent\\\"><mat-icon class=\\\"md-24\\\" aria-label=\\\"Example icon-button with a heart icon\\\">favorite</mat-icon></button> <button mat-icon-button color=\\\"warn\\\"><mat-icon class=\\\"md-24\\\" aria-label=\\\"Example icon-button with a heart icon\\\">favorite</mat-icon></button> <button mat-icon-button disabled=\\\"disabled\\\"><mat-icon class=\\\"md-24\\\" aria-label=\\\"Example icon-button with a heart icon\\\">favorite</mat-icon></button></div><h3>Fab Buttons</h3><div class=\\\"button-row\\\"><button mat-fab>Basic</button> <button mat-fab color=\\\"primary\\\">Primary</button> <button mat-fab color=\\\"accent\\\">Accent</button> <button mat-fab color=\\\"warn\\\">Warn</button> <button mat-fab disabled=\\\"disabled\\\">Disabled</button> <button mat-fab><mat-icon class=\\\"md-24\\\" aria-label=\\\"Example icon-button with a heart icon\\\">favorite</mat-icon></button> <a mat-fab routerLink=\\\".\\\">Link</a></div><h3>Mini Fab Buttons</h3><div class=\\\"button-row\\\"><button mat-mini-fab>Basic</button> <button mat-mini-fab color=\\\"primary\\\">Primary</button> <button mat-mini-fab color=\\\"accent\\\">Accent</button> <button mat-mini-fab color=\\\"warn\\\">Warn</button> <button mat-mini-fab disabled=\\\"disabled\\\">Disabled</button> <button mat-mini-fab><mat-icon class=\\\"md-24\\\" aria-label=\\\"Example icon-button with a heart icon\\\">favorite</mat-icon></button> <a mat-mini-fab routerLink=\\\".\\\">Link</a></div>\",\n                styles: [\".example-button-row { display: flex; align-items: center; justify-content: space-around; } \"],\n            },] },\n];\n/**\n * @nocollapse\n */\nButtonTypesExample.ctorParameters = () => [];\nfunction ButtonTypesExample_tsickle_Closure_declarations() {\n    /** @type {?} */\n    ButtonTypesExample.decorators;\n    /**\n     * @nocollapse\n     * @type {?}\n     */\n    ButtonTypesExample.ctorParameters;\n}\n//# sourceMappingURL=button-types-example.js.map","import { Component } from '@angular/core';\n/**\n * \\@title Card with multiple sections\n */\nexport class CardFancyExample {\n}\nCardFancyExample.decorators = [\n    { type: Component, args: [{\n                selector: 'card-fancy-example',\n                template: \"<mat-card class=\\\"example-card\\\"><mat-card-header><div mat-card-avatar class=\\\"example-header-image\\\"></div><mat-card-title>Shiba Inu</mat-card-title><mat-card-subtitle>Dog Breed</mat-card-subtitle></mat-card-header><img mat-card-image src=\\\"http://material.angular.io/assets/img/examples/shiba2.jpg\\\" alt=\\\"Photo of a Shiba Inu\\\"><mat-card-content><p>The Shiba Inu is the smallest of the six original and distinct spitz breeds of dog from Japan. A small, agile dog that copes very well with mountainous terrain, the Shiba Inu was originally bred for hunting.</p></mat-card-content><mat-card-actions><button mat-button>LIKE</button> <button mat-button>SHARE</button></mat-card-actions></mat-card>\",\n                styles: [\".example-card { width: 400px; } .example-header-image { background-image: url('http://material.angular.io/assets/img/examples/shiba1.jpg'); background-size: cover; } \"],\n            },] },\n];\n/**\n * @nocollapse\n */\nCardFancyExample.ctorParameters = () => [];\nfunction CardFancyExample_tsickle_Closure_declarations() {\n    /** @type {?} */\n    CardFancyExample.decorators;\n    /**\n     * @nocollapse\n     * @type {?}\n     */\n    CardFancyExample.ctorParameters;\n}\n//# sourceMappingURL=card-fancy-example.js.map","import { Component } from '@angular/core';\n/**\n * \\@title Basic cards\n */\nexport class CardOverviewExample {\n}\nCardOverviewExample.decorators = [\n    { type: Component, args: [{\n                selector: 'card-overview-example',\n                template: \"<mat-card>Simple card</mat-card>\",\n            },] },\n];\n/**\n * @nocollapse\n */\nCardOverviewExample.ctorParameters = () => [];\nfunction CardOverviewExample_tsickle_Closure_declarations() {\n    /** @type {?} */\n    CardOverviewExample.decorators;\n    /**\n     * @nocollapse\n     * @type {?}\n     */\n    CardOverviewExample.ctorParameters;\n}\n//# sourceMappingURL=card-overview-example.js.map","import { Component } from '@angular/core';\nimport { DataSource } from '@angular/cdk/collections';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport 'rxjs/add/operator/startWith';\nimport 'rxjs/add/observable/merge';\nimport 'rxjs/add/operator/map';\n/**\n * \\@title Basic CDK data-table\n */\nexport class CdkTableBasicExample {\n    constructor() {\n        this.displayedColumns = ['userId', 'userName', 'progress', 'color'];\n        this.exampleDatabase = new ExampleDatabase();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this.dataSource = new ExampleDataSource(this.exampleDatabase);\n    }\n}\nCdkTableBasicExample.decorators = [\n    { type: Component, args: [{\n                selector: 'cdk-table-basic-example',\n                styles: [\"/* Structure */ .example-container { display: flex; flex-direction: column; min-width: 300px; } /* * Styles to make the demo's cdk-table match the material design spec * https://material.io/guidelines/components/data-tables.html */ .example-table { flex: 1 1 auto; overflow: auto; max-height: 500px; } .example-header-row, .example-row { display: flex; border-bottom: 1px solid #ccc; align-items: center; height: 32px; padding: 0 8px; } .example-cell, .example-header-cell { flex: 1; } .example-header-cell { font-size: 12px; font-weight: bold; color: rgba(0, 0, 0, 0.54); } .example-cell { font-size: 13px; color: rgba(0, 0, 0, 0.87); } \"],\n                template: \"<div class=\\\"example-container mat-elevation-z8\\\"><cdk-table #table [dataSource]=\\\"dataSource\\\" class=\\\"example-table\\\"><ng-container cdkColumnDef=\\\"userId\\\"><cdk-header-cell *cdkHeaderCellDef class=\\\"example-header-cell\\\">ID</cdk-header-cell><cdk-cell *cdkCellDef=\\\"let row\\\" class=\\\"example-cell\\\">{{row.id}}</cdk-cell></ng-container><ng-container cdkColumnDef=\\\"progress\\\"><cdk-header-cell *cdkHeaderCellDef class=\\\"example-header-cell\\\">Progress</cdk-header-cell><cdk-cell *cdkCellDef=\\\"let row\\\" class=\\\"example-cell\\\">{{row.progress}}%</cdk-cell></ng-container><ng-container cdkColumnDef=\\\"userName\\\"><cdk-header-cell *cdkHeaderCellDef class=\\\"example-header-cell\\\">Name</cdk-header-cell><cdk-cell *cdkCellDef=\\\"let row\\\" class=\\\"example-cell\\\">{{row.name}}</cdk-cell></ng-container><ng-container cdkColumnDef=\\\"color\\\"><cdk-header-cell *cdkHeaderCellDef class=\\\"example-header-cell\\\">Color</cdk-header-cell><cdk-cell *cdkCellDef=\\\"let row\\\" class=\\\"example-cell\\\" [style.color]=\\\"row.color\\\">{{row.color}}</cdk-cell></ng-container><cdk-header-row *cdkHeaderRowDef=\\\"displayedColumns\\\" class=\\\"example-header-row\\\"></cdk-header-row><cdk-row *cdkRowDef=\\\"let row; columns: displayedColumns;\\\" class=\\\"example-row\\\"></cdk-row></cdk-table></div>\",\n            },] },\n];\n/**\n * @nocollapse\n */\nCdkTableBasicExample.ctorParameters = () => [];\nfunction CdkTableBasicExample_tsickle_Closure_declarations() {\n    /** @type {?} */\n    CdkTableBasicExample.decorators;\n    /**\n     * @nocollapse\n     * @type {?}\n     */\n    CdkTableBasicExample.ctorParameters;\n    /** @type {?} */\n    CdkTableBasicExample.prototype.displayedColumns;\n    /** @type {?} */\n    CdkTableBasicExample.prototype.exampleDatabase;\n    /** @type {?} */\n    CdkTableBasicExample.prototype.dataSource;\n}\n/**\n * Constants used to fill up our data base.\n */\nconst COLORS = ['maroon', 'red', 'orange', 'yellow', 'olive', 'green', 'purple',\n    'fuchsia', 'lime', 'teal', 'aqua', 'blue', 'navy', 'black', 'gray'];\nconst /** @type {?} */ NAMES = ['Maia', 'Asher', 'Olivia', 'Atticus', 'Amelia', 'Jack',\n    'Charlotte', 'Theodore', 'Isla', 'Oliver', 'Isabella', 'Jasper',\n    'Cora', 'Levi', 'Violet', 'Arthur', 'Mia', 'Thomas', 'Elizabeth'];\n/**\n * An example database that the data source uses to retrieve data for the table.\n */\nexport class ExampleDatabase {\n    constructor() {\n        /**\n         * Stream that emits whenever the data has been modified.\n         */\n        this.dataChange = new BehaviorSubject([]);\n        // Fill up the database with 100 users.\n        for (let i = 0; i < 100; i++) {\n            this.addUser();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    get data() { return this.dataChange.value; }\n    /**\n     * Adds a new user to the database.\n     * @return {?}\n     */\n    addUser() {\n        const /** @type {?} */ copiedData = this.data.slice();\n        copiedData.push(this.createNewUser());\n        this.dataChange.next(copiedData);\n    }\n    /**\n     * Builds and returns a new User.\n     * @return {?}\n     */\n    createNewUser() {\n        const /** @type {?} */ name = NAMES[Math.round(Math.random() * (NAMES.length - 1))] + ' ' +\n            NAMES[Math.round(Math.random() * (NAMES.length - 1))].charAt(0) + '.';\n        return {\n            id: (this.data.length + 1).toString(),\n            name: name,\n            progress: Math.round(Math.random() * 100).toString(),\n            color: COLORS[Math.round(Math.random() * (COLORS.length - 1))]\n        };\n    }\n}\nfunction ExampleDatabase_tsickle_Closure_declarations() {\n    /**\n     * Stream that emits whenever the data has been modified.\n     * @type {?}\n     */\n    ExampleDatabase.prototype.dataChange;\n}\n/**\n * Data source to provide what data should be rendered in the table. Note that the data source\n * can retrieve its data in any way. In this case, the data source is provided a reference\n * to a common data base, ExampleDatabase. It is not the data source's responsibility to manage\n * the underlying data. Instead, it only needs to take the data and send the table exactly what\n * should be rendered.\n */\nexport class ExampleDataSource extends DataSource {\n    /**\n     * @param {?} _exampleDatabase\n     */\n    constructor(_exampleDatabase) {\n        super();\n        this._exampleDatabase = _exampleDatabase;\n    }\n    /**\n     * Connect function called by the table to retrieve one stream containing the data to render.\n     * @return {?}\n     */\n    connect() {\n        return this._exampleDatabase.dataChange;\n    }\n    /**\n     * @return {?}\n     */\n    disconnect() { }\n}\nfunction ExampleDataSource_tsickle_Closure_declarations() {\n    /** @type {?} */\n    ExampleDataSource.prototype._exampleDatabase;\n}\n//# sourceMappingURL=cdk-table-basic-example.js.map","import { Component } from '@angular/core';\n/**\n * \\@title Configurable checkbox\n */\nexport class CheckboxConfigurableExample {\n    constructor() {\n        this.checked = false;\n        this.indeterminate = false;\n        this.align = 'start';\n        this.disabled = false;\n    }\n}\nCheckboxConfigurableExample.decorators = [\n    { type: Component, args: [{\n                selector: 'checkbox-configurable-example',\n                template: \"<mat-card><mat-card-content><h2 class=\\\"example-h2\\\">Checkbox configuration</h2><section class=\\\"example-section\\\"><mat-checkbox class=\\\"example-margin\\\" [(ngModel)]=\\\"checked\\\">Checked</mat-checkbox><mat-checkbox class=\\\"example-margin\\\" [(ngModel)]=\\\"indeterminate\\\">Indeterminate</mat-checkbox></section><section class=\\\"example-section\\\"><label class=\\\"example-margin\\\">Align:</label><mat-radio-group [(ngModel)]=\\\"align\\\"><mat-radio-button class=\\\"example-margin\\\" value=\\\"start\\\">Start</mat-radio-button><mat-radio-button class=\\\"example-margin\\\" value=\\\"end\\\">End</mat-radio-button></mat-radio-group></section><section class=\\\"example-section\\\"><mat-checkbox class=\\\"example-margin\\\" [(ngModel)]=\\\"disabled\\\">Disabled</mat-checkbox></section></mat-card-content></mat-card><mat-card class=\\\"result\\\"><mat-card-content><h2 class=\\\"example-h2\\\">Result</h2><section class=\\\"example-section\\\"><mat-checkbox class=\\\"example-margin\\\" [(ngModel)]=\\\"checked\\\" [(indeterminate)]=\\\"indeterminate\\\" [align]=\\\"align\\\" [disabled]=\\\"disabled\\\">I'm a checkbox</mat-checkbox></section></mat-card-content></mat-card>\",\n                styles: [\".example-h2 { margin: 10px; } .example-section { display: flex; align-content: center; align-items: center; height: 60px; } .example-margin { margin: 0 10px; } \"],\n            },] },\n];\n/**\n * @nocollapse\n */\nCheckboxConfigurableExample.ctorParameters = () => [];\nfunction CheckboxConfigurableExample_tsickle_Closure_declarations() {\n    /** @type {?} */\n    CheckboxConfigurableExample.decorators;\n    /**\n     * @nocollapse\n     * @type {?}\n     */\n    CheckboxConfigurableExample.ctorParameters;\n    /** @type {?} */\n    CheckboxConfigurableExample.prototype.checked;\n    /** @type {?} */\n    CheckboxConfigurableExample.prototype.indeterminate;\n    /** @type {?} */\n    CheckboxConfigurableExample.prototype.align;\n    /** @type {?} */\n    CheckboxConfigurableExample.prototype.disabled;\n}\n//# sourceMappingURL=checkbox-configurable-example.js.map","import { Component } from '@angular/core';\n/**\n * \\@title Basic checkboxes\n */\nexport class CheckboxOverviewExample {\n}\nCheckboxOverviewExample.decorators = [\n    { type: Component, args: [{\n                selector: 'checkbox-overview-example',\n                template: \"<mat-checkbox>Check me!</mat-checkbox>\",\n            },] },\n];\n/**\n * @nocollapse\n */\nCheckboxOverviewExample.ctorParameters = () => [];\nfunction CheckboxOverviewExample_tsickle_Closure_declarations() {\n    /** @type {?} */\n    CheckboxOverviewExample.decorators;\n    /**\n     * @nocollapse\n     * @type {?}\n     */\n    CheckboxOverviewExample.ctorParameters;\n}\n//# sourceMappingURL=checkbox-overview-example.js.map","import { Component } from '@angular/core';\nimport { ENTER } from '@angular/cdk/keycodes';\nconst /** @type {?} */ COMMA = 188;\n/**\n * \\@title Chips with input\n */\nexport class ChipsInputExample {\n    constructor() {\n        this.visible = true;\n        this.selectable = true;\n        this.removable = true;\n        this.addOnBlur = true;\n        // Enter, comma\n        this.separatorKeysCodes = [ENTER, COMMA];\n        this.fruits = [\n            { name: 'Lemon' },\n            { name: 'Lime' },\n            { name: 'Apple' },\n        ];\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    add(event) {\n        let /** @type {?} */ input = event.input;\n        let /** @type {?} */ value = event.value;\n        // Add our person\n        if ((value || '').trim()) {\n            this.fruits.push({ name: value.trim() });\n        }\n        // Reset the input value\n        if (input) {\n            input.value = '';\n        }\n    }\n    /**\n     * @param {?} fruit\n     * @return {?}\n     */\n    remove(fruit) {\n        let /** @type {?} */ index = this.fruits.indexOf(fruit);\n        if (index >= 0) {\n            this.fruits.splice(index, 1);\n        }\n    }\n}\nChipsInputExample.decorators = [\n    { type: Component, args: [{\n                selector: 'chips-input-example',\n                template: \"<mat-form-field class=\\\"demo-chip-list\\\"><mat-chip-list matPrefix #chipList><mat-chip *ngFor=\\\"let fruit of fruits\\\" [selectable]=\\\"selectable\\\" [removable]=\\\"removable\\\" (remove)=\\\"remove(fruit)\\\">{{fruit.name}}<mat-icon matChipRemove *ngIf=\\\"removable\\\">cancel</mat-icon></mat-chip></mat-chip-list><input matInput placeholder=\\\"New fruit...\\\" [matChipInputFor]=\\\"chipList\\\" [matChipInputSeparatorKeyCodes]=\\\"separatorKeysCodes\\\" [matChipInputAddOnBlur]=\\\"addOnBlur\\\" (matChipInputTokenEnd)=\\\"add($event)\\\"></mat-form-field>\",\n                styles: [\".demo-chip-list{width:100%}\"]\n            },] },\n];\n/**\n * @nocollapse\n */\nChipsInputExample.ctorParameters = () => [];\nfunction ChipsInputExample_tsickle_Closure_declarations() {\n    /** @type {?} */\n    ChipsInputExample.decorators;\n    /**\n     * @nocollapse\n     * @type {?}\n     */\n    ChipsInputExample.ctorParameters;\n    /** @type {?} */\n    ChipsInputExample.prototype.visible;\n    /** @type {?} */\n    ChipsInputExample.prototype.selectable;\n    /** @type {?} */\n    ChipsInputExample.prototype.removable;\n    /** @type {?} */\n    ChipsInputExample.prototype.addOnBlur;\n    /** @type {?} */\n    ChipsInputExample.prototype.separatorKeysCodes;\n    /** @type {?} */\n    ChipsInputExample.prototype.fruits;\n}\n//# sourceMappingURL=chips-input-example.js.map","import { Component } from '@angular/core';\n/**\n * \\@title Basic chips\n */\nexport class ChipsOverviewExample {\n}\nChipsOverviewExample.decorators = [\n    { type: Component, args: [{\n                selector: 'chips-overview-example',\n                template: \"<mat-chip-list><mat-chip>One fish</mat-chip><mat-chip>Two fish</mat-chip><mat-chip color=\\\"primary\\\" selected=\\\"true\\\">Primary fish</mat-chip><mat-chip color=\\\"accent\\\" selected=\\\"true\\\">Accent fish</mat-chip></mat-chip-list>\",\n                styles: [\"/** No CSS for this example */ \"],\n            },] },\n];\n/**\n * @nocollapse\n */\nChipsOverviewExample.ctorParameters = () => [];\nfunction ChipsOverviewExample_tsickle_Closure_declarations() {\n    /** @type {?} */\n    ChipsOverviewExample.decorators;\n    /**\n     * @nocollapse\n     * @type {?}\n     */\n    ChipsOverviewExample.ctorParameters;\n}\n//# sourceMappingURL=chips-overview-example.js.map","import { Component } from '@angular/core';\n/**\n * \\@title Stacked chips\n */\nexport class ChipsStackedExample {\n    constructor() {\n        this.availableColors = [\n            { name: 'none', color: '' },\n            { name: 'Primary', color: 'primary' },\n            { name: 'Accent', color: 'accent' },\n            { name: 'Warn', color: 'warn' }\n        ];\n    }\n}\nChipsStackedExample.decorators = [\n    { type: Component, args: [{\n                selector: 'chips-stacked-example',\n                template: \"<mat-chip-list class=\\\"mat-chip-list-stacked\\\"><mat-chip *ngFor=\\\"let chip of availableColors\\\" selected=\\\"true\\\" [color]=\\\"chip.color\\\">{{chip.name}}</mat-chip></mat-chip-list>\",\n                styles: [\"mat-chip { max-width: 200px; } \"],\n            },] },\n];\n/**\n * @nocollapse\n */\nChipsStackedExample.ctorParameters = () => [];\nfunction ChipsStackedExample_tsickle_Closure_declarations() {\n    /** @type {?} */\n    ChipsStackedExample.decorators;\n    /**\n     * @nocollapse\n     * @type {?}\n     */\n    ChipsStackedExample.ctorParameters;\n    /** @type {?} */\n    ChipsStackedExample.prototype.color;\n    /** @type {?} */\n    ChipsStackedExample.prototype.availableColors;\n}\n//# sourceMappingURL=chips-stacked-example.js.map","import { Component } from '@angular/core';\n/**\n * \\@title Datepicker API\n */\nexport class DatepickerApiExample {\n}\nDatepickerApiExample.decorators = [\n    { type: Component, args: [{\n                selector: 'datepicker-api-example',\n                template: \"<mat-form-field class=\\\"example-full-width\\\"><input matInput [matDatepicker]=\\\"picker\\\" placeholder=\\\"Choose a date\\\"><mat-datepicker #picker></mat-datepicker></mat-form-field><button mat-raised-button (click)=\\\"picker.open()\\\">Open</button>\",\n                styles: [\"/** No CSS for this example */ \"],\n            },] },\n];\n/**\n * @nocollapse\n */\nDatepickerApiExample.ctorParameters = () => [];\nfunction DatepickerApiExample_tsickle_Closure_declarations() {\n    /** @type {?} */\n    DatepickerApiExample.decorators;\n    /**\n     * @nocollapse\n     * @type {?}\n     */\n    DatepickerApiExample.ctorParameters;\n}\n//# sourceMappingURL=datepicker-api-example.js.map","import { Component } from '@angular/core';\n/**\n * \\@title Datepicker Filter\n */\nexport class DatepickerFilterExample {\n    constructor() {\n        this.myFilter = (d) => {\n            const /** @type {?} */ day = d.getDay();\n            // Prevent Saturday and Sunday from being selected.\n            return day !== 0 && day !== 6;\n        };\n    }\n}\nDatepickerFilterExample.decorators = [\n    { type: Component, args: [{\n                selector: 'datepicker-filter-example',\n                template: \"<mat-form-field class=\\\"example-full-width\\\"><input matInput [matDatepickerFilter]=\\\"myFilter\\\" [matDatepicker]=\\\"picker\\\" placeholder=\\\"Choose a date\\\"><mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle><mat-datepicker #picker></mat-datepicker></mat-form-field>\",\n                styles: [\"/** No CSS for this example */ \"],\n            },] },\n];\n/**\n * @nocollapse\n */\nDatepickerFilterExample.ctorParameters = () => [];\nfunction DatepickerFilterExample_tsickle_Closure_declarations() {\n    /** @type {?} */\n    DatepickerFilterExample.decorators;\n    /**\n     * @nocollapse\n     * @type {?}\n     */\n    DatepickerFilterExample.ctorParameters;\n    /** @type {?} */\n    DatepickerFilterExample.prototype.myFilter;\n}\n//# sourceMappingURL=datepicker-filter-example.js.map","import { Component } from '@angular/core';\n/**\n * \\@title Datepicker Min Max\n */\nexport class DatepickerMinMaxExample {\n    constructor() {\n        this.minDate = new Date(2000, 0, 1);\n        this.maxDate = new Date(2020, 0, 1);\n    }\n}\nDatepickerMinMaxExample.decorators = [\n    { type: Component, args: [{\n                selector: 'datepicker-min-max-example',\n                template: \"<mat-form-field class=\\\"example-full-width\\\"><input matInput [min]=\\\"minDate\\\" [max]=\\\"maxDate\\\" [matDatepicker]=\\\"picker\\\" placeholder=\\\"Choose a date\\\"><mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle><mat-datepicker #picker></mat-datepicker></mat-form-field>\",\n                styles: [\"/** No CSS for this example */ \"],\n            },] },\n];\n/**\n * @nocollapse\n */\nDatepickerMinMaxExample.ctorParameters = () => [];\nfunction DatepickerMinMaxExample_tsickle_Closure_declarations() {\n    /** @type {?} */\n    DatepickerMinMaxExample.decorators;\n    /**\n     * @nocollapse\n     * @type {?}\n     */\n    DatepickerMinMaxExample.ctorParameters;\n    /** @type {?} */\n    DatepickerMinMaxExample.prototype.minDate;\n    /** @type {?} */\n    DatepickerMinMaxExample.prototype.maxDate;\n}\n//# sourceMappingURL=datepicker-min-max-example.js.map","import { Component } from '@angular/core';\n/**\n * \\@title Basic datepicker\n */\nexport class DatepickerOverviewExample {\n}\nDatepickerOverviewExample.decorators = [\n    { type: Component, args: [{\n                selector: 'datepicker-overview-example',\n                template: \"<mat-form-field><input matInput [matDatepicker]=\\\"picker\\\" placeholder=\\\"Choose a date\\\"><mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle><mat-datepicker #picker></mat-datepicker></mat-form-field>\",\n                styles: [\"/** No CSS for this example */ \"],\n            },] },\n];\n/**\n * @nocollapse\n */\nDatepickerOverviewExample.ctorParameters = () => [];\nfunction DatepickerOverviewExample_tsickle_Closure_declarations() {\n    /** @type {?} */\n    DatepickerOverviewExample.decorators;\n    /**\n     * @nocollapse\n     * @type {?}\n     */\n    DatepickerOverviewExample.ctorParameters;\n}\n//# sourceMappingURL=datepicker-overview-example.js.map","import { Component } from '@angular/core';\n/**\n * \\@title Datepicker start date\n */\nexport class DatepickerStartViewExample {\n    constructor() {\n        this.startDate = new Date(1990, 0, 1);\n    }\n}\nDatepickerStartViewExample.decorators = [\n    { type: Component, args: [{\n                selector: 'datepicker-start-view-example',\n                template: \"<mat-form-field><input matInput [matDatepicker]=\\\"picker\\\" placeholder=\\\"Choose a date\\\"><mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle><mat-datepicker #picker startView=\\\"year\\\" [startAt]=\\\"startDate\\\"></mat-datepicker></mat-form-field>\",\n                styles: [\"/** No CSS for this example */ \"],\n            },] },\n];\n/**\n * @nocollapse\n */\nDatepickerStartViewExample.ctorParameters = () => [];\nfunction DatepickerStartViewExample_tsickle_Closure_declarations() {\n    /** @type {?} */\n    DatepickerStartViewExample.decorators;\n    /**\n     * @nocollapse\n     * @type {?}\n     */\n    DatepickerStartViewExample.ctorParameters;\n    /** @type {?} */\n    DatepickerStartViewExample.prototype.startDate;\n}\n//# sourceMappingURL=datepicker-start-view-example.js.map","import { Component } from '@angular/core';\n/**\n * \\@title Datepicker Touch\n */\nexport class DatepickerTouchExample {\n}\nDatepickerTouchExample.decorators = [\n    { type: Component, args: [{\n                selector: 'datepicker-touch-example',\n                template: \"<mat-form-field class=\\\"example-full-width\\\"><input matInput [matDatepicker]=\\\"picker\\\" placeholder=\\\"Choose a date\\\"><mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle><mat-datepicker touchUi=\\\"true\\\" #picker></mat-datepicker></mat-form-field>\",\n                styles: [\"/** No CSS for this example */ \"],\n            },] },\n];\n/**\n * @nocollapse\n */\nDatepickerTouchExample.ctorParameters = () => [];\nfunction DatepickerTouchExample_tsickle_Closure_declarations() {\n    /** @type {?} */\n    DatepickerTouchExample.decorators;\n    /**\n     * @nocollapse\n     * @type {?}\n     */\n    DatepickerTouchExample.ctorParameters;\n}\n//# sourceMappingURL=datepicker-touch-example.js.map","import { Component } from '@angular/core';\nimport { MatDialog } from '@angular/material';\n/**\n * \\@title Dialog with header, scrollable content and actions\n */\nexport class DialogContentExample {\n    /**\n     * @param {?} dialog\n     */\n    constructor(dialog) {\n        this.dialog = dialog;\n    }\n    /**\n     * @return {?}\n     */\n    openDialog() {\n        const /** @type {?} */ dialogRef = this.dialog.open(DialogContentExampleDialog, {\n            height: '350px'\n        });\n        dialogRef.afterClosed().subscribe(result => {\n            console.log(`Dialog result: ${result}`);\n        });\n    }\n}\nDialogContentExample.decorators = [\n    { type: Component, args: [{\n                selector: 'dialog-content-example',\n                template: \"<button mat-button (click)=\\\"openDialog()\\\">Open dialog</button>\",\n            },] },\n];\n/**\n * @nocollapse\n */\nDialogContentExample.ctorParameters = () => [\n    { type: MatDialog, },\n];\nfunction DialogContentExample_tsickle_Closure_declarations() {\n    /** @type {?} */\n    DialogContentExample.decorators;\n    /**\n     * @nocollapse\n     * @type {?}\n     */\n    DialogContentExample.ctorParameters;\n    /** @type {?} */\n    DialogContentExample.prototype.dialog;\n}\nexport class DialogContentExampleDialog {\n}\nDialogContentExampleDialog.decorators = [\n    { type: Component, args: [{\n                selector: 'dialog-content-example-dialog',\n                template: \"<h2 mat-dialog-title>Install Angular</h2><mat-dialog-content><h3>DEVELOP ACROSS ALL PLATFORMS</h3><p>Learn one way to build applications with Angular and reuse your code and abilities to build apps for any deployment target. For web, mobile web, native mobile and native desktop.</p><h3>SPEED & PERFORMANCE</h3><p>Achieve the maximum speed possible on the Web Platform today, and take it further, via Web Workers and server-side rendering. Angular puts you in control over scalability. Meet huge data requirements by building data models on RxJS, Immutable.js or another push-model.</p><h3>INCREDIBLE TOOLING</h3><p>Build features quickly with simple, declarative templates. Extend the template language with your own components and use a wide array of existing components. Get immediate Angular-specific help and feedback with nearly every IDE and editor. All this comes together so you can focus on building amazing apps rather than trying to make the code work.</p><h3>LOVED BY MILLIONS</h3><p>From prototype through global deployment, Angular delivers the productivity and scalable infrastructure that supports Google's largest applications.</p></mat-dialog-content><mat-dialog-actions><button mat-button [mat-dialog-close]=\\\"true\\\" tabindex=\\\"1\\\">Install</button> <button mat-button mat-dialog-close tabindex=\\\"-1\\\">Cancel</button></mat-dialog-actions>\",\n            },] },\n];\n/**\n * @nocollapse\n */\nDialogContentExampleDialog.ctorParameters = () => [];\nfunction DialogContentExampleDialog_tsickle_Closure_declarations() {\n    /** @type {?} */\n    DialogContentExampleDialog.decorators;\n    /**\n     * @nocollapse\n     * @type {?}\n     */\n    DialogContentExampleDialog.ctorParameters;\n}\n//# sourceMappingURL=dialog-content-example.js.map","import { Component, Inject } from '@angular/core';\nimport { MatDialog, MAT_DIALOG_DATA } from '@angular/material';\n/**\n * \\@title Injecting data when opening a dialog\n */\nexport class DialogDataExample {\n    /**\n     * @param {?} dialog\n     */\n    constructor(dialog) {\n        this.dialog = dialog;\n    }\n    /**\n     * @return {?}\n     */\n    openDialog() {\n        this.dialog.open(DialogDataExampleDialog, {\n            data: {\n                animal: 'panda'\n            }\n        });\n    }\n}\nDialogDataExample.decorators = [\n    { type: Component, args: [{\n                selector: 'dialog-data-example',\n                template: \"<button mat-button (click)=\\\"openDialog()\\\">Open dialog</button>\",\n            },] },\n];\n/**\n * @nocollapse\n */\nDialogDataExample.ctorParameters = () => [\n    { type: MatDialog, },\n];\nfunction DialogDataExample_tsickle_Closure_declarations() {\n    /** @type {?} */\n    DialogDataExample.decorators;\n    /**\n     * @nocollapse\n     * @type {?}\n     */\n    DialogDataExample.ctorParameters;\n    /** @type {?} */\n    DialogDataExample.prototype.dialog;\n}\nexport class DialogDataExampleDialog {\n    /**\n     * @param {?} data\n     */\n    constructor(data) {\n        this.data = data;\n    }\n}\nDialogDataExampleDialog.decorators = [\n    { type: Component, args: [{\n                selector: 'dialog-data-example-dialog',\n                template: \"<h1 mat-dialog-title>Favorite Animal</h1><div mat-dialog-content>My favorite animal is:<ul><li><span *ngIf=\\\"data.animal === 'panda'\\\">&#10003;</span> Panda</li><li><span *ngIf=\\\"data.animal === 'unicorn'\\\">&#10003;</span> Unicorn</li><li><span *ngIf=\\\"data.animal === 'lion'\\\">&#10003;</span> Lion</li></ul></div>\",\n            },] },\n];\n/**\n * @nocollapse\n */\nDialogDataExampleDialog.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_DIALOG_DATA,] },] },\n];\nfunction DialogDataExampleDialog_tsickle_Closure_declarations() {\n    /** @type {?} */\n    DialogDataExampleDialog.decorators;\n    /**\n     * @nocollapse\n     * @type {?}\n     */\n    DialogDataExampleDialog.ctorParameters;\n    /** @type {?} */\n    DialogDataExampleDialog.prototype.data;\n}\n//# sourceMappingURL=dialog-data-example.js.map","import { Component } from '@angular/core';\nimport { MatDialog } from '@angular/material';\n/**\n * \\@title Dialog elements\n */\nexport class DialogElementsExample {\n    /**\n     * @param {?} dialog\n     */\n    constructor(dialog) {\n        this.dialog = dialog;\n    }\n    /**\n     * @return {?}\n     */\n    openDialog() {\n        this.dialog.open(DialogElementsExampleDialog);\n    }\n}\nDialogElementsExample.decorators = [\n    { type: Component, args: [{\n                selector: 'dialog-elements-example',\n                template: \"<button mat-button (click)=\\\"openDialog()\\\">Launch dialog</button>\",\n            },] },\n];\n/**\n * @nocollapse\n */\nDialogElementsExample.ctorParameters = () => [\n    { type: MatDialog, },\n];\nfunction DialogElementsExample_tsickle_Closure_declarations() {\n    /** @type {?} */\n    DialogElementsExample.decorators;\n    /**\n     * @nocollapse\n     * @type {?}\n     */\n    DialogElementsExample.ctorParameters;\n    /** @type {?} */\n    DialogElementsExample.prototype.dialog;\n}\nexport class DialogElementsExampleDialog {\n}\nDialogElementsExampleDialog.decorators = [\n    { type: Component, args: [{\n                selector: 'dialog-elements-example-dialog',\n                template: \"<h1 mat-dialog-title>Dialog with elements</h1><div mat-dialog-content>This dialog showcases the title, close, content and actions elements.</div><div mat-dialog-actions><button mat-button mat-dialog-close>Close</button></div>\",\n            },] },\n];\n/**\n * @nocollapse\n */\nDialogElementsExampleDialog.ctorParameters = () => [];\nfunction DialogElementsExampleDialog_tsickle_Closure_declarations() {\n    /** @type {?} */\n    DialogElementsExampleDialog.decorators;\n    /**\n     * @nocollapse\n     * @type {?}\n     */\n    DialogElementsExampleDialog.ctorParameters;\n}\n//# sourceMappingURL=dialog-elements-example.js.map","import { Component, Inject } from '@angular/core';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\n/**\n * \\@title Dialog Overview\n */\nexport class DialogOverviewExample {\n    /**\n     * @param {?} dialog\n     */\n    constructor(dialog) {\n        this.dialog = dialog;\n    }\n    /**\n     * @return {?}\n     */\n    openDialog() {\n        let /** @type {?} */ dialogRef = this.dialog.open(DialogOverviewExampleDialog, {\n            width: '250px',\n            data: { name: this.name, animal: this.animal }\n        });\n        dialogRef.afterClosed().subscribe(result => {\n            console.log('The dialog was closed');\n            this.animal = result;\n        });\n    }\n}\nDialogOverviewExample.decorators = [\n    { type: Component, args: [{\n                selector: 'dialog-overview-example',\n                template: \"<ol><li><mat-form-field><input matInput [(ngModel)]=\\\"name\\\" placeholder=\\\"What's your name?\\\"></mat-form-field></li><li><button mat-raised-button (click)=\\\"openDialog()\\\">Pick one</button></li><li *ngIf=\\\"animal\\\">You chose: <i>{{animal}}</i></li></ol>\"\n            },] },\n];\n/**\n * @nocollapse\n */\nDialogOverviewExample.ctorParameters = () => [\n    { type: MatDialog, },\n];\nfunction DialogOverviewExample_tsickle_Closure_declarations() {\n    /** @type {?} */\n    DialogOverviewExample.decorators;\n    /**\n     * @nocollapse\n     * @type {?}\n     */\n    DialogOverviewExample.ctorParameters;\n    /** @type {?} */\n    DialogOverviewExample.prototype.animal;\n    /** @type {?} */\n    DialogOverviewExample.prototype.name;\n    /** @type {?} */\n    DialogOverviewExample.prototype.dialog;\n}\nexport class DialogOverviewExampleDialog {\n    /**\n     * @param {?} dialogRef\n     * @param {?} data\n     */\n    constructor(dialogRef, data) {\n        this.dialogRef = dialogRef;\n        this.data = data;\n    }\n    /**\n     * @return {?}\n     */\n    onNoClick() {\n        this.dialogRef.close();\n    }\n}\nDialogOverviewExampleDialog.decorators = [\n    { type: Component, args: [{\n                selector: 'dialog-overview-example-dialog',\n                template: \"<h1 mat-dialog-title>Hi {{data.name}}</h1><div mat-dialog-content><p>What's your favorite animal?</p><mat-form-field><input matInput tabindex=\\\"1\\\" [(ngModel)]=\\\"data.animal\\\"></mat-form-field></div><div mat-dialog-actions><button mat-button [mat-dialog-close]=\\\"data.animal\\\" tabindex=\\\"2\\\">Ok</button> <button mat-button (click)=\\\"onNoClick()\\\" tabindex=\\\"-1\\\">No Thanks</button></div>\",\n            },] },\n];\n/**\n * @nocollapse\n */\nDialogOverviewExampleDialog.ctorParameters = () => [\n    { type: MatDialogRef, },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_DIALOG_DATA,] },] },\n];\nfunction DialogOverviewExampleDialog_tsickle_Closure_declarations() {\n    /** @type {?} */\n    DialogOverviewExampleDialog.decorators;\n    /**\n     * @nocollapse\n     * @type {?}\n     */\n    DialogOverviewExampleDialog.ctorParameters;\n    /** @type {?} */\n    DialogOverviewExampleDialog.prototype.dialogRef;\n    /** @type {?} */\n    DialogOverviewExampleDialog.prototype.data;\n}\n//# sourceMappingURL=dialog-overview-example.js.map","import { Component } from '@angular/core';\n/**\n * \\@title Basic expansion panel\n */\nexport class ExpansionOverviewExample {\n}\nExpansionOverviewExample.decorators = [\n    { type: Component, args: [{\n                selector: 'expansion-overview-example',\n                template: \"<mat-expansion-panel><mat-expansion-panel-header><mat-panel-title>Personal data</mat-panel-title><mat-panel-description>Type your name and age</mat-panel-description></mat-expansion-panel-header><mat-form-field><input matInput placeholder=\\\"First name\\\"></mat-form-field><mat-form-field><input matInput placeholder=\\\"Age\\\"></mat-form-field></mat-expansion-panel>\",\n            },] },\n];\n/**\n * @nocollapse\n */\nExpansionOverviewExample.ctorParameters = () => [];\nfunction ExpansionOverviewExample_tsickle_Closure_declarations() {\n    /** @type {?} */\n    ExpansionOverviewExample.decorators;\n    /**\n     * @nocollapse\n     * @type {?}\n     */\n    ExpansionOverviewExample.ctorParameters;\n}\n//# sourceMappingURL=expansion-overview-example.js.map","import { Component } from '@angular/core';\n/**\n * \\@title Expansion panel as accordion\n */\nexport class ExpansionStepsExample {\n    constructor() {\n        this.step = 0;\n    }\n    /**\n     * @param {?} index\n     * @return {?}\n     */\n    setStep(index) {\n        this.step = index;\n    }\n    /**\n     * @return {?}\n     */\n    nextStep() {\n        this.step++;\n    }\n    /**\n     * @return {?}\n     */\n    prevStep() {\n        this.step--;\n    }\n}\nExpansionStepsExample.decorators = [\n    { type: Component, args: [{\n                selector: 'expansion-steps-example',\n                template: \"<mat-accordion class=\\\"example-headers-align\\\"><mat-expansion-panel [expanded]=\\\"step === 0\\\" (opened)=\\\"setStep(0)\\\" hideToggle=\\\"true\\\"><mat-expansion-panel-header><mat-panel-title>Personal data</mat-panel-title><mat-panel-description>Type your name and age<mat-icon>account_circle</mat-icon></mat-panel-description></mat-expansion-panel-header><mat-form-field><input matInput placeholder=\\\"First name\\\"></mat-form-field><mat-form-field><input matInput type=\\\"number\\\" min=\\\"1\\\" placeholder=\\\"Age\\\"></mat-form-field><mat-action-row><button mat-button color=\\\"primary\\\" (click)=\\\"nextStep()\\\">Next</button></mat-action-row></mat-expansion-panel><mat-expansion-panel [expanded]=\\\"step === 1\\\" (opened)=\\\"setStep(1)\\\" hideToggle=\\\"true\\\"><mat-expansion-panel-header><mat-panel-title>Destination</mat-panel-title><mat-panel-description>Type the country name<mat-icon>map</mat-icon></mat-panel-description></mat-expansion-panel-header><mat-form-field><input matInput placeholder=\\\"Country\\\"></mat-form-field><mat-action-row><button mat-button color=\\\"warn\\\" (click)=\\\"prevStep()\\\">Previous</button> <button mat-button color=\\\"primary\\\" (click)=\\\"nextStep()\\\">Next</button></mat-action-row></mat-expansion-panel><mat-expansion-panel [expanded]=\\\"step === 2\\\" (opened)=\\\"setStep(2)\\\" hideToggle=\\\"true\\\"><mat-expansion-panel-header><mat-panel-title>Day of the trip</mat-panel-title><mat-panel-description>Inform the date you wish to travel<mat-icon>date_range</mat-icon></mat-panel-description></mat-expansion-panel-header><mat-form-field><input matInput placeholder=\\\"Date\\\" [matDatepicker]=\\\"picker\\\" (focus)=\\\"picker.open()\\\" readonly=\\\"readonly\\\"></mat-form-field><mat-datepicker #picker></mat-datepicker><mat-action-row><button mat-button color=\\\"warn\\\" (click)=\\\"prevStep()\\\">Previous</button> <button mat-button color=\\\"primary\\\" (click)=\\\"nextStep()\\\">End</button></mat-action-row></mat-expansion-panel></mat-accordion>\",\n                styles: [\".example-headers-align .mat-expansion-panel-header-title,  .example-headers-align .mat-expansion-panel-header-description { flex-basis: 0; } .example-headers-align .mat-expansion-panel-header-description { justify-content: space-between; align-items: center; } \"]\n            },] },\n];\n/**\n * @nocollapse\n */\nExpansionStepsExample.ctorParameters = () => [];\nfunction ExpansionStepsExample_tsickle_Closure_declarations() {\n    /** @type {?} */\n    ExpansionStepsExample.decorators;\n    /**\n     * @nocollapse\n     * @type {?}\n     */\n    ExpansionStepsExample.ctorParameters;\n    /** @type {?} */\n    ExpansionStepsExample.prototype.step;\n}\n//# sourceMappingURL=expansion-steps-example.js.map","import { Component } from '@angular/core';\n/**\n * \\@title Dynamic grid-list\n */\nexport class GridListDynamicExample {\n    constructor() {\n        this.tiles = [\n            { text: 'One', cols: 3, rows: 1, color: 'lightblue' },\n            { text: 'Two', cols: 1, rows: 2, color: 'lightgreen' },\n            { text: 'Three', cols: 1, rows: 1, color: 'lightpink' },\n            { text: 'Four', cols: 2, rows: 1, color: '#DDBDF1' },\n        ];\n    }\n}\nGridListDynamicExample.decorators = [\n    { type: Component, args: [{\n                selector: 'grid-list-dynamic-example',\n                template: \"<mat-grid-list cols=\\\"4\\\" rowHeight=\\\"100px\\\"><mat-grid-tile *ngFor=\\\"let tile of tiles\\\" [colspan]=\\\"tile.cols\\\" [rowspan]=\\\"tile.rows\\\" [style.background]=\\\"tile.color\\\">{{tile.text}}</mat-grid-tile></mat-grid-list>\",\n            },] },\n];\n/**\n * @nocollapse\n */\nGridListDynamicExample.ctorParameters = () => [];\nfunction GridListDynamicExample_tsickle_Closure_declarations() {\n    /** @type {?} */\n    GridListDynamicExample.decorators;\n    /**\n     * @nocollapse\n     * @type {?}\n     */\n    GridListDynamicExample.ctorParameters;\n    /** @type {?} */\n    GridListDynamicExample.prototype.tiles;\n}\n//# sourceMappingURL=grid-list-dynamic-example.js.map","import { Component } from '@angular/core';\n/**\n * \\@title Basic grid-list\n */\nexport class GridListOverviewExample {\n}\nGridListOverviewExample.decorators = [\n    { type: Component, args: [{\n                selector: 'grid-list-overview-example',\n                styles: [\"mat-grid-tile { background: lightblue; } \"],\n                template: \"<mat-grid-list cols=\\\"2\\\" rowHeight=\\\"2:1\\\"><mat-grid-tile>1</mat-grid-tile><mat-grid-tile>2</mat-grid-tile><mat-grid-tile>3</mat-grid-tile><mat-grid-tile>4</mat-grid-tile></mat-grid-list>\",\n            },] },\n];\n/**\n * @nocollapse\n */\nGridListOverviewExample.ctorParameters = () => [];\nfunction GridListOverviewExample_tsickle_Closure_declarations() {\n    /** @type {?} */\n    GridListOverviewExample.decorators;\n    /**\n     * @nocollapse\n     * @type {?}\n     */\n    GridListOverviewExample.ctorParameters;\n}\n//# sourceMappingURL=grid-list-overview-example.js.map","import { Component } from '@angular/core';\n/**\n * \\@title Basic icons\n */\nexport class IconOverviewExample {\n}\nIconOverviewExample.decorators = [\n    { type: Component, args: [{\n                selector: 'icon-overview-example',\n                template: \"<mat-icon>home</mat-icon>\",\n            },] },\n];\n/**\n * @nocollapse\n */\nIconOverviewExample.ctorParameters = () => [];\nfunction IconOverviewExample_tsickle_Closure_declarations() {\n    /** @type {?} */\n    IconOverviewExample.decorators;\n    /**\n     * @nocollapse\n     * @type {?}\n     */\n    IconOverviewExample.ctorParameters;\n}\n//# sourceMappingURL=icon-overview-example.js.map","import { Component } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { MatIconRegistry } from '@angular/material';\n/**\n * \\@title SVG icons\n */\nexport class IconSvgExample {\n    /**\n     * @param {?} iconRegistry\n     * @param {?} sanitizer\n     */\n    constructor(iconRegistry, sanitizer) {\n        iconRegistry.addSvgIcon('thumbs-up', sanitizer.bypassSecurityTrustResourceUrl('assets/img/examples/thumbup-icon.svg'));\n    }\n}\nIconSvgExample.decorators = [\n    { type: Component, args: [{\n                selector: 'icon-svg-example',\n                template: \"<mat-icon svgIcon=\\\"thumbs-up\\\"></mat-icon>\",\n            },] },\n];\n/**\n * @nocollapse\n */\nIconSvgExample.ctorParameters = () => [\n    { type: MatIconRegistry, },\n    { type: DomSanitizer, },\n];\nfunction IconSvgExample_tsickle_Closure_declarations() {\n    /** @type {?} */\n    IconSvgExample.decorators;\n    /**\n     * @nocollapse\n     * @type {?}\n     */\n    IconSvgExample.ctorParameters;\n}\n//# sourceMappingURL=icon-svg-example.js.map","import { Component } from '@angular/core';\n/**\n * \\@title Input Clearable\n */\nexport class InputClearableExample {\n    constructor() {\n        this.value = 'Clear me';\n    }\n}\nInputClearableExample.decorators = [\n    { type: Component, args: [{\n                selector: 'input-clearable-example',\n                template: \"<mat-form-field class=\\\"example-form-field\\\"><input matInput type=\\\"text\\\" placeholder=\\\"Clearable input\\\" [(ngModel)]=\\\"value\\\"> <button mat-button *ngIf=\\\"value\\\" matSuffix mat-icon-button aria-label=\\\"Clear\\\" (click)=\\\"value=''\\\"><mat-icon>close</mat-icon></button></mat-form-field>\",\n                styles: [\".example-form-field { width: 200px; } \"],\n            },] },\n];\n/**\n * @nocollapse\n */\nInputClearableExample.ctorParameters = () => [];\nfunction InputClearableExample_tsickle_Closure_declarations() {\n    /** @type {?} */\n    InputClearableExample.decorators;\n    /**\n     * @nocollapse\n     * @type {?}\n     */\n    InputClearableExample.ctorParameters;\n    /** @type {?} */\n    InputClearableExample.prototype.value;\n}\n//# sourceMappingURL=input-clearable-example.js.map","import { Component } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\nconst /** @type {?} */ EMAIL_REGEX = /^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\n/**\n * \\@title Input Errors\n */\nexport class InputErrorsExample {\n    constructor() {\n        this.emailFormControl = new FormControl('', [\n            Validators.required,\n            Validators.pattern(EMAIL_REGEX)\n        ]);\n    }\n}\nInputErrorsExample.decorators = [\n    { type: Component, args: [{\n                selector: 'input-errors-example',\n                template: \"<form class=\\\"example-form\\\"><mat-form-field class=\\\"example-full-width\\\"><input matInput placeholder=\\\"Email\\\" [formControl]=\\\"emailFormControl\\\"><mat-error *ngIf=\\\"emailFormControl.hasError('pattern')\\\">Please enter a valid email address</mat-error><mat-error *ngIf=\\\"emailFormControl.hasError('required')\\\">Email is <strong>required</strong></mat-error></mat-form-field></form>\",\n                styles: [\".example-form { min-width: 150px; max-width: 500px; width: 100%; } .example-full-width { width: 100%; } \"],\n            },] },\n];\n/**\n * @nocollapse\n */\nInputErrorsExample.ctorParameters = () => [];\nfunction InputErrorsExample_tsickle_Closure_declarations() {\n    /** @type {?} */\n    InputErrorsExample.decorators;\n    /**\n     * @nocollapse\n     * @type {?}\n     */\n    InputErrorsExample.ctorParameters;\n    /** @type {?} */\n    InputErrorsExample.prototype.emailFormControl;\n}\n//# sourceMappingURL=input-errors-example.js.map","import { Component } from '@angular/core';\n/**\n * \\@title Inputs in a form\n */\nexport class InputFormExample {\n}\nInputFormExample.decorators = [\n    { type: Component, args: [{\n                selector: 'input-form-example',\n                template: \"<form class=\\\"example-form\\\"><mat-form-field class=\\\"example-full-width\\\"><input matInput placeholder=\\\"Company (disabled)\\\" disabled=\\\"disabled\\\" value=\\\"Google\\\"></mat-form-field><table class=\\\"example-full-width\\\" cellspacing=\\\"0\\\"><tr><td><mat-form-field class=\\\"example-full-width\\\"><input matInput placeholder=\\\"First name\\\"></mat-form-field></td><td><mat-form-field class=\\\"example-full-width\\\"><input matInput placeholder=\\\"Long Last Name That Will Be Truncated\\\"></mat-form-field></td></tr></table><p><mat-form-field class=\\\"example-full-width\\\"><textarea matInput placeholder=\\\"Address\\\">1600 Amphitheatre Pkwy</textarea></mat-form-field><mat-form-field class=\\\"example-full-width\\\"><textarea matInput placeholder=\\\"Address 2\\\"></textarea></mat-form-field></p><table class=\\\"example-full-width\\\" cellspacing=\\\"0\\\"><tr><td><mat-form-field class=\\\"example-full-width\\\"><input matInput placeholder=\\\"City\\\"></mat-form-field></td><td><mat-form-field class=\\\"example-full-width\\\"><input matInput placeholder=\\\"State\\\"></mat-form-field></td><td><mat-form-field class=\\\"example-full-width\\\"><input matInput #postalCode maxlength=\\\"5\\\" placeholder=\\\"Postal Code\\\" value=\\\"94043\\\"><mat-hint align=\\\"end\\\">{{postalCode.value.length}} / 5</mat-hint></mat-form-field></td></tr></table></form>\",\n                styles: [\".example-form { min-width: 150px; max-width: 500px; width: 100%; } .example-full-width { width: 100%; } \"],\n            },] },\n];\n/**\n * @nocollapse\n */\nInputFormExample.ctorParameters = () => [];\nfunction InputFormExample_tsickle_Closure_declarations() {\n    /** @type {?} */\n    InputFormExample.decorators;\n    /**\n     * @nocollapse\n     * @type {?}\n     */\n    InputFormExample.ctorParameters;\n}\n//# sourceMappingURL=input-form-example.js.map","import { Component } from '@angular/core';\n/**\n * \\@title Input hints\n */\nexport class InputHintExample {\n}\nInputHintExample.decorators = [\n    { type: Component, args: [{\n                selector: 'input-hint-example',\n                template: \"<form class=\\\"example-form\\\"><mat-form-field class=\\\"example-full-width\\\"><input matInput #message maxlength=\\\"256\\\" placeholder=\\\"Message\\\"><mat-hint align=\\\"start\\\"><strong>Don't disclose personal info</strong></mat-hint><mat-hint align=\\\"end\\\">{{message.value.length}} / 256</mat-hint></mat-form-field></form>\",\n                styles: [\".example-form { min-width: 150px; max-width: 500px; width: 100%; } .example-full-width { width: 100%; } \"],\n            },] },\n];\n/**\n * @nocollapse\n */\nInputHintExample.ctorParameters = () => [];\nfunction InputHintExample_tsickle_Closure_declarations() {\n    /** @type {?} */\n    InputHintExample.decorators;\n    /**\n     * @nocollapse\n     * @type {?}\n     */\n    InputHintExample.ctorParameters;\n}\n//# sourceMappingURL=input-hint-example.js.map","import { Component } from '@angular/core';\n/**\n * \\@title Basic Inputs\n */\nexport class InputOverviewExample {\n}\nInputOverviewExample.decorators = [\n    { type: Component, args: [{\n                selector: 'input-overview-example',\n                styles: [\".example-form { min-width: 150px; max-width: 500px; width: 100%; } .example-full-width { width: 100%; } \"],\n                template: \"<form class=\\\"example-form\\\"><mat-form-field class=\\\"example-full-width\\\"><input matInput placeholder=\\\"Favorite food\\\" value=\\\"Sushi\\\"></mat-form-field></form>\",\n            },] },\n];\n/**\n * @nocollapse\n */\nInputOverviewExample.ctorParameters = () => [];\nfunction InputOverviewExample_tsickle_Closure_declarations() {\n    /** @type {?} */\n    InputOverviewExample.decorators;\n    /**\n     * @nocollapse\n     * @type {?}\n     */\n    InputOverviewExample.ctorParameters;\n}\n//# sourceMappingURL=input-overview-example.js.map","import { Component } from '@angular/core';\n/**\n * \\@title Input Prefixes and Suffixes\n */\nexport class InputPrefixSuffixExample {\n}\nInputPrefixSuffixExample.decorators = [\n    { type: Component, args: [{\n                selector: 'input-prefix-suffix-example',\n                template: \"<form class=\\\"example-form\\\"><mat-form-field class=\\\"example-full-width\\\"><span matPrefix>+1 &nbsp;</span> <input type=\\\"tel\\\" matInput placeholder=\\\"Telephone\\\"><mat-icon matSuffix>mode_edit</mat-icon></mat-form-field></form>\",\n                styles: [\".example-form { min-width: 150px; max-width: 500px; width: 100%; } .example-full-width { width: 100%; } \"],\n            },] },\n];\n/**\n * @nocollapse\n */\nInputPrefixSuffixExample.ctorParameters = () => [];\nfunction InputPrefixSuffixExample_tsickle_Closure_declarations() {\n    /** @type {?} */\n    InputPrefixSuffixExample.decorators;\n    /**\n     * @nocollapse\n     * @type {?}\n     */\n    InputPrefixSuffixExample.ctorParameters;\n}\n//# sourceMappingURL=input-prefix-suffix-example.js.map","import { Component } from '@angular/core';\n/**\n * \\@title Basic list\n */\nexport class ListOverviewExample {\n}\nListOverviewExample.decorators = [\n    { type: Component, args: [{\n                selector: 'list-overview-example',\n                template: \"<mat-list><mat-list-item>Item 1</mat-list-item><mat-list-item>Item 2</mat-list-item><mat-list-item>Item 3</mat-list-item></mat-list>\",\n            },] },\n];\n/**\n * @nocollapse\n */\nListOverviewExample.ctorParameters = () => [];\nfunction ListOverviewExample_tsickle_Closure_declarations() {\n    /** @type {?} */\n    ListOverviewExample.decorators;\n    /**\n     * @nocollapse\n     * @type {?}\n     */\n    ListOverviewExample.ctorParameters;\n}\n//# sourceMappingURL=list-overview-example.js.map","import { Component } from '@angular/core';\n/**\n * \\@title List with sections\n */\nexport class ListSectionsExample {\n    constructor() {\n        this.folders = [\n            {\n                name: 'Photos',\n                updated: new Date('1/1/16'),\n            },\n            {\n                name: 'Recipes',\n                updated: new Date('1/17/16'),\n            },\n            {\n                name: 'Work',\n                updated: new Date('1/28/16'),\n            }\n        ];\n        this.notes = [\n            {\n                name: 'Vacation Itinerary',\n                updated: new Date('2/20/16'),\n            },\n            {\n                name: 'Kitchen Remodel',\n                updated: new Date('1/18/16'),\n            }\n        ];\n    }\n}\nListSectionsExample.decorators = [\n    { type: Component, args: [{\n                selector: 'list-sections-example',\n                styles: [\".mat-list-icon { color: rgba(0, 0, 0, 0.54); } \"],\n                template: \"<mat-list><h3 mat-subheader>Folders</h3><mat-list-item *ngFor=\\\"let folder of folders\\\"><mat-icon mat-list-icon>folder</mat-icon><h4 mat-line>{{folder.name}}</h4><p mat-line>{{folder.updated | date}}</p></mat-list-item><mat-divider></mat-divider><h3 mat-subheader>Notes</h3><mat-list-item *ngFor=\\\"let note of notes\\\"><mat-icon mat-list-icon>note</mat-icon><h4 mat-line>{{note.name}}</h4><p mat-line>{{note.updated | date}}</p></mat-list-item></mat-list>\",\n            },] },\n];\n/**\n * @nocollapse\n */\nListSectionsExample.ctorParameters = () => [];\nfunction ListSectionsExample_tsickle_Closure_declarations() {\n    /** @type {?} */\n    ListSectionsExample.decorators;\n    /**\n     * @nocollapse\n     * @type {?}\n     */\n    ListSectionsExample.ctorParameters;\n    /** @type {?} */\n    ListSectionsExample.prototype.folders;\n    /** @type {?} */\n    ListSectionsExample.prototype.notes;\n}\n//# sourceMappingURL=list-sections-example.js.map","import { Component } from '@angular/core';\n/**\n * \\@title List with selection\n */\nexport class ListSelectionExample {\n    constructor() {\n        this.typesOfShoes = ['Boots', 'Clogs', 'Loafers', 'Moccasins', 'Sneakers'];\n    }\n}\nListSelectionExample.decorators = [\n    { type: Component, args: [{\n                selector: 'list-selection-example',\n                styles: [\"/** No styles for this example. */ \"],\n                template: \"<mat-selection-list #shoes><mat-list-option *ngFor=\\\"let shoe of typesOfShoes\\\">{{shoe}}</mat-list-option></mat-selection-list><p>Options selected: {{shoes.selectedOptions.selected.length}}</p>\",\n            },] },\n];\n/**\n * @nocollapse\n */\nListSelectionExample.ctorParameters = () => [];\nfunction ListSelectionExample_tsickle_Closure_declarations() {\n    /** @type {?} */\n    ListSelectionExample.decorators;\n    /**\n     * @nocollapse\n     * @type {?}\n     */\n    ListSelectionExample.ctorParameters;\n    /** @type {?} */\n    ListSelectionExample.prototype.typesOfShoes;\n}\n//# sourceMappingURL=list-selection-example.js.map","import { Component } from '@angular/core';\n/**\n * \\@title Menu with icons\n */\nexport class MenuIconsExample {\n}\nMenuIconsExample.decorators = [\n    { type: Component, args: [{\n                selector: 'menu-icons-example',\n                template: \"<button mat-icon-button [matMenuTriggerFor]=\\\"menu\\\"><mat-icon>more_vert</mat-icon></button><mat-menu #menu=\\\"matMenu\\\"><button mat-menu-item><mat-icon>dialpad</mat-icon><span>Redial</span></button> <button mat-menu-item disabled=\\\"disabled\\\"><mat-icon>voicemail</mat-icon><span>Check voicemail</span></button> <button mat-menu-item><mat-icon>notifications_off</mat-icon><span>Disable alerts</span></button></mat-menu>\",\n                styles: [\"/** No CSS for this example */ \"],\n            },] },\n];\n/**\n * @nocollapse\n */\nMenuIconsExample.ctorParameters = () => [];\nfunction MenuIconsExample_tsickle_Closure_declarations() {\n    /** @type {?} */\n    MenuIconsExample.decorators;\n    /**\n     * @nocollapse\n     * @type {?}\n     */\n    MenuIconsExample.ctorParameters;\n}\n//# sourceMappingURL=menu-icons-example.js.map","import { Component } from '@angular/core';\n/**\n * \\@title Basic menu\n */\nexport class MenuOverviewExample {\n}\nMenuOverviewExample.decorators = [\n    { type: Component, args: [{\n                selector: 'menu-overview-example',\n                template: \"<button mat-button [matMenuTriggerFor]=\\\"menu\\\">Menu</button><mat-menu #menu=\\\"matMenu\\\"><button mat-menu-item>Item 1</button> <button mat-menu-item>Item 2</button></mat-menu>\",\n                styles: [\"/** No CSS for this example */ \"],\n            },] },\n];\n/**\n * @nocollapse\n */\nMenuOverviewExample.ctorParameters = () => [];\nfunction MenuOverviewExample_tsickle_Closure_declarations() {\n    /** @type {?} */\n    MenuOverviewExample.decorators;\n    /**\n     * @nocollapse\n     * @type {?}\n     */\n    MenuOverviewExample.ctorParameters;\n}\n//# sourceMappingURL=menu-overview-example.js.map","import { Component } from '@angular/core';\n/**\n * \\@title Nested menu\n */\nexport class NestedMenuExample {\n}\nNestedMenuExample.decorators = [\n    { type: Component, args: [{\n                selector: 'nested-menu-example',\n                template: \"<button mat-button [matMenuTriggerFor]=\\\"animals\\\">Animal index</button><mat-menu #animals=\\\"matMenu\\\"><button mat-menu-item [matMenuTriggerFor]=\\\"vertebrates\\\">Vertebrates</button> <button mat-menu-item [matMenuTriggerFor]=\\\"invertebrates\\\">Invertebrates</button></mat-menu><mat-menu #vertebrates=\\\"matMenu\\\"><button mat-menu-item [matMenuTriggerFor]=\\\"fish\\\">Fishes</button> <button mat-menu-item [matMenuTriggerFor]=\\\"amphibians\\\">Amphibians</button> <button mat-menu-item [matMenuTriggerFor]=\\\"reptiles\\\">Reptiles</button> <button mat-menu-item>Birds</button> <button mat-menu-item>Mammals</button></mat-menu><mat-menu #invertebrates=\\\"matMenu\\\"><button mat-menu-item>Insects</button> <button mat-menu-item>Molluscs</button> <button mat-menu-item>Crustaceans</button> <button mat-menu-item>Corals</button> <button mat-menu-item>Arachnids</button> <button mat-menu-item>Velvet worms</button> <button mat-menu-item>Horseshoe crabs</button></mat-menu><mat-menu #fish=\\\"matMenu\\\"><button mat-menu-item>Baikal oilfish</button> <button mat-menu-item>Bala shark</button> <button mat-menu-item>Ballan wrasse</button> <button mat-menu-item>Bamboo shark</button> <button mat-menu-item>Banded killifish</button></mat-menu><mat-menu #amphibians=\\\"matMenu\\\"><button mat-menu-item>Sonoran desert toad</button> <button mat-menu-item>Western toad</button> <button mat-menu-item>Arroyo toad</button> <button mat-menu-item>Yosemite toad</button></mat-menu><mat-menu #reptiles=\\\"matMenu\\\"><button mat-menu-item>Banded Day Gecko</button> <button mat-menu-item>Banded Gila Monster</button> <button mat-menu-item>Black Tree Monitor</button> <button mat-menu-item>Blue Spiny Lizard</button> <button mat-menu-item disabled=\\\"disabled\\\">Velociraptor</button></mat-menu>\",\n                styles: [\"/** No CSS for this example */ \"]\n            },] },\n];\n/**\n * @nocollapse\n */\nNestedMenuExample.ctorParameters = () => [];\nfunction NestedMenuExample_tsickle_Closure_declarations() {\n    /** @type {?} */\n    NestedMenuExample.decorators;\n    /**\n     * @nocollapse\n     * @type {?}\n     */\n    NestedMenuExample.ctorParameters;\n}\n//# sourceMappingURL=nested-menu-example.js.map","import { Component } from '@angular/core';\n/**\n * \\@title Configurable paginator\n */\nexport class PaginatorConfigurableExample {\n    constructor() {\n        // MatPaginator Inputs\n        this.length = 100;\n        this.pageSize = 10;\n        this.pageSizeOptions = [5, 10, 25, 100];\n    }\n    /**\n     * @param {?} setPageSizeOptionsInput\n     * @return {?}\n     */\n    setPageSizeOptions(setPageSizeOptionsInput) {\n        this.pageSizeOptions = setPageSizeOptionsInput.split(',').map(str => +str);\n    }\n}\nPaginatorConfigurableExample.decorators = [\n    { type: Component, args: [{\n                selector: 'paginator-configurable-example',\n                template: \"<mat-form-field>List length: <input matInput [(ngModel)]=\\\"length\\\"></mat-form-field><mat-form-field>Page size: <input matInput [(ngModel)]=\\\"pageSize\\\"></mat-form-field><mat-form-field>Page size options: <input matInput [ngModel]=\\\"pageSizeOptions\\\" (ngModelChange)=\\\"setPageSizeOptions($event)\\\"></mat-form-field><mat-paginator [length]=\\\"length\\\" [pageSize]=\\\"pageSize\\\" [pageSizeOptions]=\\\"pageSizeOptions\\\" (page)=\\\"pageEvent = $event\\\"></mat-paginator><div *ngIf=\\\"pageEvent\\\"><h5>Page Change Event Properties</h5><div>List length: {{pageEvent.length}}</div><div>Page size: {{pageEvent.pageSize}}</div><div>Page index: {{pageEvent.pageIndex}}</div></div>\",\n            },] },\n];\n/**\n * @nocollapse\n */\nPaginatorConfigurableExample.ctorParameters = () => [];\nfunction PaginatorConfigurableExample_tsickle_Closure_declarations() {\n    /** @type {?} */\n    PaginatorConfigurableExample.decorators;\n    /**\n     * @nocollapse\n     * @type {?}\n     */\n    PaginatorConfigurableExample.ctorParameters;\n    /** @type {?} */\n    PaginatorConfigurableExample.prototype.length;\n    /** @type {?} */\n    PaginatorConfigurableExample.prototype.pageSize;\n    /** @type {?} */\n    PaginatorConfigurableExample.prototype.pageSizeOptions;\n    /** @type {?} */\n    PaginatorConfigurableExample.prototype.pageEvent;\n}\n//# sourceMappingURL=paginator-configurable-example.js.map","import { Component } from '@angular/core';\n/**\n * \\@title Paginator\n */\nexport class PaginatorOverviewExample {\n}\nPaginatorOverviewExample.decorators = [\n    { type: Component, args: [{\n                selector: 'paginator-overview-example',\n                template: \"<mat-paginator [length]=\\\"100\\\" [pageSize]=\\\"10\\\" [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\"></mat-paginator>\",\n            },] },\n];\n/**\n * @nocollapse\n */\nPaginatorOverviewExample.ctorParameters = () => [];\nfunction PaginatorOverviewExample_tsickle_Closure_declarations() {\n    /** @type {?} */\n    PaginatorOverviewExample.decorators;\n    /**\n     * @nocollapse\n     * @type {?}\n     */\n    PaginatorOverviewExample.ctorParameters;\n}\n//# sourceMappingURL=paginator-overview-example.js.map","import { Component } from '@angular/core';\n/**\n * \\@title Configurable progress-bar\n */\nexport class ProgressBarConfigurableExample {\n    constructor() {\n        this.color = 'primary';\n        this.mode = 'determinate';\n        this.value = 50;\n        this.bufferValue = 75;\n    }\n}\nProgressBarConfigurableExample.decorators = [\n    { type: Component, args: [{\n                selector: 'progress-bar-configurable-example',\n                template: \"<mat-card><mat-card-content><h2 class=\\\"example-h2\\\">Progress bar configuration</h2><section class=\\\"example-section\\\"><label class=\\\"example-margin\\\">Color:</label><mat-radio-group [(ngModel)]=\\\"color\\\"><mat-radio-button class=\\\"example-margin\\\" value=\\\"primary\\\">Primary</mat-radio-button><mat-radio-button class=\\\"example-margin\\\" value=\\\"accent\\\">Accent</mat-radio-button><mat-radio-button class=\\\"example-margin\\\" value=\\\"warn\\\">Warn</mat-radio-button></mat-radio-group></section><section class=\\\"example-section\\\"><label class=\\\"example-margin\\\">Mode:</label><mat-radio-group [(ngModel)]=\\\"mode\\\"><mat-radio-button class=\\\"example-margin\\\" value=\\\"determinate\\\">Determinate</mat-radio-button><mat-radio-button class=\\\"example-margin\\\" value=\\\"indeterminate\\\">Indeterminate</mat-radio-button><mat-radio-button class=\\\"example-margin\\\" value=\\\"buffer\\\">Buffer</mat-radio-button><mat-radio-button class=\\\"example-margin\\\" value=\\\"query\\\">Query</mat-radio-button></mat-radio-group></section><section class=\\\"example-section\\\" *ngIf=\\\"mode == 'determinate' || mode == 'buffer'\\\"><label class=\\\"example-margin\\\">Progress:</label><mat-slider class=\\\"example-margin\\\" [(ngModel)]=\\\"value\\\"></mat-slider></section><section class=\\\"example-section\\\" *ngIf=\\\"mode == 'buffer'\\\"><label class=\\\"example-margin\\\">Buffer:</label><mat-slider class=\\\"example-margin\\\" [(ngModel)]=\\\"bufferValue\\\"></mat-slider></section></mat-card-content></mat-card><mat-card><mat-card-content><h2 class=\\\"example-h2\\\">Result</h2><section class=\\\"example-section\\\"><mat-progress-bar class=\\\"example-margin\\\" [color]=\\\"color\\\" [mode]=\\\"mode\\\" [value]=\\\"value\\\" [bufferValue]=\\\"bufferValue\\\"></mat-progress-bar></section></mat-card-content></mat-card>\",\n                styles: [\".example-h2 { margin: 10px; } .example-section { display: flex; align-content: center; align-items: center; height: 60px; } .example-margin { margin: 0 10px; } \"],\n            },] },\n];\n/**\n * @nocollapse\n */\nProgressBarConfigurableExample.ctorParameters = () => [];\nfunction ProgressBarConfigurableExample_tsickle_Closure_declarations() {\n    /** @type {?} */\n    ProgressBarConfigurableExample.decorators;\n    /**\n     * @nocollapse\n     * @type {?}\n     */\n    ProgressBarConfigurableExample.ctorParameters;\n    /** @type {?} */\n    ProgressBarConfigurableExample.prototype.color;\n    /** @type {?} */\n    ProgressBarConfigurableExample.prototype.mode;\n    /** @type {?} */\n    ProgressBarConfigurableExample.prototype.value;\n    /** @type {?} */\n    ProgressBarConfigurableExample.prototype.bufferValue;\n}\n//# sourceMappingURL=progress-bar-configurable-example.js.map","import { Component } from '@angular/core';\n/**\n * \\@title Basic progress-bar\n */\nexport class ProgressBarOverviewExample {\n}\nProgressBarOverviewExample.decorators = [\n    { type: Component, args: [{\n                selector: 'progress-bar-overview-example',\n                template: \"<mat-progress-bar mode=\\\"indeterminate\\\"></mat-progress-bar>\",\n            },] },\n];\n/**\n * @nocollapse\n */\nProgressBarOverviewExample.ctorParameters = () => [];\nfunction ProgressBarOverviewExample_tsickle_Closure_declarations() {\n    /** @type {?} */\n    ProgressBarOverviewExample.decorators;\n    /**\n     * @nocollapse\n     * @type {?}\n     */\n    ProgressBarOverviewExample.ctorParameters;\n}\n//# sourceMappingURL=progress-bar-overview-example.js.map","import { Component } from '@angular/core';\n/**\n * \\@title Configurable progress spinner\n */\nexport class ProgressSpinnerConfigurableExample {\n    constructor() {\n        this.color = 'primary';\n        this.mode = 'determinate';\n        this.value = 50;\n    }\n}\nProgressSpinnerConfigurableExample.decorators = [\n    { type: Component, args: [{\n                selector: 'progress-spinner-configurable-example',\n                template: \"<mat-card><mat-card-content><h2 class=\\\"example-h2\\\">Progress spinner configuration</h2><section class=\\\"example-section\\\"><label class=\\\"example-margin\\\">Color:</label><mat-radio-group [(ngModel)]=\\\"color\\\"><mat-radio-button class=\\\"example-margin\\\" value=\\\"primary\\\">Primary</mat-radio-button><mat-radio-button class=\\\"example-margin\\\" value=\\\"accent\\\">Accent</mat-radio-button><mat-radio-button class=\\\"example-margin\\\" value=\\\"warn\\\">Warn</mat-radio-button></mat-radio-group></section><section class=\\\"example-section\\\"><label class=\\\"example-margin\\\">Mode:</label><mat-radio-group [(ngModel)]=\\\"mode\\\"><mat-radio-button class=\\\"example-margin\\\" value=\\\"determinate\\\">Determinate</mat-radio-button><mat-radio-button class=\\\"example-margin\\\" value=\\\"indeterminate\\\">Indeterminate</mat-radio-button></mat-radio-group></section><section class=\\\"example-section\\\" *ngIf=\\\"mode == 'determinate'\\\"><label class=\\\"example-margin\\\">Progress:</label><mat-slider class=\\\"example-margin\\\" [(ngModel)]=\\\"value\\\"></mat-slider></section></mat-card-content></mat-card><mat-card><mat-card-content><h2 class=\\\"example-h2\\\">Result</h2><mat-progress-spinner class=\\\"example-margin\\\" [color]=\\\"color\\\" [mode]=\\\"mode\\\" [value]=\\\"value\\\"></mat-progress-spinner></mat-card-content></mat-card>\",\n                styles: [\".example-h2 { margin: 10px; } .example-section { display: flex; align-content: center; align-items: center; height: 60px; } .example-margin { margin: 0 10px; } \"],\n            },] },\n];\n/**\n * @nocollapse\n */\nProgressSpinnerConfigurableExample.ctorParameters = () => [];\nfunction ProgressSpinnerConfigurableExample_tsickle_Closure_declarations() {\n    /** @type {?} */\n    ProgressSpinnerConfigurableExample.decorators;\n    /**\n     * @nocollapse\n     * @type {?}\n     */\n    ProgressSpinnerConfigurableExample.ctorParameters;\n    /** @type {?} */\n    ProgressSpinnerConfigurableExample.prototype.color;\n    /** @type {?} */\n    ProgressSpinnerConfigurableExample.prototype.mode;\n    /** @type {?} */\n    ProgressSpinnerConfigurableExample.prototype.value;\n}\n//# sourceMappingURL=progress-spinner-configurable-example.js.map","import { Component } from '@angular/core';\n/**\n * \\@title Basic progress-spinner\n */\nexport class ProgressSpinnerOverviewExample {\n}\nProgressSpinnerOverviewExample.decorators = [\n    { type: Component, args: [{\n                selector: 'progress-spinner-overview-example',\n                template: \"<mat-spinner></mat-spinner>\",\n            },] },\n];\n/**\n * @nocollapse\n */\nProgressSpinnerOverviewExample.ctorParameters = () => [];\nfunction ProgressSpinnerOverviewExample_tsickle_Closure_declarations() {\n    /** @type {?} */\n    ProgressSpinnerOverviewExample.decorators;\n    /**\n     * @nocollapse\n     * @type {?}\n     */\n    ProgressSpinnerOverviewExample.ctorParameters;\n}\n//# sourceMappingURL=progress-spinner-overview-example.js.map","import { Component } from '@angular/core';\n/**\n * \\@title Radios with ngModel\n */\nexport class RadioNgModelExample {\n    constructor() {\n        this.seasons = [\n            'Winter',\n            'Spring',\n            'Summer',\n            'Autumn',\n        ];\n    }\n}\nRadioNgModelExample.decorators = [\n    { type: Component, args: [{\n                selector: 'radio-ng-model-example',\n                template: \"<mat-radio-group class=\\\"example-radio-group\\\" [(ngModel)]=\\\"favoriteSeason\\\"><mat-radio-button class=\\\"example-radio-button\\\" *ngFor=\\\"let season of seasons\\\" [value]=\\\"season\\\">{{season}}</mat-radio-button></mat-radio-group><div class=\\\"example-selected-value\\\">Your favorite season is: {{favoriteSeason}}</div>\",\n                styles: [\".example-radio-group { display: inline-flex; flex-direction: column; } .example-radio-button { margin: 5px; } .example-selected-value { margin: 15px 0; } \"],\n            },] },\n];\n/**\n * @nocollapse\n */\nRadioNgModelExample.ctorParameters = () => [];\nfunction RadioNgModelExample_tsickle_Closure_declarations() {\n    /** @type {?} */\n    RadioNgModelExample.decorators;\n    /**\n     * @nocollapse\n     * @type {?}\n     */\n    RadioNgModelExample.ctorParameters;\n    /** @type {?} */\n    RadioNgModelExample.prototype.favoriteSeason;\n    /** @type {?} */\n    RadioNgModelExample.prototype.seasons;\n}\n//# sourceMappingURL=radio-ng-model-example.js.map","import { Component } from '@angular/core';\n/**\n * \\@title Basic radios\n */\nexport class RadioOverviewExample {\n}\nRadioOverviewExample.decorators = [\n    { type: Component, args: [{\n                selector: 'radio-overview-example',\n                template: \"<mat-radio-group><mat-radio-button value=\\\"1\\\">Option 1</mat-radio-button><mat-radio-button value=\\\"2\\\">Option 2</mat-radio-button></mat-radio-group>\",\n            },] },\n];\n/**\n * @nocollapse\n */\nRadioOverviewExample.ctorParameters = () => [];\nfunction RadioOverviewExample_tsickle_Closure_declarations() {\n    /** @type {?} */\n    RadioOverviewExample.decorators;\n    /**\n     * @nocollapse\n     * @type {?}\n     */\n    RadioOverviewExample.ctorParameters;\n}\n//# sourceMappingURL=radio-overview-example.js.map","import { Component } from '@angular/core';\n/**\n * \\@title Select in a form\n */\nexport class SelectFormExample {\n    constructor() {\n        this.foods = [\n            { value: 'steak-0', viewValue: 'Steak' },\n            { value: 'pizza-1', viewValue: 'Pizza' },\n            { value: 'tacos-2', viewValue: 'Tacos' }\n        ];\n    }\n}\nSelectFormExample.decorators = [\n    { type: Component, args: [{\n                selector: 'select-form-example',\n                template: \"<form><mat-form-field><mat-select placeholder=\\\"Favorite food\\\" [(ngModel)]=\\\"selectedValue\\\" name=\\\"food\\\"><mat-option *ngFor=\\\"let food of foods\\\" [value]=\\\"food.value\\\">{{food.viewValue}}</mat-option></mat-select></mat-form-field><p>Selected value: {{selectedValue}}</p></form>\",\n            },] },\n];\n/**\n * @nocollapse\n */\nSelectFormExample.ctorParameters = () => [];\nfunction SelectFormExample_tsickle_Closure_declarations() {\n    /** @type {?} */\n    SelectFormExample.decorators;\n    /**\n     * @nocollapse\n     * @type {?}\n     */\n    SelectFormExample.ctorParameters;\n    /** @type {?} */\n    SelectFormExample.prototype.selectedValue;\n    /** @type {?} */\n    SelectFormExample.prototype.foods;\n}\n//# sourceMappingURL=select-form-example.js.map","import { Component } from '@angular/core';\n/**\n * \\@title Basic select\n */\nexport class SelectOverviewExample {\n    constructor() {\n        this.foods = [\n            { value: 'steak-0', viewValue: 'Steak' },\n            { value: 'pizza-1', viewValue: 'Pizza' },\n            { value: 'tacos-2', viewValue: 'Tacos' }\n        ];\n    }\n}\nSelectOverviewExample.decorators = [\n    { type: Component, args: [{\n                selector: 'select-overview-example',\n                template: \"<mat-form-field><mat-select placeholder=\\\"Favorite food\\\"><mat-option *ngFor=\\\"let food of foods\\\" [value]=\\\"food.value\\\">{{ food.viewValue }}</mat-option></mat-select></mat-form-field>\",\n            },] },\n];\n/**\n * @nocollapse\n */\nSelectOverviewExample.ctorParameters = () => [];\nfunction SelectOverviewExample_tsickle_Closure_declarations() {\n    /** @type {?} */\n    SelectOverviewExample.decorators;\n    /**\n     * @nocollapse\n     * @type {?}\n     */\n    SelectOverviewExample.ctorParameters;\n    /** @type {?} */\n    SelectOverviewExample.prototype.foods;\n}\n//# sourceMappingURL=select-overview-example.js.map","import { Component, ViewEncapsulation } from '@angular/core';\n/**\n * \\@title Sidenav with a FAB\n */\nexport class SidenavFabExample {\n}\nSidenavFabExample.decorators = [\n    { type: Component, args: [{\n                selector: 'sidenav-fab-example',\n                template: \"<mat-sidenav-container class=\\\"example-sidenav-fab-container\\\"><mat-sidenav #sidenav mode=\\\"side\\\" opened=\\\"true\\\"><button mat-mini-fab class=\\\"example-fab\\\" (click)=\\\"sidenav.toggle()\\\"><mat-icon>add</mat-icon></button><div class=\\\"example-scrolling-content\\\">Lorem ipsum dolor sit amet, pede a libero aenean phasellus, lectus metus sint ut risus, fusce vel in pellentesque. Nisl rutrum etiam morbi consectetuer tempor magna, aenean nullam nunc id, neque vivamus interdum sociis nulla scelerisque sem, dolor id wisi turpis magna aliquam magna. Risus accumsan hac eget etiam donec sed, senectus erat mattis quam, tempor vel urna occaecat cras, metus urna augue nec at. Et morbi amet dui praesent, nec eu at, ligula ipsum dui sollicitudin, quis nisl massa viverra ligula, mauris fermentum orci arcu enim fringilla. Arcu erat nulla in aenean lacinia ullamcorper, urna ante nam et sagittis, tristique vehicula nibh ipsum vivamus, proin proin. Porta commodo nibh quis libero amet. Taciti dui, sapien consectetuer.</div></mat-sidenav><button mat-mini-fab class=\\\"example-fab\\\" (click)=\\\"sidenav.toggle()\\\"><mat-icon>add</mat-icon></button><div class=\\\"example-scrolling-content\\\">Lorem ipsum dolor sit amet, pede a libero aenean phasellus, lectus metus sint ut risus, fusce vel in pellentesque. Nisl rutrum etiam morbi consectetuer tempor magna, aenean nullam nunc id, neque vivamus interdum sociis nulla scelerisque sem, dolor id wisi turpis magna aliquam magna. Risus accumsan hac eget etiam donec sed, senectus erat mattis quam, tempor vel urna occaecat cras, metus urna augue nec at. Et morbi amet dui praesent, nec eu at, ligula ipsum dui sollicitudin, quis nisl massa viverra ligula, mauris fermentum orci arcu enim fringilla. Arcu erat nulla in aenean lacinia ullamcorper, urna ante nam et sagittis, tristique vehicula nibh ipsum vivamus, proin proin. Porta commodo nibh quis libero amet. Taciti dui, sapien consectetuer.</div></mat-sidenav-container>\",\n                styles: [\".example-sidenav-fab-container { width: 500px; height: 300px; border: 1px solid rgba(0, 0, 0, 0.5); } .example-sidenav-fab-container mat-sidenav { max-width: 200px; } .example-sidenav-fab-container .mat-sidenav-content, .example-sidenav-fab-container mat-sidenav { display: flex; overflow: visible; } .example-scrolling-content { overflow: auto; height: 100%; } .example-fab.mat-mini-fab { position: absolute; right: 20px; bottom: 10px; } \"],\n                encapsulation: ViewEncapsulation.None,\n                preserveWhitespaces: false,\n            },] },\n];\n/**\n * @nocollapse\n */\nSidenavFabExample.ctorParameters = () => [];\nfunction SidenavFabExample_tsickle_Closure_declarations() {\n    /** @type {?} */\n    SidenavFabExample.decorators;\n    /**\n     * @nocollapse\n     * @type {?}\n     */\n    SidenavFabExample.ctorParameters;\n}\n//# sourceMappingURL=sidenav-fab-example.js.map","import { Component } from '@angular/core';\n/**\n * \\@title Basic sidenav\n */\nexport class SidenavOverviewExample {\n}\nSidenavOverviewExample.decorators = [\n    { type: Component, args: [{\n                selector: 'sidenav-overview-example',\n                template: \"<mat-sidenav-container class=\\\"example-container\\\"><mat-sidenav #sidenav class=\\\"example-sidenav\\\">Jolly good!</mat-sidenav><div class=\\\"example-sidenav-content\\\"><button type=\\\"button\\\" mat-button (click)=\\\"sidenav.open()\\\">Open sidenav</button></div></mat-sidenav-container>\",\n                styles: [\".example-container { width: 500px; height: 300px; border: 1px solid rgba(0, 0, 0, 0.5); } .example-sidenav-content { display: flex; height: 100%; align-items: center; justify-content: center; } .example-sidenav { padding: 20px; } \"],\n            },] },\n];\n/**\n * @nocollapse\n */\nSidenavOverviewExample.ctorParameters = () => [];\nfunction SidenavOverviewExample_tsickle_Closure_declarations() {\n    /** @type {?} */\n    SidenavOverviewExample.decorators;\n    /**\n     * @nocollapse\n     * @type {?}\n     */\n    SidenavOverviewExample.ctorParameters;\n}\n//# sourceMappingURL=sidenav-overview-example.js.map","import { Component } from '@angular/core';\n/**\n * \\@title Configurable slide-toggle\n */\nexport class SlideToggleConfigurableExample {\n    constructor() {\n        this.color = 'accent';\n        this.checked = false;\n        this.disabled = false;\n    }\n}\nSlideToggleConfigurableExample.decorators = [\n    { type: Component, args: [{\n                selector: 'slide-toggle-configurable-example',\n                template: \"<mat-card><mat-card-content><h2 class=\\\"example-h2\\\">Slider configuration</h2><section class=\\\"example-section\\\"><label class=\\\"example-margin\\\">Color:</label><mat-radio-group [(ngModel)]=\\\"color\\\"><mat-radio-button class=\\\"example-margin\\\" value=\\\"primary\\\">Primary</mat-radio-button><mat-radio-button class=\\\"example-margin\\\" value=\\\"accent\\\">Accent</mat-radio-button><mat-radio-button class=\\\"example-margin\\\" value=\\\"warn\\\">Warn</mat-radio-button></mat-radio-group></section><section class=\\\"example-section\\\"><mat-checkbox class=\\\"example-margin\\\" [(ngModel)]=\\\"checked\\\">Checked</mat-checkbox></section><section class=\\\"example-section\\\"><mat-checkbox class=\\\"example-margin\\\" [(ngModel)]=\\\"disabled\\\">Disabled</mat-checkbox></section></mat-card-content></mat-card><mat-card class=\\\"result\\\"><mat-card-content><h2 class=\\\"example-h2\\\">Result</h2><section class=\\\"example-section\\\"><mat-slide-toggle class=\\\"example-margin\\\" [color]=\\\"color\\\" [checked]=\\\"checked\\\" [disabled]=\\\"disabled\\\">Slide me!</mat-slide-toggle></section></mat-card-content></mat-card>\",\n                styles: [\".example-h2 { margin: 10px; } .example-section { display: flex; align-content: center; align-items: center; height: 60px; } .example-margin { margin: 10px; } \"],\n            },] },\n];\n/**\n * @nocollapse\n */\nSlideToggleConfigurableExample.ctorParameters = () => [];\nfunction SlideToggleConfigurableExample_tsickle_Closure_declarations() {\n    /** @type {?} */\n    SlideToggleConfigurableExample.decorators;\n    /**\n     * @nocollapse\n     * @type {?}\n     */\n    SlideToggleConfigurableExample.ctorParameters;\n    /** @type {?} */\n    SlideToggleConfigurableExample.prototype.color;\n    /** @type {?} */\n    SlideToggleConfigurableExample.prototype.checked;\n    /** @type {?} */\n    SlideToggleConfigurableExample.prototype.disabled;\n}\n//# sourceMappingURL=slide-toggle-configurable-example.js.map","import { Component } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\n/**\n * \\@title Slide-toggle with forms\n */\nexport class SlideToggleFormsExample {\n    /**\n     * @param {?} formBuilder\n     */\n    constructor(formBuilder) {\n        this.isChecked = true;\n        this.formGroup = formBuilder.group({\n            enableWifi: '',\n            acceptTerms: ['', Validators.requiredTrue]\n        });\n    }\n    /**\n     * @param {?} formValue\n     * @return {?}\n     */\n    onFormSubmit(formValue) {\n        alert(JSON.stringify(formValue, null, 2));\n    }\n}\nSlideToggleFormsExample.decorators = [\n    { type: Component, args: [{\n                selector: 'slide-toggle-forms-example',\n                template: \"<p>Slide Toggle using a simple NgModel.</p><mat-slide-toggle [(ngModel)]=\\\"isChecked\\\">Slide Toggle Checked: {{ isChecked }}</mat-slide-toggle><p>Slide Toggle inside of a Template-driven form</p><form class=\\\"example-form\\\" #form=\\\"ngForm\\\" (ngSubmit)=\\\"onFormSubmit(form.value)\\\" ngNativeValidate><mat-slide-toggle ngModel name=\\\"enableWifi\\\">Enable Wifi</mat-slide-toggle><mat-slide-toggle ngModel name=\\\"acceptTerms\\\" required>Accept Terms of Service</mat-slide-toggle><button mat-raised-button type=\\\"submit\\\">Save Settings</button></form><p>Slide Toggle inside of a Reactive form</p><form class=\\\"example-form\\\" [formGroup]=\\\"formGroup\\\" (ngSubmit)=\\\"onFormSubmit(formGroup.value)\\\" ngNativeValidate><mat-slide-toggle formControlName=\\\"enableWifi\\\">Enable Wifi</mat-slide-toggle><mat-slide-toggle formControlName=\\\"acceptTerms\\\">Accept Terms of Service</mat-slide-toggle><p>Form Group Status: {{ formGroup.status}}</p><button mat-rasied-button type=\\\"submit\\\">Save Settings</button></form>\",\n                styles: [\".example-form mat-slide-toggle { margin: 8px 0; display: block; } \"],\n            },] },\n];\n/**\n * @nocollapse\n */\nSlideToggleFormsExample.ctorParameters = () => [\n    { type: FormBuilder, },\n];\nfunction SlideToggleFormsExample_tsickle_Closure_declarations() {\n    /** @type {?} */\n    SlideToggleFormsExample.decorators;\n    /**\n     * @nocollapse\n     * @type {?}\n     */\n    SlideToggleFormsExample.ctorParameters;\n    /** @type {?} */\n    SlideToggleFormsExample.prototype.isChecked;\n    /** @type {?} */\n    SlideToggleFormsExample.prototype.formGroup;\n}\n//# sourceMappingURL=slide-toggle-forms-example.js.map","import { Component } from '@angular/core';\n/**\n * \\@title Basic slide-toggles\n */\nexport class SlideToggleOverviewExample {\n}\nSlideToggleOverviewExample.decorators = [\n    { type: Component, args: [{\n                selector: 'slide-toggle-overview-example',\n                template: \"<mat-slide-toggle>Slide me!</mat-slide-toggle>\",\n            },] },\n];\n/**\n * @nocollapse\n */\nSlideToggleOverviewExample.ctorParameters = () => [];\nfunction SlideToggleOverviewExample_tsickle_Closure_declarations() {\n    /** @type {?} */\n    SlideToggleOverviewExample.decorators;\n    /**\n     * @nocollapse\n     * @type {?}\n     */\n    SlideToggleOverviewExample.ctorParameters;\n}\n//# sourceMappingURL=slide-toggle-overview-example.js.map","import { Component, ViewEncapsulation } from '@angular/core';\n/**\n * \\@title Configurable slider\n */\nexport class SliderConfigurableExample {\n    constructor() {\n        this.autoTicks = false;\n        this.disabled = false;\n        this.invert = false;\n        this.max = 100;\n        this.min = 0;\n        this.showTicks = false;\n        this.step = 1;\n        this.thumbLabel = false;\n        this.value = 0;\n        this.vertical = false;\n        this._tickInterval = 1;\n    }\n    /**\n     * @return {?}\n     */\n    get tickInterval() {\n        return this.showTicks ? (this.autoTicks ? 'auto' : this._tickInterval) : 0;\n    }\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    set tickInterval(v) {\n        this._tickInterval = Number(v);\n    }\n}\nSliderConfigurableExample.decorators = [\n    { type: Component, args: [{\n                selector: 'slider-configurable-example',\n                template: \"<mat-card><mat-card-content><h2 class=\\\"example-h2\\\">Slider configuration</h2><section class=\\\"example-section\\\"><mat-form-field class=\\\"example-margin\\\"><input matInput type=\\\"number\\\" placeholder=\\\"Value\\\" [(ngModel)]=\\\"value\\\"></mat-form-field><mat-form-field class=\\\"example-margin\\\"><input matInput type=\\\"number\\\" placeholder=\\\"Min value\\\" [(ngModel)]=\\\"min\\\"></mat-form-field><mat-form-field class=\\\"example-margin\\\"><input matInput type=\\\"number\\\" placeholder=\\\"Max value\\\" [(ngModel)]=\\\"max\\\"></mat-form-field><mat-form-field class=\\\"example-margin\\\"><input matInput type=\\\"number\\\" placeholder=\\\"Step size\\\" [(ngModel)]=\\\"step\\\"></mat-form-field></section><section class=\\\"example-section\\\"><mat-checkbox class=\\\"example-margin\\\" [(ngModel)]=\\\"showTicks\\\">Show ticks</mat-checkbox><mat-checkbox class=\\\"example-margin\\\" [(ngModel)]=\\\"autoTicks\\\" *ngIf=\\\"showTicks\\\">Auto ticks</mat-checkbox><mat-form-field class=\\\"example-margin\\\" *ngIf=\\\"showTicks && !autoTicks\\\"><input matInput type=\\\"number\\\" placeholder=\\\"Tick interval\\\" [(ngModel)]=\\\"tickInterval\\\"></mat-form-field></section><section class=\\\"example-section\\\"><mat-checkbox class=\\\"example-margin\\\" [(ngModel)]=\\\"thumbLabel\\\">Show thumb label</mat-checkbox></section><section class=\\\"example-section\\\"><mat-checkbox class=\\\"example-margin\\\" [(ngModel)]=\\\"vertical\\\">Vertical</mat-checkbox><mat-checkbox class=\\\"example-margin\\\" [(ngModel)]=\\\"invert\\\">Inverted</mat-checkbox></section><section class=\\\"example-section\\\"><mat-checkbox class=\\\"example-margin\\\" [(ngModel)]=\\\"disabled\\\">Disabled</mat-checkbox></section></mat-card-content></mat-card><mat-card class=\\\"result\\\"><mat-card-content><h2 class=\\\"example-h2\\\">Result</h2><mat-slider class=\\\"example-margin\\\" [disabled]=\\\"disabled\\\" [invert]=\\\"invert\\\" [max]=\\\"max\\\" [min]=\\\"min\\\" [step]=\\\"step\\\" [thumb-label]=\\\"thumbLabel\\\" [tick-interval]=\\\"tickInterval\\\" [value]=\\\"value\\\" [vertical]=\\\"vertical\\\"></mat-slider></mat-card-content></mat-card>\",\n                styles: [\".example-h2 { margin: 10px; } .example-section { display: flex; align-content: center; align-items: center; height: 60px; } .example-margin { margin: 10px; } .mat-slider-horizontal { width: 300px; } .mat-slider-vertical { height: 300px; } \"],\n                encapsulation: ViewEncapsulation.None,\n                preserveWhitespaces: false,\n            },] },\n];\n/**\n * @nocollapse\n */\nSliderConfigurableExample.ctorParameters = () => [];\nfunction SliderConfigurableExample_tsickle_Closure_declarations() {\n    /** @type {?} */\n    SliderConfigurableExample.decorators;\n    /**\n     * @nocollapse\n     * @type {?}\n     */\n    SliderConfigurableExample.ctorParameters;\n    /** @type {?} */\n    SliderConfigurableExample.prototype.autoTicks;\n    /** @type {?} */\n    SliderConfigurableExample.prototype.disabled;\n    /** @type {?} */\n    SliderConfigurableExample.prototype.invert;\n    /** @type {?} */\n    SliderConfigurableExample.prototype.max;\n    /** @type {?} */\n    SliderConfigurableExample.prototype.min;\n    /** @type {?} */\n    SliderConfigurableExample.prototype.showTicks;\n    /** @type {?} */\n    SliderConfigurableExample.prototype.step;\n    /** @type {?} */\n    SliderConfigurableExample.prototype.thumbLabel;\n    /** @type {?} */\n    SliderConfigurableExample.prototype.value;\n    /** @type {?} */\n    SliderConfigurableExample.prototype.vertical;\n    /** @type {?} */\n    SliderConfigurableExample.prototype._tickInterval;\n}\n//# sourceMappingURL=slider-configurable-example.js.map","import { Component } from '@angular/core';\n/**\n * \\@title Basic slider\n */\nexport class SliderOverviewExample {\n}\nSliderOverviewExample.decorators = [\n    { type: Component, args: [{\n                selector: 'slider-overview-example',\n                template: \"<mat-slider></mat-slider>\",\n                styles: [\"/** No CSS for this example */ mat-slider { width: 300px; } \"],\n            },] },\n];\n/**\n * @nocollapse\n */\nSliderOverviewExample.ctorParameters = () => [];\nfunction SliderOverviewExample_tsickle_Closure_declarations() {\n    /** @type {?} */\n    SliderOverviewExample.decorators;\n    /**\n     * @nocollapse\n     * @type {?}\n     */\n    SliderOverviewExample.ctorParameters;\n}\n//# sourceMappingURL=slider-overview-example.js.map","import { Component } from '@angular/core';\nimport { MatSnackBar } from '@angular/material';\n/**\n * \\@title Snack-bar with a custom component\n */\nexport class SnackBarComponentExample {\n    /**\n     * @param {?} snackBar\n     */\n    constructor(snackBar) {\n        this.snackBar = snackBar;\n    }\n    /**\n     * @return {?}\n     */\n    openSnackBar() {\n        this.snackBar.openFromComponent(PizzaPartyComponent, {\n            duration: 500,\n        });\n    }\n}\nSnackBarComponentExample.decorators = [\n    { type: Component, args: [{\n                selector: 'snack-bar-component-example',\n                template: \"<button mat-button (click)=\\\"openSnackBar()\\\" aria-label=\\\"Show an example snack-bar\\\">Pizza party</button>\",\n            },] },\n];\n/**\n * @nocollapse\n */\nSnackBarComponentExample.ctorParameters = () => [\n    { type: MatSnackBar, },\n];\nfunction SnackBarComponentExample_tsickle_Closure_declarations() {\n    /** @type {?} */\n    SnackBarComponentExample.decorators;\n    /**\n     * @nocollapse\n     * @type {?}\n     */\n    SnackBarComponentExample.ctorParameters;\n    /** @type {?} */\n    SnackBarComponentExample.prototype.snackBar;\n}\nexport class PizzaPartyComponent {\n}\nPizzaPartyComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'snack-bar-component-example-snack',\n                template: \"<span class=\\\"example-pizza-party\\\">Pizza party!!! 🍕</span>\",\n                styles: [`.example-pizza-party { color: hotpink; }`],\n            },] },\n];\n/**\n * @nocollapse\n */\nPizzaPartyComponent.ctorParameters = () => [];\nfunction PizzaPartyComponent_tsickle_Closure_declarations() {\n    /** @type {?} */\n    PizzaPartyComponent.decorators;\n    /**\n     * @nocollapse\n     * @type {?}\n     */\n    PizzaPartyComponent.ctorParameters;\n}\n//# sourceMappingURL=snack-bar-component-example.js.map","import { Component } from '@angular/core';\nimport { MatSnackBar } from '@angular/material';\n/**\n * \\@title Basic snack-bar\n */\nexport class SnackBarOverviewExample {\n    /**\n     * @param {?} snackBar\n     */\n    constructor(snackBar) {\n        this.snackBar = snackBar;\n    }\n    /**\n     * @param {?} message\n     * @param {?} action\n     * @return {?}\n     */\n    openSnackBar(message, action) {\n        this.snackBar.open(message, action, {\n            duration: 2000,\n        });\n    }\n}\nSnackBarOverviewExample.decorators = [\n    { type: Component, args: [{\n                selector: 'snack-bar-overview-example',\n                template: \"<mat-form-field><input matInput value=\\\"Disco party!\\\" placeholder=\\\"Message\\\" #message></mat-form-field><mat-form-field><input matInput value=\\\"Dance\\\" placeholder=\\\"Action\\\" #action></mat-form-field><button mat-button (click)=\\\"openSnackBar(message.value, action.value)\\\">Show snack-bar</button>\",\n            },] },\n];\n/**\n * @nocollapse\n */\nSnackBarOverviewExample.ctorParameters = () => [\n    { type: MatSnackBar, },\n];\nfunction SnackBarOverviewExample_tsickle_Closure_declarations() {\n    /** @type {?} */\n    SnackBarOverviewExample.decorators;\n    /**\n     * @nocollapse\n     * @type {?}\n     */\n    SnackBarOverviewExample.ctorParameters;\n    /** @type {?} */\n    SnackBarOverviewExample.prototype.snackBar;\n}\n//# sourceMappingURL=snack-bar-overview-example.js.map","import { Component } from '@angular/core';\n/**\n * \\@title Sorting overview\n */\nexport class SortOverviewExample {\n    constructor() {\n        this.desserts = [\n            { name: 'Frozen yogurt', calories: '159', fat: '6', carbs: '24', protein: '4' },\n            { name: 'Ice cream sandwich', calories: '237', fat: '9', carbs: '37', protein: '4' },\n            { name: 'Eclair', calories: '262', fat: '16', carbs: '24', protein: '6' },\n            { name: 'Cupcake', calories: '305', fat: '4', carbs: '67', protein: '4' },\n            { name: 'Gingerbread', calories: '356', fat: '16', carbs: '49', protein: '4' },\n        ];\n        this.sortedData = this.desserts.slice();\n    }\n    /**\n     * @param {?} sort\n     * @return {?}\n     */\n    sortData(sort) {\n        const /** @type {?} */ data = this.desserts.slice();\n        if (!sort.active || sort.direction == '') {\n            this.sortedData = data;\n            return;\n        }\n        this.sortedData = data.sort((a, b) => {\n            let /** @type {?} */ isAsc = sort.direction == 'asc';\n            switch (sort.active) {\n                case 'name': return compare(a.name, b.name, isAsc);\n                case 'calories': return compare(+a.calories, +b.calories, isAsc);\n                case 'fat': return compare(+a.fat, +b.fat, isAsc);\n                case 'carbs': return compare(+a.carbs, +b.carbs, isAsc);\n                case 'protein': return compare(+a.protein, +b.protein, isAsc);\n                default: return 0;\n            }\n        });\n    }\n}\nSortOverviewExample.decorators = [\n    { type: Component, args: [{\n                selector: 'sort-overview-example',\n                template: \"<table matSort (matSortChange)=\\\"sortData($event)\\\"><tr><th mat-sort-header=\\\"name\\\">Dessert (100g)</th><th mat-sort-header=\\\"calories\\\">Calories</th><th mat-sort-header=\\\"fat\\\">Fat (g)</th><th mat-sort-header=\\\"carbs\\\">Carbs (g)</th><th mat-sort-header=\\\"protein\\\">Protein (g)</th></tr><tr *ngFor=\\\"let dessert of sortedData\\\"><td>{{dessert.name}}</td><td>{{dessert.calories}}</td><td>{{dessert.fat}}</td><td>{{dessert.carbs}}</td><td>{{dessert.protein}}</td></tr></table>\",\n                styles: [\".mat-sort-header-container { align-items: center; } \"],\n            },] },\n];\n/**\n * @nocollapse\n */\nSortOverviewExample.ctorParameters = () => [];\nfunction SortOverviewExample_tsickle_Closure_declarations() {\n    /** @type {?} */\n    SortOverviewExample.decorators;\n    /**\n     * @nocollapse\n     * @type {?}\n     */\n    SortOverviewExample.ctorParameters;\n    /** @type {?} */\n    SortOverviewExample.prototype.desserts;\n    /** @type {?} */\n    SortOverviewExample.prototype.sortedData;\n}\n/**\n * @param {?} a\n * @param {?} b\n * @param {?} isAsc\n * @return {?}\n */\nfunction compare(a, b, isAsc) {\n    return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\n}\n//# sourceMappingURL=sort-overview-example.js.map","import { Component } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\n/**\n * \\@title Stepper overview\n */\nexport class StepperOverviewExample {\n    /**\n     * @param {?} _formBuilder\n     */\n    constructor(_formBuilder) {\n        this._formBuilder = _formBuilder;\n        this.isLinear = false;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this.firstFormGroup = this._formBuilder.group({\n            firstCtrl: ['', Validators.required]\n        });\n        this.secondFormGroup = this._formBuilder.group({\n            secondCtrl: ['', Validators.required]\n        });\n    }\n}\nStepperOverviewExample.decorators = [\n    { type: Component, args: [{\n                selector: 'stepper-overview-example',\n                template: \"<button mat-raised-button (click)=\\\"isLinear = true\\\" id=\\\"toggle-linear\\\">Enable linear mode</button><mat-horizontal-stepper [linear]=\\\"isLinear\\\"><mat-step [stepControl]=\\\"firstFormGroup\\\"><form [formGroup]=\\\"firstFormGroup\\\"><ng-template matStepLabel>Fill out your name</ng-template><mat-form-field><input matInput placeholder=\\\"Last name, First name\\\" formControlName=\\\"firstCtrl\\\" required></mat-form-field><div><button mat-button matStepperNext>Next</button></div></form></mat-step><mat-step [stepControl]=\\\"secondFormGroup\\\"><form [formGroup]=\\\"secondFormGroup\\\"><ng-template matStepLabel>Fill out your address</ng-template><mat-form-field><input matInput placeholder=\\\"Address\\\" formControlName=\\\"secondCtrl\\\" required></mat-form-field><div><button mat-button matStepperPrevious>Back</button> <button mat-button matStepperNext>Next</button></div></form></mat-step><mat-step><ng-template matStepLabel>Done</ng-template>You are now done.<div><button mat-button matStepperPrevious>Back</button></div></mat-step></mat-horizontal-stepper>\",\n                styles: [\"/** No CSS for this example */ \"]\n            },] },\n];\n/**\n * @nocollapse\n */\nStepperOverviewExample.ctorParameters = () => [\n    { type: FormBuilder, },\n];\nfunction StepperOverviewExample_tsickle_Closure_declarations() {\n    /** @type {?} */\n    StepperOverviewExample.decorators;\n    /**\n     * @nocollapse\n     * @type {?}\n     */\n    StepperOverviewExample.ctorParameters;\n    /** @type {?} */\n    StepperOverviewExample.prototype.isLinear;\n    /** @type {?} */\n    StepperOverviewExample.prototype.firstFormGroup;\n    /** @type {?} */\n    StepperOverviewExample.prototype.secondFormGroup;\n    /** @type {?} */\n    StepperOverviewExample.prototype._formBuilder;\n}\n//# sourceMappingURL=stepper-overview-example.js.map","import { Component } from '@angular/core';\nimport { DataSource } from '@angular/cdk/collections';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/observable/of';\n/**\n * \\@title Basic table\n */\nexport class TableBasicExample {\n    constructor() {\n        this.displayedColumns = ['position', 'name', 'weight', 'symbol'];\n        this.dataSource = new ExampleDataSource();\n    }\n}\nTableBasicExample.decorators = [\n    { type: Component, args: [{\n                selector: 'table-basic-example',\n                styles: [\".example-container { display: flex; flex-direction: column; max-height: 500px; min-width: 300px; } .mat-table { overflow: auto; max-height: 500px; } \"],\n                template: \"<div class=\\\"example-container mat-elevation-z8\\\"><mat-table #table [dataSource]=\\\"dataSource\\\"><ng-container matColumnDef=\\\"position\\\"><mat-header-cell *matHeaderCellDef>No.</mat-header-cell><mat-cell *matCellDef=\\\"let element\\\">{{element.position}}</mat-cell></ng-container><ng-container matColumnDef=\\\"name\\\"><mat-header-cell *matHeaderCellDef>Name</mat-header-cell><mat-cell *matCellDef=\\\"let element\\\">{{element.name}}</mat-cell></ng-container><ng-container matColumnDef=\\\"weight\\\"><mat-header-cell *matHeaderCellDef>Weight</mat-header-cell><mat-cell *matCellDef=\\\"let element\\\">{{element.weight}}</mat-cell></ng-container><ng-container matColumnDef=\\\"symbol\\\"><mat-header-cell *matHeaderCellDef>Symbol</mat-header-cell><mat-cell *matCellDef=\\\"let element\\\">{{element.symbol}}</mat-cell></ng-container><mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row><mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row></mat-table></div>\",\n            },] },\n];\n/**\n * @nocollapse\n */\nTableBasicExample.ctorParameters = () => [];\nfunction TableBasicExample_tsickle_Closure_declarations() {\n    /** @type {?} */\n    TableBasicExample.decorators;\n    /**\n     * @nocollapse\n     * @type {?}\n     */\n    TableBasicExample.ctorParameters;\n    /** @type {?} */\n    TableBasicExample.prototype.displayedColumns;\n    /** @type {?} */\n    TableBasicExample.prototype.dataSource;\n}\nconst /** @type {?} */ data = [\n    { position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H' },\n    { position: 2, name: 'Helium', weight: 4.0026, symbol: 'He' },\n    { position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li' },\n    { position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be' },\n    { position: 5, name: 'Boron', weight: 10.811, symbol: 'B' },\n    { position: 6, name: 'Carbon', weight: 12.0107, symbol: 'C' },\n    { position: 7, name: 'Nitrogen', weight: 14.0067, symbol: 'N' },\n    { position: 8, name: 'Oxygen', weight: 15.9994, symbol: 'O' },\n    { position: 9, name: 'Fluorine', weight: 18.9984, symbol: 'F' },\n    { position: 10, name: 'Neon', weight: 20.1797, symbol: 'Ne' },\n    { position: 11, name: 'Sodium', weight: 22.9897, symbol: 'Na' },\n    { position: 12, name: 'Magnesium', weight: 24.305, symbol: 'Mg' },\n    { position: 13, name: 'Aluminum', weight: 26.9815, symbol: 'Al' },\n    { position: 14, name: 'Silicon', weight: 28.0855, symbol: 'Si' },\n    { position: 15, name: 'Phosphorus', weight: 30.9738, symbol: 'P' },\n    { position: 16, name: 'Sulfur', weight: 32.065, symbol: 'S' },\n    { position: 17, name: 'Chlorine', weight: 35.453, symbol: 'Cl' },\n    { position: 18, name: 'Argon', weight: 39.948, symbol: 'Ar' },\n    { position: 19, name: 'Potassium', weight: 39.0983, symbol: 'K' },\n    { position: 20, name: 'Calcium', weight: 40.078, symbol: 'Ca' },\n];\n/**\n * Data source to provide what data should be rendered in the table. The observable provided\n * in connect should emit exactly the data that should be rendered by the table. If the data is\n * altered, the observable should emit that new set of data on the stream. In our case here,\n * we return a stream that contains only one set of data that doesn't change.\n */\nexport class ExampleDataSource extends DataSource {\n    /**\n     * Connect function called by the table to retrieve one stream containing the data to render.\n     * @return {?}\n     */\n    connect() {\n        return Observable.of(data);\n    }\n    /**\n     * @return {?}\n     */\n    disconnect() { }\n}\n//# sourceMappingURL=table-basic-example.js.map","import { Component, ViewChild } from '@angular/core';\nimport { DataSource } from '@angular/cdk/collections';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/startWith';\nimport 'rxjs/add/observable/merge';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/debounceTime';\nimport 'rxjs/add/operator/distinctUntilChanged';\nimport 'rxjs/add/observable/fromEvent';\n/**\n * \\@title Table with filtering\n */\nexport class TableFilteringExample {\n    constructor() {\n        this.displayedColumns = ['userId', 'userName', 'progress', 'color'];\n        this.exampleDatabase = new ExampleDatabase();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this.dataSource = new ExampleDataSource(this.exampleDatabase);\n        Observable.fromEvent(this.filter.nativeElement, 'keyup')\n            .debounceTime(150)\n            .distinctUntilChanged()\n            .subscribe(() => {\n            if (!this.dataSource) {\n                return;\n            }\n            this.dataSource.filter = this.filter.nativeElement.value;\n        });\n    }\n}\nTableFilteringExample.decorators = [\n    { type: Component, args: [{\n                selector: 'table-filtering-example',\n                styles: [\"/* Structure */ .example-container { display: flex; flex-direction: column; min-width: 300px; } .example-header { min-height: 64px; display: flex; align-items: baseline; padding: 8px 24px 0; font-size: 20px; justify-content: space-between; } .mat-form-field { font-size: 14px; flex-grow: 1; margin-left: 32px; } .mat-table { overflow: auto; max-height: 500px; } \"],\n                template: \"<div class=\\\"example-container mat-elevation-z8\\\"><div class=\\\"example-header\\\"><mat-form-field floatPlaceholder=\\\"never\\\"><input matInput #filter placeholder=\\\"Filter users\\\"></mat-form-field></div><mat-table #table [dataSource]=\\\"dataSource\\\"><ng-container matColumnDef=\\\"userId\\\"><mat-header-cell *matHeaderCellDef>ID</mat-header-cell><mat-cell *matCellDef=\\\"let row\\\">{{row.id}}</mat-cell></ng-container><ng-container matColumnDef=\\\"progress\\\"><mat-header-cell *matHeaderCellDef>Progress</mat-header-cell><mat-cell *matCellDef=\\\"let row\\\">{{row.progress}}%</mat-cell></ng-container><ng-container matColumnDef=\\\"userName\\\"><mat-header-cell *matHeaderCellDef>Name</mat-header-cell><mat-cell *matCellDef=\\\"let row\\\">{{row.name}}</mat-cell></ng-container><ng-container matColumnDef=\\\"color\\\"><mat-header-cell *matHeaderCellDef>Color</mat-header-cell><mat-cell *matCellDef=\\\"let row\\\" [style.color]=\\\"row.color\\\">{{row.color}}</mat-cell></ng-container><mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row><mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row></mat-table></div>\",\n            },] },\n];\n/**\n * @nocollapse\n */\nTableFilteringExample.ctorParameters = () => [];\nTableFilteringExample.propDecorators = {\n    'filter': [{ type: ViewChild, args: ['filter',] },],\n};\nfunction TableFilteringExample_tsickle_Closure_declarations() {\n    /** @type {?} */\n    TableFilteringExample.decorators;\n    /**\n     * @nocollapse\n     * @type {?}\n     */\n    TableFilteringExample.ctorParameters;\n    /** @type {?} */\n    TableFilteringExample.propDecorators;\n    /** @type {?} */\n    TableFilteringExample.prototype.displayedColumns;\n    /** @type {?} */\n    TableFilteringExample.prototype.exampleDatabase;\n    /** @type {?} */\n    TableFilteringExample.prototype.dataSource;\n    /** @type {?} */\n    TableFilteringExample.prototype.filter;\n}\n/**\n * Constants used to fill up our data base.\n */\nconst COLORS = ['maroon', 'red', 'orange', 'yellow', 'olive', 'green', 'purple',\n    'fuchsia', 'lime', 'teal', 'aqua', 'blue', 'navy', 'black', 'gray'];\nconst /** @type {?} */ NAMES = ['Maia', 'Asher', 'Olivia', 'Atticus', 'Amelia', 'Jack',\n    'Charlotte', 'Theodore', 'Isla', 'Oliver', 'Isabella', 'Jasper',\n    'Cora', 'Levi', 'Violet', 'Arthur', 'Mia', 'Thomas', 'Elizabeth'];\n/**\n * An example database that the data source uses to retrieve data for the table.\n */\nexport class ExampleDatabase {\n    constructor() {\n        /**\n         * Stream that emits whenever the data has been modified.\n         */\n        this.dataChange = new BehaviorSubject([]);\n        // Fill up the database with 100 users.\n        for (let i = 0; i < 100; i++) {\n            this.addUser();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    get data() { return this.dataChange.value; }\n    /**\n     * Adds a new user to the database.\n     * @return {?}\n     */\n    addUser() {\n        const /** @type {?} */ copiedData = this.data.slice();\n        copiedData.push(this.createNewUser());\n        this.dataChange.next(copiedData);\n    }\n    /**\n     * Builds and returns a new User.\n     * @return {?}\n     */\n    createNewUser() {\n        const /** @type {?} */ name = NAMES[Math.round(Math.random() * (NAMES.length - 1))] + ' ' +\n            NAMES[Math.round(Math.random() * (NAMES.length - 1))].charAt(0) + '.';\n        return {\n            id: (this.data.length + 1).toString(),\n            name: name,\n            progress: Math.round(Math.random() * 100).toString(),\n            color: COLORS[Math.round(Math.random() * (COLORS.length - 1))]\n        };\n    }\n}\nfunction ExampleDatabase_tsickle_Closure_declarations() {\n    /**\n     * Stream that emits whenever the data has been modified.\n     * @type {?}\n     */\n    ExampleDatabase.prototype.dataChange;\n}\n/**\n * Data source to provide what data should be rendered in the table. Note that the data source\n * can retrieve its data in any way. In this case, the data source is provided a reference\n * to a common data base, ExampleDatabase. It is not the data source's responsibility to manage\n * the underlying data. Instead, it only needs to take the data and send the table exactly what\n * should be rendered.\n */\nexport class ExampleDataSource extends DataSource {\n    /**\n     * @param {?} _exampleDatabase\n     */\n    constructor(_exampleDatabase) {\n        super();\n        this._exampleDatabase = _exampleDatabase;\n        this._filterChange = new BehaviorSubject('');\n    }\n    /**\n     * @return {?}\n     */\n    get filter() { return this._filterChange.value; }\n    /**\n     * @param {?} filter\n     * @return {?}\n     */\n    set filter(filter) { this._filterChange.next(filter); }\n    /**\n     * Connect function called by the table to retrieve one stream containing the data to render.\n     * @return {?}\n     */\n    connect() {\n        const /** @type {?} */ displayDataChanges = [\n            this._exampleDatabase.dataChange,\n            this._filterChange,\n        ];\n        return Observable.merge(...displayDataChanges).map(() => {\n            return this._exampleDatabase.data.slice().filter((item) => {\n                let /** @type {?} */ searchStr = (item.name + item.color).toLowerCase();\n                return searchStr.indexOf(this.filter.toLowerCase()) != -1;\n            });\n        });\n    }\n    /**\n     * @return {?}\n     */\n    disconnect() { }\n}\nfunction ExampleDataSource_tsickle_Closure_declarations() {\n    /** @type {?} */\n    ExampleDataSource.prototype._filterChange;\n    /** @type {?} */\n    ExampleDataSource.prototype._exampleDatabase;\n}\n//# sourceMappingURL=table-filtering-example.js.map","import { Component, ViewChild } from '@angular/core';\nimport { Http } from '@angular/http';\nimport { DataSource } from '@angular/cdk/collections';\nimport { MatPaginator, MatSort } from '@angular/material';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/observable/merge';\nimport 'rxjs/add/observable/of';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/startWith';\nimport 'rxjs/add/operator/switchMap';\n/**\n * \\@title Table retrieving data through HTTP\n */\nexport class TableHttpExample {\n    /**\n     * @param {?} http\n     */\n    constructor(http) {\n        this.http = http;\n        this.displayedColumns = ['created_at', 'state', 'number', 'title'];\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this.exampleDatabase = new ExampleHttpDao(this.http);\n        this.dataSource = new ExampleDataSource(/** @type {?} */ ((this.exampleDatabase)), this.paginator, this.sort);\n    }\n}\nTableHttpExample.decorators = [\n    { type: Component, args: [{\n                selector: 'table-http-example',\n                styles: [\"/* Structure */ .example-container { display: flex; flex-direction: column; max-height: 500px; min-width: 300px; position: relative; } .example-header { min-height: 64px; display: flex; align-items: center; padding-left: 24px; font-size: 20px; } .example-table { overflow: auto; min-height: 300px; } .mat-column-title { text-overflow: ellipsis; white-space: nowrap; flex: 1; overflow: hidden; } /* Column Widths */ .mat-column-number, .mat-column-state { max-width: 64px; } .mat-column-created { max-width: 124px; } .example-loading-shade { position: absolute; top: 0; left: 0; bottom: 56px; right: 0; background: rgba(0, 0, 0, 0.15); z-index: 1; display: flex; align-items: center; justify-content: center; } .example-rate-limit-reached { color: #980000; max-width: 360px; text-align: center; } \"],\n                template: \"<div class=\\\"example-container mat-elevation-z8\\\"><div class=\\\"example-loading-shade\\\" *ngIf=\\\"dataSource.isLoadingResults || dataSource.isRateLimitReached\\\"><mat-spinner *ngIf=\\\"dataSource.isLoadingResults\\\"></mat-spinner><div class=\\\"example-rate-limit-reached\\\" *ngIf=\\\"dataSource.isRateLimitReached\\\">GitHub's API rate limit has been reached. It will be reset in one minute.</div></div><mat-table #table [dataSource]=\\\"dataSource\\\" class=\\\"example-table\\\" matSort matSortActive=\\\"created_at\\\" matSortDisableClear matSortDirection=\\\"asc\\\"><ng-container matColumnDef=\\\"number\\\"><mat-header-cell *matHeaderCellDef>#</mat-header-cell><mat-cell *matCellDef=\\\"let row\\\">{{ row.number }}</mat-cell></ng-container><ng-container matColumnDef=\\\"title\\\"><mat-header-cell *matHeaderCellDef>Title</mat-header-cell><mat-cell *matCellDef=\\\"let row\\\">{{ row.title }}</mat-cell></ng-container><ng-container matColumnDef=\\\"state\\\"><mat-header-cell *matHeaderCellDef>State</mat-header-cell><mat-cell *matCellDef=\\\"let row\\\">{{ row.state }}</mat-cell></ng-container><ng-container matColumnDef=\\\"created_at\\\"><mat-header-cell *matHeaderCellDef mat-sort-header disableClear=\\\"true\\\">Created</mat-header-cell><mat-cell *matCellDef=\\\"let row\\\">{{ row.created_at | date }}</mat-cell></ng-container><mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row><mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row></mat-table><mat-paginator [length]=\\\"dataSource.resultsLength\\\" [pageSize]=\\\"30\\\"></mat-paginator></div>\",\n            },] },\n];\n/**\n * @nocollapse\n */\nTableHttpExample.ctorParameters = () => [\n    { type: Http, },\n];\nTableHttpExample.propDecorators = {\n    'paginator': [{ type: ViewChild, args: [MatPaginator,] },],\n    'sort': [{ type: ViewChild, args: [MatSort,] },],\n};\nfunction TableHttpExample_tsickle_Closure_declarations() {\n    /** @type {?} */\n    TableHttpExample.decorators;\n    /**\n     * @nocollapse\n     * @type {?}\n     */\n    TableHttpExample.ctorParameters;\n    /** @type {?} */\n    TableHttpExample.propDecorators;\n    /** @type {?} */\n    TableHttpExample.prototype.displayedColumns;\n    /** @type {?} */\n    TableHttpExample.prototype.exampleDatabase;\n    /** @type {?} */\n    TableHttpExample.prototype.dataSource;\n    /** @type {?} */\n    TableHttpExample.prototype.paginator;\n    /** @type {?} */\n    TableHttpExample.prototype.sort;\n    /** @type {?} */\n    TableHttpExample.prototype.http;\n}\n/**\n * An example database that the data source uses to retrieve data for the table.\n */\nexport class ExampleHttpDao {\n    /**\n     * @param {?} http\n     */\n    constructor(http) {\n        this.http = http;\n    }\n    /**\n     * @param {?} sort\n     * @param {?} order\n     * @param {?} page\n     * @return {?}\n     */\n    getRepoIssues(sort, order, page) {\n        const /** @type {?} */ href = 'https://api.github.com/search/issues';\n        const /** @type {?} */ requestUrl = `${href}?q=repo:angular/material2&sort=${sort}&order=${order}&page=${page + 1}`;\n        return this.http.get(requestUrl)\n            .map(response => (response.json()));\n    }\n}\nfunction ExampleHttpDao_tsickle_Closure_declarations() {\n    /** @type {?} */\n    ExampleHttpDao.prototype.http;\n}\n/**\n * Data source to provide what data should be rendered in the table. Note that the data source\n * can retrieve its data in any way. In this case, the data source is provided a reference\n * to a common data base, ExampleHttpDao. It is not the data source's responsibility to manage\n * the underlying data. Instead, it only needs to take the data and send the table exactly what\n * should be rendered.\n */\nexport class ExampleDataSource extends DataSource {\n    /**\n     * @param {?} exampleDatabase\n     * @param {?} paginator\n     * @param {?} sort\n     */\n    constructor(exampleDatabase, paginator, sort) {\n        super();\n        this.exampleDatabase = exampleDatabase;\n        this.paginator = paginator;\n        this.sort = sort;\n        // The number of issues returned by github matching the query.\n        this.resultsLength = 0;\n        this.isLoadingResults = false;\n        this.isRateLimitReached = false;\n    }\n    /**\n     * Connect function called by the table to retrieve one stream containing the data to render.\n     * @return {?}\n     */\n    connect() {\n        const /** @type {?} */ displayDataChanges = [\n            this.sort.sortChange,\n            this.paginator.page\n        ];\n        // If the user changes the sort order, reset back to the first page.\n        this.sort.sortChange.subscribe(() => this.paginator.pageIndex = 0);\n        return Observable.merge(...displayDataChanges)\n            .startWith(null)\n            .switchMap(() => {\n            this.isLoadingResults = true;\n            return this.exampleDatabase.getRepoIssues(this.sort.active, this.sort.direction, this.paginator.pageIndex);\n        })\n            .map(data => {\n            // Flip flag to show that loading has finished.\n            this.isLoadingResults = false;\n            this.isRateLimitReached = false;\n            this.resultsLength = data.total_count;\n            return data.items;\n        })\n            .catch(() => {\n            this.isLoadingResults = false;\n            // Catch if the GitHub API has reached its rate limit. Return empty data.\n            this.isRateLimitReached = true;\n            return Observable.of([]);\n        });\n    }\n    /**\n     * @return {?}\n     */\n    disconnect() { }\n}\nfunction ExampleDataSource_tsickle_Closure_declarations() {\n    /** @type {?} */\n    ExampleDataSource.prototype.resultsLength;\n    /** @type {?} */\n    ExampleDataSource.prototype.isLoadingResults;\n    /** @type {?} */\n    ExampleDataSource.prototype.isRateLimitReached;\n    /** @type {?} */\n    ExampleDataSource.prototype.exampleDatabase;\n    /** @type {?} */\n    ExampleDataSource.prototype.paginator;\n    /** @type {?} */\n    ExampleDataSource.prototype.sort;\n}\n//# sourceMappingURL=table-http-example.js.map","import { Component, ViewChild } from '@angular/core';\nimport { DataSource } from '@angular/cdk/collections';\nimport { MatPaginator, MatSort } from '@angular/material';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/startWith';\nimport 'rxjs/add/observable/merge';\nimport 'rxjs/add/observable/fromEvent';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/distinctUntilChanged';\nimport 'rxjs/add/operator/debounceTime';\n/**\n * \\@title Feature-rich data table\n */\nexport class TableOverviewExample {\n    constructor() {\n        this.displayedColumns = ['select', 'userId', 'userName', 'progress', 'color'];\n        this.exampleDatabase = new ExampleDatabase();\n        this.selection = new SelectionModel(true, []);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this.dataSource = new ExampleDataSource(this.exampleDatabase, this.paginator, this.sort);\n        Observable.fromEvent(this.filter.nativeElement, 'keyup')\n            .debounceTime(150)\n            .distinctUntilChanged()\n            .subscribe(() => {\n            if (!this.dataSource) {\n                return;\n            }\n            this.dataSource.filter = this.filter.nativeElement.value;\n        });\n    }\n    /**\n     * @return {?}\n     */\n    isAllSelected() {\n        if (!this.dataSource) {\n            return false;\n        }\n        if (this.selection.isEmpty()) {\n            return false;\n        }\n        if (this.filter.nativeElement.value) {\n            return this.selection.selected.length == this.dataSource.renderedData.length;\n        }\n        else {\n            return this.selection.selected.length == this.exampleDatabase.data.length;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    masterToggle() {\n        if (!this.dataSource) {\n            return;\n        }\n        if (this.isAllSelected()) {\n            this.selection.clear();\n        }\n        else if (this.filter.nativeElement.value) {\n            this.dataSource.renderedData.forEach(data => this.selection.select(data.id));\n        }\n        else {\n            this.exampleDatabase.data.forEach(data => this.selection.select(data.id));\n        }\n    }\n}\nTableOverviewExample.decorators = [\n    { type: Component, args: [{\n                selector: 'table-overview-example',\n                styles: [\"/* Structure */ .example-container { display: flex; flex-direction: column; min-width: 300px; } .example-header { min-height: 56px; max-height: 56px; display: flex; align-items: center; padding: 8px 24px 0; font-size: 20px; justify-content: space-between; border-bottom: 1px solid transparent; } .mat-form-field { font-size: 14px; flex-grow: 1; margin-top: 8px; } .example-no-results { display: flex; justify-content: center; padding: 24px; font-size: 12px; font-style: italic; } /** Selection styles */ .example-selection-header { font-size: 18px; } .mat-column-select { max-width: 54px; } .mat-row:hover, .example-selected-row { background: #f5f5f5; } .mat-row:active, .mat-row.example-selected-row { background: #eaeaea; } .mat-table { overflow: auto; max-height: 500px; } \"],\n                template: \"<div class=\\\"example-header\\\" [style.display]=\\\"selection.isEmpty() ? '' : 'none'\\\"><mat-form-field floatPlaceholder=\\\"never\\\"><input matInput #filter placeholder=\\\"Filter users\\\"></mat-form-field></div><div class=\\\"example-header example-selection-header\\\" *ngIf=\\\"!selection.isEmpty()\\\">{{selection.selected.length}} {{selection.selected.length == 1 ? 'user' : 'users'}} selected</div><div class=\\\"example-container mat-elevation-z8\\\"><mat-table #table [dataSource]=\\\"dataSource\\\" matSort><ng-container matColumnDef=\\\"select\\\"><mat-header-cell *matHeaderCellDef><mat-checkbox (change)=\\\"$event ? masterToggle() : null\\\" [checked]=\\\"isAllSelected()\\\" [indeterminate]=\\\"selection.hasValue() && !isAllSelected()\\\"></mat-checkbox></mat-header-cell><mat-cell *matCellDef=\\\"let row\\\"><mat-checkbox (click)=\\\"$event.stopPropagation()\\\" (change)=\\\"$event ? selection.toggle(row.id) : null\\\" [checked]=\\\"selection.isSelected(row.id)\\\"></mat-checkbox></mat-cell></ng-container><ng-container matColumnDef=\\\"userId\\\"><mat-header-cell *matHeaderCellDef mat-sort-header>ID</mat-header-cell><mat-cell *matCellDef=\\\"let row\\\">{{row.id}}</mat-cell></ng-container><ng-container matColumnDef=\\\"progress\\\"><mat-header-cell *matHeaderCellDef mat-sort-header>Progress</mat-header-cell><mat-cell *matCellDef=\\\"let row\\\">{{row.progress}}%</mat-cell></ng-container><ng-container matColumnDef=\\\"userName\\\"><mat-header-cell *matHeaderCellDef mat-sort-header>Name</mat-header-cell><mat-cell *matCellDef=\\\"let row\\\">{{row.name}}</mat-cell></ng-container><ng-container matColumnDef=\\\"color\\\"><mat-header-cell *matHeaderCellDef mat-sort-header>Color</mat-header-cell><mat-cell *matCellDef=\\\"let row\\\" [style.color]=\\\"row.color\\\">{{row.color}}</mat-cell></ng-container><mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row><mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\" [class.example-selected-row]=\\\"selection.isSelected(row.id)\\\" (click)=\\\"selection.toggle(row.id)\\\"></mat-row></mat-table><div class=\\\"example-no-results\\\" [style.display]=\\\"dataSource.renderedData.length == 0 ? '' : 'none'\\\">No users found matching filter.</div><mat-paginator #paginator [length]=\\\"dataSource.filteredData.length\\\" [pageIndex]=\\\"0\\\" [pageSize]=\\\"25\\\" [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\"></mat-paginator></div>\",\n            },] },\n];\n/**\n * @nocollapse\n */\nTableOverviewExample.ctorParameters = () => [];\nTableOverviewExample.propDecorators = {\n    'paginator': [{ type: ViewChild, args: [MatPaginator,] },],\n    'sort': [{ type: ViewChild, args: [MatSort,] },],\n    'filter': [{ type: ViewChild, args: ['filter',] },],\n};\nfunction TableOverviewExample_tsickle_Closure_declarations() {\n    /** @type {?} */\n    TableOverviewExample.decorators;\n    /**\n     * @nocollapse\n     * @type {?}\n     */\n    TableOverviewExample.ctorParameters;\n    /** @type {?} */\n    TableOverviewExample.propDecorators;\n    /** @type {?} */\n    TableOverviewExample.prototype.displayedColumns;\n    /** @type {?} */\n    TableOverviewExample.prototype.exampleDatabase;\n    /** @type {?} */\n    TableOverviewExample.prototype.selection;\n    /** @type {?} */\n    TableOverviewExample.prototype.dataSource;\n    /** @type {?} */\n    TableOverviewExample.prototype.paginator;\n    /** @type {?} */\n    TableOverviewExample.prototype.sort;\n    /** @type {?} */\n    TableOverviewExample.prototype.filter;\n}\n/**\n * Constants used to fill up our data base.\n */\nconst COLORS = ['maroon', 'red', 'orange', 'yellow', 'olive', 'green', 'purple',\n    'fuchsia', 'lime', 'teal', 'aqua', 'blue', 'navy', 'black', 'gray'];\nconst /** @type {?} */ NAMES = ['Maia', 'Asher', 'Olivia', 'Atticus', 'Amelia', 'Jack',\n    'Charlotte', 'Theodore', 'Isla', 'Oliver', 'Isabella', 'Jasper',\n    'Cora', 'Levi', 'Violet', 'Arthur', 'Mia', 'Thomas', 'Elizabeth'];\n/**\n * An example database that the data source uses to retrieve data for the table.\n */\nexport class ExampleDatabase {\n    constructor() {\n        /**\n         * Stream that emits whenever the data has been modified.\n         */\n        this.dataChange = new BehaviorSubject([]);\n        // Fill up the database with 100 users.\n        for (let i = 0; i < 100; i++) {\n            this.addUser();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    get data() { return this.dataChange.value; }\n    /**\n     * Adds a new user to the database.\n     * @return {?}\n     */\n    addUser() {\n        const /** @type {?} */ copiedData = this.data.slice();\n        copiedData.push(this.createNewUser());\n        this.dataChange.next(copiedData);\n    }\n    /**\n     * Builds and returns a new User.\n     * @return {?}\n     */\n    createNewUser() {\n        const /** @type {?} */ name = NAMES[Math.round(Math.random() * (NAMES.length - 1))] + ' ' +\n            NAMES[Math.round(Math.random() * (NAMES.length - 1))].charAt(0) + '.';\n        return {\n            id: (this.data.length + 1).toString(),\n            name: name,\n            progress: Math.round(Math.random() * 100).toString(),\n            color: COLORS[Math.round(Math.random() * (COLORS.length - 1))]\n        };\n    }\n}\nfunction ExampleDatabase_tsickle_Closure_declarations() {\n    /**\n     * Stream that emits whenever the data has been modified.\n     * @type {?}\n     */\n    ExampleDatabase.prototype.dataChange;\n}\n/**\n * Data source to provide what data should be rendered in the table. Note that the data source\n * can retrieve its data in any way. In this case, the data source is provided a reference\n * to a common data base, ExampleDatabase. It is not the data source's responsibility to manage\n * the underlying data. Instead, it only needs to take the data and send the table exactly what\n * should be rendered.\n */\nexport class ExampleDataSource extends DataSource {\n    /**\n     * @param {?} _exampleDatabase\n     * @param {?} _paginator\n     * @param {?} _sort\n     */\n    constructor(_exampleDatabase, _paginator, _sort) {\n        super();\n        this._exampleDatabase = _exampleDatabase;\n        this._paginator = _paginator;\n        this._sort = _sort;\n        this._filterChange = new BehaviorSubject('');\n        this.filteredData = [];\n        this.renderedData = [];\n        // Reset to the first page when the user changes the filter.\n        this._filterChange.subscribe(() => this._paginator.pageIndex = 0);\n    }\n    /**\n     * @return {?}\n     */\n    get filter() { return this._filterChange.value; }\n    /**\n     * @param {?} filter\n     * @return {?}\n     */\n    set filter(filter) { this._filterChange.next(filter); }\n    /**\n     * Connect function called by the table to retrieve one stream containing the data to render.\n     * @return {?}\n     */\n    connect() {\n        // Listen for any changes in the base data, sorting, filtering, or pagination\n        const /** @type {?} */ displayDataChanges = [\n            this._exampleDatabase.dataChange,\n            this._sort.sortChange,\n            this._filterChange,\n            this._paginator.page,\n        ];\n        return Observable.merge(...displayDataChanges).map(() => {\n            // Filter data\n            this.filteredData = this._exampleDatabase.data.slice().filter((item) => {\n                let /** @type {?} */ searchStr = (item.name + item.color).toLowerCase();\n                return searchStr.indexOf(this.filter.toLowerCase()) != -1;\n            });\n            // Sort filtered data\n            const /** @type {?} */ sortedData = this.sortData(this.filteredData.slice());\n            // Grab the page's slice of the filtered sorted data.\n            const /** @type {?} */ startIndex = this._paginator.pageIndex * this._paginator.pageSize;\n            this.renderedData = sortedData.splice(startIndex, this._paginator.pageSize);\n            return this.renderedData;\n        });\n    }\n    /**\n     * @return {?}\n     */\n    disconnect() { }\n    /**\n     * Returns a sorted copy of the database data.\n     * @param {?} data\n     * @return {?}\n     */\n    sortData(data) {\n        if (!this._sort.active || this._sort.direction == '') {\n            return data;\n        }\n        return data.sort((a, b) => {\n            let /** @type {?} */ propertyA = '';\n            let /** @type {?} */ propertyB = '';\n            switch (this._sort.active) {\n                case 'userId':\n                    [propertyA, propertyB] = [a.id, b.id];\n                    break;\n                case 'userName':\n                    [propertyA, propertyB] = [a.name, b.name];\n                    break;\n                case 'progress':\n                    [propertyA, propertyB] = [a.progress, b.progress];\n                    break;\n                case 'color':\n                    [propertyA, propertyB] = [a.color, b.color];\n                    break;\n            }\n            let /** @type {?} */ valueA = isNaN(+propertyA) ? propertyA : +propertyA;\n            let /** @type {?} */ valueB = isNaN(+propertyB) ? propertyB : +propertyB;\n            return (valueA < valueB ? -1 : 1) * (this._sort.direction == 'asc' ? 1 : -1);\n        });\n    }\n}\nfunction ExampleDataSource_tsickle_Closure_declarations() {\n    /** @type {?} */\n    ExampleDataSource.prototype._filterChange;\n    /** @type {?} */\n    ExampleDataSource.prototype.filteredData;\n    /** @type {?} */\n    ExampleDataSource.prototype.renderedData;\n    /** @type {?} */\n    ExampleDataSource.prototype._exampleDatabase;\n    /** @type {?} */\n    ExampleDataSource.prototype._paginator;\n    /** @type {?} */\n    ExampleDataSource.prototype._sort;\n}\n//# sourceMappingURL=table-overview-example.js.map","import { Component, ViewChild } from '@angular/core';\nimport { DataSource } from '@angular/cdk/collections';\nimport { MatPaginator } from '@angular/material';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/startWith';\nimport 'rxjs/add/observable/merge';\nimport 'rxjs/add/operator/map';\n/**\n * \\@title Table with pagination\n */\nexport class TablePaginationExample {\n    constructor() {\n        this.displayedColumns = ['userId', 'userName', 'progress', 'color'];\n        this.exampleDatabase = new ExampleDatabase();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this.dataSource = new ExampleDataSource(this.exampleDatabase, this.paginator);\n    }\n}\nTablePaginationExample.decorators = [\n    { type: Component, args: [{\n                selector: 'table-pagination-example',\n                styles: [\"/* Structure */ .example-container { display: flex; flex-direction: column; min-width: 300px; } .example-header { min-height: 64px; display: flex; align-items: center; padding-left: 24px; font-size: 20px; } .mat-table { overflow: auto; max-height: 500px; } \"],\n                template: \"<div class=\\\"example-container mat-elevation-z8\\\"><mat-table #table [dataSource]=\\\"dataSource\\\"><ng-container matColumnDef=\\\"userId\\\"><mat-header-cell *matHeaderCellDef>ID</mat-header-cell><mat-cell *matCellDef=\\\"let row\\\">{{row.id}}</mat-cell></ng-container><ng-container matColumnDef=\\\"progress\\\"><mat-header-cell *matHeaderCellDef>Progress</mat-header-cell><mat-cell *matCellDef=\\\"let row\\\">{{row.progress}}%</mat-cell></ng-container><ng-container matColumnDef=\\\"userName\\\"><mat-header-cell *matHeaderCellDef>Name</mat-header-cell><mat-cell *matCellDef=\\\"let row\\\">{{row.name}}</mat-cell></ng-container><ng-container matColumnDef=\\\"color\\\"><mat-header-cell *matHeaderCellDef>Color</mat-header-cell><mat-cell *matCellDef=\\\"let row\\\" [style.color]=\\\"row.color\\\">{{row.color}}</mat-cell></ng-container><mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row><mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row></mat-table><mat-paginator #paginator [length]=\\\"exampleDatabase.data.length\\\" [pageIndex]=\\\"0\\\" [pageSize]=\\\"25\\\" [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\"></mat-paginator></div>\",\n            },] },\n];\n/**\n * @nocollapse\n */\nTablePaginationExample.ctorParameters = () => [];\nTablePaginationExample.propDecorators = {\n    'paginator': [{ type: ViewChild, args: [MatPaginator,] },],\n};\nfunction TablePaginationExample_tsickle_Closure_declarations() {\n    /** @type {?} */\n    TablePaginationExample.decorators;\n    /**\n     * @nocollapse\n     * @type {?}\n     */\n    TablePaginationExample.ctorParameters;\n    /** @type {?} */\n    TablePaginationExample.propDecorators;\n    /** @type {?} */\n    TablePaginationExample.prototype.displayedColumns;\n    /** @type {?} */\n    TablePaginationExample.prototype.exampleDatabase;\n    /** @type {?} */\n    TablePaginationExample.prototype.dataSource;\n    /** @type {?} */\n    TablePaginationExample.prototype.paginator;\n}\n/**\n * Constants used to fill up our data base.\n */\nconst COLORS = ['maroon', 'red', 'orange', 'yellow', 'olive', 'green', 'purple',\n    'fuchsia', 'lime', 'teal', 'aqua', 'blue', 'navy', 'black', 'gray'];\nconst /** @type {?} */ NAMES = ['Maia', 'Asher', 'Olivia', 'Atticus', 'Amelia', 'Jack',\n    'Charlotte', 'Theodore', 'Isla', 'Oliver', 'Isabella', 'Jasper',\n    'Cora', 'Levi', 'Violet', 'Arthur', 'Mia', 'Thomas', 'Elizabeth'];\n/**\n * An example database that the data source uses to retrieve data for the table.\n */\nexport class ExampleDatabase {\n    constructor() {\n        /**\n         * Stream that emits whenever the data has been modified.\n         */\n        this.dataChange = new BehaviorSubject([]);\n        // Fill up the database with 100 users.\n        for (let i = 0; i < 100; i++) {\n            this.addUser();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    get data() { return this.dataChange.value; }\n    /**\n     * Adds a new user to the database.\n     * @return {?}\n     */\n    addUser() {\n        const /** @type {?} */ copiedData = this.data.slice();\n        copiedData.push(this.createNewUser());\n        this.dataChange.next(copiedData);\n    }\n    /**\n     * Builds and returns a new User.\n     * @return {?}\n     */\n    createNewUser() {\n        const /** @type {?} */ name = NAMES[Math.round(Math.random() * (NAMES.length - 1))] + ' ' +\n            NAMES[Math.round(Math.random() * (NAMES.length - 1))].charAt(0) + '.';\n        return {\n            id: (this.data.length + 1).toString(),\n            name: name,\n            progress: Math.round(Math.random() * 100).toString(),\n            color: COLORS[Math.round(Math.random() * (COLORS.length - 1))]\n        };\n    }\n}\nfunction ExampleDatabase_tsickle_Closure_declarations() {\n    /**\n     * Stream that emits whenever the data has been modified.\n     * @type {?}\n     */\n    ExampleDatabase.prototype.dataChange;\n}\n/**\n * Data source to provide what data should be rendered in the table. Note that the data source\n * can retrieve its data in any way. In this case, the data source is provided a reference\n * to a common data base, ExampleDatabase. It is not the data source's responsibility to manage\n * the underlying data. Instead, it only needs to take the data and send the table exactly what\n * should be rendered.\n */\nexport class ExampleDataSource extends DataSource {\n    /**\n     * @param {?} _exampleDatabase\n     * @param {?} _paginator\n     */\n    constructor(_exampleDatabase, _paginator) {\n        super();\n        this._exampleDatabase = _exampleDatabase;\n        this._paginator = _paginator;\n    }\n    /**\n     * Connect function called by the table to retrieve one stream containing the data to render.\n     * @return {?}\n     */\n    connect() {\n        const /** @type {?} */ displayDataChanges = [\n            this._exampleDatabase.dataChange,\n            this._paginator.page,\n        ];\n        return Observable.merge(...displayDataChanges).map(() => {\n            const /** @type {?} */ data = this._exampleDatabase.data.slice();\n            // Grab the page's slice of data.\n            const /** @type {?} */ startIndex = this._paginator.pageIndex * this._paginator.pageSize;\n            return data.splice(startIndex, this._paginator.pageSize);\n        });\n    }\n    /**\n     * @return {?}\n     */\n    disconnect() { }\n}\nfunction ExampleDataSource_tsickle_Closure_declarations() {\n    /** @type {?} */\n    ExampleDataSource.prototype._exampleDatabase;\n    /** @type {?} */\n    ExampleDataSource.prototype._paginator;\n}\n//# sourceMappingURL=table-pagination-example.js.map","import { Component, ViewChild } from '@angular/core';\nimport { DataSource } from '@angular/cdk/collections';\nimport { MatSort } from '@angular/material';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/startWith';\nimport 'rxjs/add/observable/merge';\nimport 'rxjs/add/operator/map';\n/**\n * \\@title Table with sorting\n */\nexport class TableSortingExample {\n    constructor() {\n        this.displayedColumns = ['userId', 'userName', 'progress', 'color'];\n        this.exampleDatabase = new ExampleDatabase();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this.dataSource = new ExampleDataSource(this.exampleDatabase, this.sort);\n    }\n}\nTableSortingExample.decorators = [\n    { type: Component, args: [{\n                selector: 'table-sorting-example',\n                styles: [\"/* Structure */ .example-container { display: flex; flex-direction: column; min-width: 300px; } .example-header { min-height: 64px; display: flex; align-items: center; padding-left: 24px; font-size: 20px; } .mat-table { overflow: auto; max-height: 500px; } .mat-header-cell .mat-sort-header-sorted { color: black; } \"],\n                template: \"<div class=\\\"example-container mat-elevation-z8\\\"><mat-table #table [dataSource]=\\\"dataSource\\\" matSort><ng-container matColumnDef=\\\"userId\\\"><mat-header-cell *matHeaderCellDef mat-sort-header>ID</mat-header-cell><mat-cell *matCellDef=\\\"let row\\\">{{row.id}}</mat-cell></ng-container><ng-container matColumnDef=\\\"progress\\\"><mat-header-cell *matHeaderCellDef mat-sort-header>Progress</mat-header-cell><mat-cell *matCellDef=\\\"let row\\\">{{row.progress}}%</mat-cell></ng-container><ng-container matColumnDef=\\\"userName\\\"><mat-header-cell *matHeaderCellDef mat-sort-header>Name</mat-header-cell><mat-cell *matCellDef=\\\"let row\\\">{{row.name}}</mat-cell></ng-container><ng-container matColumnDef=\\\"color\\\"><mat-header-cell *matHeaderCellDef mat-sort-header>Color</mat-header-cell><mat-cell *matCellDef=\\\"let row\\\" [style.color]=\\\"row.color\\\">{{row.color}}</mat-cell></ng-container><mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row><mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row></mat-table></div>\",\n            },] },\n];\n/**\n * @nocollapse\n */\nTableSortingExample.ctorParameters = () => [];\nTableSortingExample.propDecorators = {\n    'sort': [{ type: ViewChild, args: [MatSort,] },],\n};\nfunction TableSortingExample_tsickle_Closure_declarations() {\n    /** @type {?} */\n    TableSortingExample.decorators;\n    /**\n     * @nocollapse\n     * @type {?}\n     */\n    TableSortingExample.ctorParameters;\n    /** @type {?} */\n    TableSortingExample.propDecorators;\n    /** @type {?} */\n    TableSortingExample.prototype.displayedColumns;\n    /** @type {?} */\n    TableSortingExample.prototype.exampleDatabase;\n    /** @type {?} */\n    TableSortingExample.prototype.dataSource;\n    /** @type {?} */\n    TableSortingExample.prototype.sort;\n}\n/**\n * Constants used to fill up our data base.\n */\nconst COLORS = ['maroon', 'red', 'orange', 'yellow', 'olive', 'green', 'purple',\n    'fuchsia', 'lime', 'teal', 'aqua', 'blue', 'navy', 'black', 'gray'];\nconst /** @type {?} */ NAMES = ['Maia', 'Asher', 'Olivia', 'Atticus', 'Amelia', 'Jack',\n    'Charlotte', 'Theodore', 'Isla', 'Oliver', 'Isabella', 'Jasper',\n    'Cora', 'Levi', 'Violet', 'Arthur', 'Mia', 'Thomas', 'Elizabeth'];\n/**\n * An example database that the data source uses to retrieve data for the table.\n */\nexport class ExampleDatabase {\n    constructor() {\n        /**\n         * Stream that emits whenever the data has been modified.\n         */\n        this.dataChange = new BehaviorSubject([]);\n        // Fill up the database with 100 users.\n        for (let i = 0; i < 100; i++) {\n            this.addUser();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    get data() { return this.dataChange.value; }\n    /**\n     * Adds a new user to the database.\n     * @return {?}\n     */\n    addUser() {\n        const /** @type {?} */ copiedData = this.data.slice();\n        copiedData.push(this.createNewUser());\n        this.dataChange.next(copiedData);\n    }\n    /**\n     * Builds and returns a new User.\n     * @return {?}\n     */\n    createNewUser() {\n        const /** @type {?} */ name = NAMES[Math.round(Math.random() * (NAMES.length - 1))] + ' ' +\n            NAMES[Math.round(Math.random() * (NAMES.length - 1))].charAt(0) + '.';\n        return {\n            id: (this.data.length + 1).toString(),\n            name: name,\n            progress: Math.round(Math.random() * 100).toString(),\n            color: COLORS[Math.round(Math.random() * (COLORS.length - 1))]\n        };\n    }\n}\nfunction ExampleDatabase_tsickle_Closure_declarations() {\n    /**\n     * Stream that emits whenever the data has been modified.\n     * @type {?}\n     */\n    ExampleDatabase.prototype.dataChange;\n}\n/**\n * Data source to provide what data should be rendered in the table. Note that the data source\n * can retrieve its data in any way. In this case, the data source is provided a reference\n * to a common data base, ExampleDatabase. It is not the data source's responsibility to manage\n * the underlying data. Instead, it only needs to take the data and send the table exactly what\n * should be rendered.\n */\nexport class ExampleDataSource extends DataSource {\n    /**\n     * @param {?} _exampleDatabase\n     * @param {?} _sort\n     */\n    constructor(_exampleDatabase, _sort) {\n        super();\n        this._exampleDatabase = _exampleDatabase;\n        this._sort = _sort;\n    }\n    /**\n     * Connect function called by the table to retrieve one stream containing the data to render.\n     * @return {?}\n     */\n    connect() {\n        const /** @type {?} */ displayDataChanges = [\n            this._exampleDatabase.dataChange,\n            this._sort.sortChange,\n        ];\n        return Observable.merge(...displayDataChanges).map(() => {\n            return this.getSortedData();\n        });\n    }\n    /**\n     * @return {?}\n     */\n    disconnect() { }\n    /**\n     * Returns a sorted copy of the database data.\n     * @return {?}\n     */\n    getSortedData() {\n        const /** @type {?} */ data = this._exampleDatabase.data.slice();\n        if (!this._sort.active || this._sort.direction == '') {\n            return data;\n        }\n        return data.sort((a, b) => {\n            let /** @type {?} */ propertyA = '';\n            let /** @type {?} */ propertyB = '';\n            switch (this._sort.active) {\n                case 'userId':\n                    [propertyA, propertyB] = [a.id, b.id];\n                    break;\n                case 'userName':\n                    [propertyA, propertyB] = [a.name, b.name];\n                    break;\n                case 'progress':\n                    [propertyA, propertyB] = [a.progress, b.progress];\n                    break;\n                case 'color':\n                    [propertyA, propertyB] = [a.color, b.color];\n                    break;\n            }\n            let /** @type {?} */ valueA = isNaN(+propertyA) ? propertyA : +propertyA;\n            let /** @type {?} */ valueB = isNaN(+propertyB) ? propertyB : +propertyB;\n            return (valueA < valueB ? -1 : 1) * (this._sort.direction == 'asc' ? 1 : -1);\n        });\n    }\n}\nfunction ExampleDataSource_tsickle_Closure_declarations() {\n    /** @type {?} */\n    ExampleDataSource.prototype._exampleDatabase;\n    /** @type {?} */\n    ExampleDataSource.prototype._sort;\n}\n//# sourceMappingURL=table-sorting-example.js.map","import { Component } from '@angular/core';\n/**\n * \\@title Basic tabs\n */\nexport class TabsOverviewExample {\n}\nTabsOverviewExample.decorators = [\n    { type: Component, args: [{\n                selector: 'tabs-overview-example',\n                template: \"<mat-tab-group><mat-tab label=\\\"Tab 1\\\">Content 1</mat-tab><mat-tab label=\\\"Tab 2\\\">Content 2</mat-tab></mat-tab-group>\",\n            },] },\n];\n/**\n * @nocollapse\n */\nTabsOverviewExample.ctorParameters = () => [];\nfunction TabsOverviewExample_tsickle_Closure_declarations() {\n    /** @type {?} */\n    TabsOverviewExample.decorators;\n    /**\n     * @nocollapse\n     * @type {?}\n     */\n    TabsOverviewExample.ctorParameters;\n}\n//# sourceMappingURL=tabs-overview-example.js.map","import { Component } from '@angular/core';\n/**\n * \\@title Complex Example\n */\nexport class TabsTemplateLabelExample {\n}\nTabsTemplateLabelExample.decorators = [\n    { type: Component, args: [{\n                selector: 'tabs-template-label-example',\n                template: \"<mat-tab-group class=\\\"demo-tab-group\\\"><mat-tab label=\\\"Tab 1\\\"><div class=\\\"demo-tab-content\\\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla venenatis ante augue. Phasellus volutpat neque ac dui mattis vulputate. Etiam consequat aliquam cursus. In sodales pretium ultrices. Maecenas lectus est, sollicitudin consectetur felis nec, feugiat ultricies mi. Aliquam erat volutpat. Nam placerat, tortor in ultrices porttitor, orci enim rutrum enim, vel tempor sapien arcu a tellus.</div></mat-tab><mat-tab label=\\\"Tab 2\\\"><ng-template mat-tab-label>⭐</ng-template><div class=\\\"demo-tab-content\\\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla venenatis ante augue. Phasellus volutpat neque ac dui mattis vulputate. Etiam consequat aliquam cursus. In sodales pretium ultrices. Maecenas lectus est, sollicitudin consectetur felis nec, feugiat ultricies mi. Aliquam erat volutpat. Nam placerat, tortor in ultrices porttitor, orci enim rutrum enim, vel tempor sapien arcu a tellus.</div></mat-tab><mat-tab label=\\\"Tab 3\\\" disabled=\\\"disabled\\\">No content</mat-tab><mat-tab label=\\\"Tab 4\\\"><div class=\\\"demo-tab-content\\\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla venenatis ante augue. Phasellus volutpat neque ac dui mattis vulputate. Etiam consequat aliquam cursus. In sodales pretium ultrices. Maecenas lectus est, sollicitudin consectetur felis nec, feugiat ultricies mi. Aliquam erat volutpat. Nam placerat, tortor in ultrices porttitor, orci enim rutrum enim, vel tempor sapien arcu a tellus.<br><br>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla venenatis ante augue. Phasellus volutpat neque ac dui mattis vulputate. Etiam consequat aliquam cursus. In sodales pretium ultrices. Maecenas lectus est, sollicitudin consectetur felis nec, feugiat ultricies mi. Aliquam erat volutpat. Nam placerat, tortor in ultrices porttitor, orci enim rutrum enim, vel tempor sapien arcu a tellus.</div></mat-tab><mat-tab label=\\\"Tab 5\\\">No content</mat-tab><mat-tab label=\\\"Tab 6\\\">No content</mat-tab></mat-tab-group>\",\n                styles: [\".demo-tab-group { border: 1px solid #e8e8e8; } .demo-tab-content { padding: 16px; } \"]\n            },] },\n];\n/**\n * @nocollapse\n */\nTabsTemplateLabelExample.ctorParameters = () => [];\nfunction TabsTemplateLabelExample_tsickle_Closure_declarations() {\n    /** @type {?} */\n    TabsTemplateLabelExample.decorators;\n    /**\n     * @nocollapse\n     * @type {?}\n     */\n    TabsTemplateLabelExample.ctorParameters;\n}\n//# sourceMappingURL=tabs-template-label-example.js.map","import { Component } from '@angular/core';\n/**\n * \\@title Multi-row toolbar\n */\nexport class ToolbarMultirowExample {\n}\nToolbarMultirowExample.decorators = [\n    { type: Component, args: [{\n                selector: 'toolbar-multirow-example',\n                template: \"<mat-toolbar color=\\\"primary\\\"><span>Custom Toolbar</span><mat-toolbar-row><span>Second Line</span> <span class=\\\"example-spacer\\\"></span><mat-icon class=\\\"example-icon\\\">verified_user</mat-icon></mat-toolbar-row><mat-toolbar-row><span>Third Line</span> <span class=\\\"example-spacer\\\"></span><mat-icon class=\\\"example-icon\\\">favorite</mat-icon><mat-icon class=\\\"example-icon\\\">delete</mat-icon></mat-toolbar-row></mat-toolbar>\",\n                styles: [\".example-icon { padding: 0 14px; } .example-spacer { flex: 1 1 auto; } \"],\n            },] },\n];\n/**\n * @nocollapse\n */\nToolbarMultirowExample.ctorParameters = () => [];\nfunction ToolbarMultirowExample_tsickle_Closure_declarations() {\n    /** @type {?} */\n    ToolbarMultirowExample.decorators;\n    /**\n     * @nocollapse\n     * @type {?}\n     */\n    ToolbarMultirowExample.ctorParameters;\n}\n//# sourceMappingURL=toolbar-multirow-example.js.map","import { Component } from '@angular/core';\n/**\n * \\@title Basic toolbar\n */\nexport class ToolbarOverviewExample {\n}\nToolbarOverviewExample.decorators = [\n    { type: Component, args: [{\n                selector: 'toolbar-overview-example',\n                template: \"<mat-toolbar>My App</mat-toolbar>\",\n            },] },\n];\n/**\n * @nocollapse\n */\nToolbarOverviewExample.ctorParameters = () => [];\nfunction ToolbarOverviewExample_tsickle_Closure_declarations() {\n    /** @type {?} */\n    ToolbarOverviewExample.decorators;\n    /**\n     * @nocollapse\n     * @type {?}\n     */\n    ToolbarOverviewExample.ctorParameters;\n}\n//# sourceMappingURL=toolbar-overview-example.js.map","import { Component } from '@angular/core';\n/**\n * \\@title Basic tooltip\n */\nexport class TooltipOverviewExample {\n}\nTooltipOverviewExample.decorators = [\n    { type: Component, args: [{\n                selector: 'tooltip-overview-example',\n                template: \"<span matTooltip=\\\"Tooltip!\\\">I have a tooltip</span>\",\n            },] },\n];\n/**\n * @nocollapse\n */\nTooltipOverviewExample.ctorParameters = () => [];\nfunction TooltipOverviewExample_tsickle_Closure_declarations() {\n    /** @type {?} */\n    TooltipOverviewExample.decorators;\n    /**\n     * @nocollapse\n     * @type {?}\n     */\n    TooltipOverviewExample.ctorParameters;\n}\n//# sourceMappingURL=tooltip-overview-example.js.map","import { Component } from '@angular/core';\n/**\n * \\@title Tooltip with custom position\n */\nexport class TooltipPositionExample {\n    constructor() {\n        this.position = 'before';\n    }\n}\nTooltipPositionExample.decorators = [\n    { type: Component, args: [{\n                selector: 'tooltip-position-example',\n                template: \"<div class=\\\"example-tooltip-host\\\" matTooltip=\\\"Tooltip!\\\" [matTooltipPosition]=\\\"position\\\"><span>Show tooltip</span><mat-form-field><mat-select class=\\\"example-select\\\" [(ngModel)]=\\\"position\\\"><mat-option value=\\\"before\\\">Before</mat-option><mat-option value=\\\"after\\\">After</mat-option><mat-option value=\\\"above\\\">Above</mat-option><mat-option value=\\\"below\\\">Below</mat-option><mat-option value=\\\"left\\\">Left</mat-option><mat-option value=\\\"right\\\">Right</mat-option></mat-select></mat-form-field></div>\",\n                styles: [\".example-tooltip-host { display: inline-flex; align-items: center; margin: 50px; } .example-select { margin: 0 10px; } \"],\n            },] },\n];\n/**\n * @nocollapse\n */\nTooltipPositionExample.ctorParameters = () => [];\nfunction TooltipPositionExample_tsickle_Closure_declarations() {\n    /** @type {?} */\n    TooltipPositionExample.decorators;\n    /**\n     * @nocollapse\n     * @type {?}\n     */\n    TooltipPositionExample.ctorParameters;\n    /** @type {?} */\n    TooltipPositionExample.prototype.position;\n}\n//# sourceMappingURL=tooltip-position-example.js.map","/* tslint:disable */\n/** DO NOT MANUALLY EDIT THIS FILE, IT IS GENERATED VIA GULP 'build-examples-module' */\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { ExampleMaterialModule } from './material-module';\nimport { AutocompleteDisplayExample } from './autocomplete-display/autocomplete-display-example';\nimport { AutocompleteFilterExample } from './autocomplete-filter/autocomplete-filter-example';\nimport { AutocompleteOverviewExample } from './autocomplete-overview/autocomplete-overview-example';\nimport { AutocompleteSimpleExample } from './autocomplete-simple/autocomplete-simple-example';\nimport { ButtonOverviewExample } from './button-overview/button-overview-example';\nimport { ButtonToggleExclusiveExample } from './button-toggle-exclusive/button-toggle-exclusive-example';\nimport { ButtonToggleOverviewExample } from './button-toggle-overview/button-toggle-overview-example';\nimport { ButtonTypesExample } from './button-types/button-types-example';\nimport { CardFancyExample } from './card-fancy/card-fancy-example';\nimport { CardOverviewExample } from './card-overview/card-overview-example';\nimport { CdkTableBasicExample } from './cdk-table-basic/cdk-table-basic-example';\nimport { CheckboxConfigurableExample } from './checkbox-configurable/checkbox-configurable-example';\nimport { CheckboxOverviewExample } from './checkbox-overview/checkbox-overview-example';\nimport { ChipsInputExample } from './chips-input/chips-input-example';\nimport { ChipsOverviewExample } from './chips-overview/chips-overview-example';\nimport { ChipsStackedExample } from './chips-stacked/chips-stacked-example';\nimport { DatepickerApiExample } from './datepicker-api/datepicker-api-example';\nimport { DatepickerFilterExample } from './datepicker-filter/datepicker-filter-example';\nimport { DatepickerMinMaxExample } from './datepicker-min-max/datepicker-min-max-example';\nimport { DatepickerOverviewExample } from './datepicker-overview/datepicker-overview-example';\nimport { DatepickerStartViewExample } from './datepicker-start-view/datepicker-start-view-example';\nimport { DatepickerTouchExample } from './datepicker-touch/datepicker-touch-example';\nimport { DialogContentExampleDialog, DialogContentExample } from './dialog-content/dialog-content-example';\nimport { DialogDataExampleDialog, DialogDataExample } from './dialog-data/dialog-data-example';\nimport { DialogElementsExampleDialog, DialogElementsExample } from './dialog-elements/dialog-elements-example';\nimport { DialogOverviewExampleDialog, DialogOverviewExample } from './dialog-overview/dialog-overview-example';\nimport { ExpansionOverviewExample } from './expansion-overview/expansion-overview-example';\nimport { ExpansionStepsExample } from './expansion-steps/expansion-steps-example';\nimport { GridListDynamicExample } from './grid-list-dynamic/grid-list-dynamic-example';\nimport { GridListOverviewExample } from './grid-list-overview/grid-list-overview-example';\nimport { IconOverviewExample } from './icon-overview/icon-overview-example';\nimport { IconSvgExample } from './icon-svg-example/icon-svg-example';\nimport { InputClearableExample } from './input-clearable/input-clearable-example';\nimport { InputErrorsExample } from './input-errors/input-errors-example';\nimport { InputFormExample } from './input-form/input-form-example';\nimport { InputHintExample } from './input-hint/input-hint-example';\nimport { InputOverviewExample } from './input-overview/input-overview-example';\nimport { InputPrefixSuffixExample } from './input-prefix-suffix/input-prefix-suffix-example';\nimport { ListOverviewExample } from './list-overview/list-overview-example';\nimport { ListSectionsExample } from './list-sections/list-sections-example';\nimport { ListSelectionExample } from './list-selection/list-selection-example';\nimport { MenuIconsExample } from './menu-icons/menu-icons-example';\nimport { MenuOverviewExample } from './menu-overview/menu-overview-example';\nimport { NestedMenuExample } from './nested-menu/nested-menu-example';\nimport { PaginatorConfigurableExample } from './paginator-configurable/paginator-configurable-example';\nimport { PaginatorOverviewExample } from './paginator-overview/paginator-overview-example';\nimport { ProgressBarConfigurableExample } from './progress-bar-configurable/progress-bar-configurable-example';\nimport { ProgressBarOverviewExample } from './progress-bar-overview/progress-bar-overview-example';\nimport { ProgressSpinnerConfigurableExample } from './progress-spinner-configurable/progress-spinner-configurable-example';\nimport { ProgressSpinnerOverviewExample } from './progress-spinner-overview/progress-spinner-overview-example';\nimport { RadioNgModelExample } from './radio-ng-model/radio-ng-model-example';\nimport { RadioOverviewExample } from './radio-overview/radio-overview-example';\nimport { SelectFormExample } from './select-form/select-form-example';\nimport { SelectOverviewExample } from './select-overview/select-overview-example';\nimport { SidenavFabExample } from './sidenav-fab/sidenav-fab-example';\nimport { SidenavOverviewExample } from './sidenav-overview/sidenav-overview-example';\nimport { SlideToggleConfigurableExample } from './slide-toggle-configurable/slide-toggle-configurable-example';\nimport { SlideToggleFormsExample } from './slide-toggle-forms/slide-toggle-forms-example';\nimport { SlideToggleOverviewExample } from './slide-toggle-overview/slide-toggle-overview-example';\nimport { SliderConfigurableExample } from './slider-configurable/slider-configurable-example';\nimport { SliderOverviewExample } from './slider-overview/slider-overview-example';\nimport { PizzaPartyComponent, SnackBarComponentExample } from './snack-bar-component/snack-bar-component-example';\nimport { SnackBarOverviewExample } from './snack-bar-overview/snack-bar-overview-example';\nimport { SortOverviewExample } from './sort-overview/sort-overview-example';\nimport { StepperOverviewExample } from './stepper-overview/stepper-overview-example';\nimport { TableBasicExample } from './table-basic/table-basic-example';\nimport { TableFilteringExample } from './table-filtering/table-filtering-example';\nimport { TableHttpExample } from './table-http/table-http-example';\nimport { TableOverviewExample } from './table-overview/table-overview-example';\nimport { TablePaginationExample } from './table-pagination/table-pagination-example';\nimport { TableSortingExample } from './table-sorting/table-sorting-example';\nimport { TabsOverviewExample } from './tabs-overview/tabs-overview-example';\nimport { TabsTemplateLabelExample } from './tabs-template-label/tabs-template-label-example';\nimport { ToolbarMultirowExample } from './toolbar-multirow/toolbar-multirow-example';\nimport { ToolbarOverviewExample } from './toolbar-overview/toolbar-overview-example';\nimport { TooltipOverviewExample } from './tooltip-overview/tooltip-overview-example';\nimport { TooltipPositionExample } from './tooltip-position/tooltip-position-example';\nexport const /** @type {?} */ EXAMPLE_COMPONENTS = {\n    'autocomplete-display': {\n        title: 'Display value autocomplete',\n        component: AutocompleteDisplayExample,\n        additionalFiles: null,\n        selectorName: null\n    },\n    'autocomplete-filter': {\n        title: 'Filter autocomplete',\n        component: AutocompleteFilterExample,\n        additionalFiles: null,\n        selectorName: null\n    },\n    'autocomplete-overview': {\n        title: 'Autocomplete overview',\n        component: AutocompleteOverviewExample,\n        additionalFiles: null,\n        selectorName: null\n    },\n    'autocomplete-simple': {\n        title: 'Simple autocomplete',\n        component: AutocompleteSimpleExample,\n        additionalFiles: null,\n        selectorName: null\n    },\n    'button-overview': {\n        title: 'Basic buttons',\n        component: ButtonOverviewExample,\n        additionalFiles: null,\n        selectorName: null\n    },\n    'button-toggle-exclusive': {\n        title: 'Exclusive selection',\n        component: ButtonToggleExclusiveExample,\n        additionalFiles: null,\n        selectorName: null\n    },\n    'button-toggle-overview': {\n        title: 'Basic button-toggles',\n        component: ButtonToggleOverviewExample,\n        additionalFiles: null,\n        selectorName: null\n    },\n    'button-types': {\n        title: 'Button varieties',\n        component: ButtonTypesExample,\n        additionalFiles: null,\n        selectorName: null\n    },\n    'card-fancy': {\n        title: 'Card with multiple sections',\n        component: CardFancyExample,\n        additionalFiles: null,\n        selectorName: null\n    },\n    'card-overview': {\n        title: 'Basic cards',\n        component: CardOverviewExample,\n        additionalFiles: null,\n        selectorName: null\n    },\n    'cdk-table-basic': {\n        title: 'Basic CDK data-table',\n        component: CdkTableBasicExample,\n        additionalFiles: null,\n        selectorName: null\n    },\n    'checkbox-configurable': {\n        title: 'Configurable checkbox',\n        component: CheckboxConfigurableExample,\n        additionalFiles: null,\n        selectorName: null\n    },\n    'checkbox-overview': {\n        title: 'Basic checkboxes',\n        component: CheckboxOverviewExample,\n        additionalFiles: null,\n        selectorName: null\n    },\n    'chips-input': {\n        title: 'Chips with input',\n        component: ChipsInputExample,\n        additionalFiles: null,\n        selectorName: null\n    },\n    'chips-overview': {\n        title: 'Basic chips',\n        component: ChipsOverviewExample,\n        additionalFiles: null,\n        selectorName: null\n    },\n    'chips-stacked': {\n        title: 'Stacked chips',\n        component: ChipsStackedExample,\n        additionalFiles: null,\n        selectorName: null\n    },\n    'datepicker-api': {\n        title: 'Datepicker API',\n        component: DatepickerApiExample,\n        additionalFiles: null,\n        selectorName: null\n    },\n    'datepicker-filter': {\n        title: 'Datepicker Filter',\n        component: DatepickerFilterExample,\n        additionalFiles: null,\n        selectorName: null\n    },\n    'datepicker-min-max': {\n        title: 'Datepicker Min Max',\n        component: DatepickerMinMaxExample,\n        additionalFiles: null,\n        selectorName: null\n    },\n    'datepicker-overview': {\n        title: 'Basic datepicker',\n        component: DatepickerOverviewExample,\n        additionalFiles: null,\n        selectorName: null\n    },\n    'datepicker-start-view': {\n        title: 'Datepicker start date',\n        component: DatepickerStartViewExample,\n        additionalFiles: null,\n        selectorName: null\n    },\n    'datepicker-touch': {\n        title: 'Datepicker Touch',\n        component: DatepickerTouchExample,\n        additionalFiles: null,\n        selectorName: null\n    },\n    'dialog-content': {\n        title: 'Dialog with header, scrollable content and actions',\n        component: DialogContentExample,\n        additionalFiles: [\"dialog-content-example-dialog.html\"],\n        selectorName: 'DialogContentExample, DialogContentExampleDialog'\n    },\n    'dialog-data': {\n        title: 'Injecting data when opening a dialog',\n        component: DialogDataExample,\n        additionalFiles: [\"dialog-data-example-dialog.html\"],\n        selectorName: 'DialogDataExample, DialogDataExampleDialog'\n    },\n    'dialog-elements': {\n        title: 'Dialog elements',\n        component: DialogElementsExample,\n        additionalFiles: [\"dialog-elements-example-dialog.html\"],\n        selectorName: 'DialogElementsExample, DialogElementsExampleDialog'\n    },\n    'dialog-overview': {\n        title: 'Dialog Overview',\n        component: DialogOverviewExample,\n        additionalFiles: [\"dialog-overview-example-dialog.html\"],\n        selectorName: 'DialogOverviewExample, DialogOverviewExampleDialog'\n    },\n    'expansion-overview': {\n        title: 'Basic expansion panel',\n        component: ExpansionOverviewExample,\n        additionalFiles: null,\n        selectorName: null\n    },\n    'expansion-steps': {\n        title: 'Expansion panel as accordion',\n        component: ExpansionStepsExample,\n        additionalFiles: null,\n        selectorName: null\n    },\n    'grid-list-dynamic': {\n        title: 'Dynamic grid-list',\n        component: GridListDynamicExample,\n        additionalFiles: null,\n        selectorName: null\n    },\n    'grid-list-overview': {\n        title: 'Basic grid-list',\n        component: GridListOverviewExample,\n        additionalFiles: null,\n        selectorName: null\n    },\n    'icon-overview': {\n        title: 'Basic icons',\n        component: IconOverviewExample,\n        additionalFiles: null,\n        selectorName: null\n    },\n    'icon-svg': {\n        title: 'SVG icons',\n        component: IconSvgExample,\n        additionalFiles: null,\n        selectorName: null\n    },\n    'input-clearable': {\n        title: 'Input Clearable',\n        component: InputClearableExample,\n        additionalFiles: null,\n        selectorName: null\n    },\n    'input-errors': {\n        title: 'Input Errors',\n        component: InputErrorsExample,\n        additionalFiles: null,\n        selectorName: null\n    },\n    'input-form': {\n        title: 'Inputs in a form',\n        component: InputFormExample,\n        additionalFiles: null,\n        selectorName: null\n    },\n    'input-hint': {\n        title: 'Input hints',\n        component: InputHintExample,\n        additionalFiles: null,\n        selectorName: null\n    },\n    'input-overview': {\n        title: 'Basic Inputs',\n        component: InputOverviewExample,\n        additionalFiles: null,\n        selectorName: null\n    },\n    'input-prefix-suffix': {\n        title: 'Input Prefixes and Suffixes',\n        component: InputPrefixSuffixExample,\n        additionalFiles: null,\n        selectorName: null\n    },\n    'list-overview': {\n        title: 'Basic list',\n        component: ListOverviewExample,\n        additionalFiles: null,\n        selectorName: null\n    },\n    'list-sections': {\n        title: 'List with sections',\n        component: ListSectionsExample,\n        additionalFiles: null,\n        selectorName: null\n    },\n    'list-selection': {\n        title: 'List with selection',\n        component: ListSelectionExample,\n        additionalFiles: null,\n        selectorName: null\n    },\n    'menu-icons': {\n        title: 'Menu with icons',\n        component: MenuIconsExample,\n        additionalFiles: null,\n        selectorName: null\n    },\n    'menu-overview': {\n        title: 'Basic menu',\n        component: MenuOverviewExample,\n        additionalFiles: null,\n        selectorName: null\n    },\n    'nested-menu': {\n        title: 'Nested menu',\n        component: NestedMenuExample,\n        additionalFiles: null,\n        selectorName: null\n    },\n    'paginator-configurable': {\n        title: 'Configurable paginator',\n        component: PaginatorConfigurableExample,\n        additionalFiles: null,\n        selectorName: null\n    },\n    'paginator-overview': {\n        title: 'Paginator',\n        component: PaginatorOverviewExample,\n        additionalFiles: null,\n        selectorName: null\n    },\n    'progress-bar-configurable': {\n        title: 'Configurable progress-bar',\n        component: ProgressBarConfigurableExample,\n        additionalFiles: null,\n        selectorName: null\n    },\n    'progress-bar-overview': {\n        title: 'Basic progress-bar',\n        component: ProgressBarOverviewExample,\n        additionalFiles: null,\n        selectorName: null\n    },\n    'progress-spinner-configurable': {\n        title: 'Configurable progress spinner',\n        component: ProgressSpinnerConfigurableExample,\n        additionalFiles: null,\n        selectorName: null\n    },\n    'progress-spinner-overview': {\n        title: 'Basic progress-spinner',\n        component: ProgressSpinnerOverviewExample,\n        additionalFiles: null,\n        selectorName: null\n    },\n    'radio-ng-model': {\n        title: 'Radios with ngModel',\n        component: RadioNgModelExample,\n        additionalFiles: null,\n        selectorName: null\n    },\n    'radio-overview': {\n        title: 'Basic radios',\n        component: RadioOverviewExample,\n        additionalFiles: null,\n        selectorName: null\n    },\n    'select-form': {\n        title: 'Select in a form',\n        component: SelectFormExample,\n        additionalFiles: null,\n        selectorName: null\n    },\n    'select-overview': {\n        title: 'Basic select',\n        component: SelectOverviewExample,\n        additionalFiles: null,\n        selectorName: null\n    },\n    'sidenav-fab': {\n        title: 'Sidenav with a FAB',\n        component: SidenavFabExample,\n        additionalFiles: null,\n        selectorName: null\n    },\n    'sidenav-overview': {\n        title: 'Basic sidenav',\n        component: SidenavOverviewExample,\n        additionalFiles: null,\n        selectorName: null\n    },\n    'slide-toggle-configurable': {\n        title: 'Configurable slide-toggle',\n        component: SlideToggleConfigurableExample,\n        additionalFiles: null,\n        selectorName: null\n    },\n    'slide-toggle-forms': {\n        title: 'Slide-toggle with forms',\n        component: SlideToggleFormsExample,\n        additionalFiles: null,\n        selectorName: null\n    },\n    'slide-toggle-overview': {\n        title: 'Basic slide-toggles',\n        component: SlideToggleOverviewExample,\n        additionalFiles: null,\n        selectorName: null\n    },\n    'slider-configurable': {\n        title: 'Configurable slider',\n        component: SliderConfigurableExample,\n        additionalFiles: null,\n        selectorName: null\n    },\n    'slider-overview': {\n        title: 'Basic slider',\n        component: SliderOverviewExample,\n        additionalFiles: null,\n        selectorName: null\n    },\n    'snack-bar-component': {\n        title: 'Snack-bar with a custom component',\n        component: SnackBarComponentExample,\n        additionalFiles: [\"snack-bar-component-example-snack.html\"],\n        selectorName: 'SnackBarComponentExample, PizzaPartyComponent'\n    },\n    'snack-bar-overview': {\n        title: 'Basic snack-bar',\n        component: SnackBarOverviewExample,\n        additionalFiles: null,\n        selectorName: null\n    },\n    'sort-overview': {\n        title: 'Sorting overview',\n        component: SortOverviewExample,\n        additionalFiles: null,\n        selectorName: null\n    },\n    'stepper-overview': {\n        title: 'Stepper overview',\n        component: StepperOverviewExample,\n        additionalFiles: null,\n        selectorName: null\n    },\n    'table-basic': {\n        title: 'Basic table',\n        component: TableBasicExample,\n        additionalFiles: null,\n        selectorName: null\n    },\n    'table-filtering': {\n        title: 'Table with filtering',\n        component: TableFilteringExample,\n        additionalFiles: null,\n        selectorName: null\n    },\n    'table-http': {\n        title: 'Table retrieving data through HTTP',\n        component: TableHttpExample,\n        additionalFiles: null,\n        selectorName: null\n    },\n    'table-overview': {\n        title: 'Feature-rich data table',\n        component: TableOverviewExample,\n        additionalFiles: null,\n        selectorName: null\n    },\n    'table-pagination': {\n        title: 'Table with pagination',\n        component: TablePaginationExample,\n        additionalFiles: null,\n        selectorName: null\n    },\n    'table-sorting': {\n        title: 'Table with sorting',\n        component: TableSortingExample,\n        additionalFiles: null,\n        selectorName: null\n    },\n    'tabs-overview': {\n        title: 'Basic tabs',\n        component: TabsOverviewExample,\n        additionalFiles: null,\n        selectorName: null\n    },\n    'tabs-template-label': {\n        title: 'Complex Example',\n        component: TabsTemplateLabelExample,\n        additionalFiles: null,\n        selectorName: null\n    },\n    'toolbar-multirow': {\n        title: 'Multi-row toolbar',\n        component: ToolbarMultirowExample,\n        additionalFiles: null,\n        selectorName: null\n    },\n    'toolbar-overview': {\n        title: 'Basic toolbar',\n        component: ToolbarOverviewExample,\n        additionalFiles: null,\n        selectorName: null\n    },\n    'tooltip-overview': {\n        title: 'Basic tooltip',\n        component: TooltipOverviewExample,\n        additionalFiles: null,\n        selectorName: null\n    },\n    'tooltip-position': {\n        title: 'Tooltip with custom position',\n        component: TooltipPositionExample,\n        additionalFiles: null,\n        selectorName: null\n    },\n};\nexport const /** @type {?} */ EXAMPLE_LIST = [\n    AutocompleteDisplayExample,\n    AutocompleteFilterExample,\n    AutocompleteOverviewExample,\n    AutocompleteSimpleExample,\n    ButtonOverviewExample,\n    ButtonToggleExclusiveExample,\n    ButtonToggleOverviewExample,\n    ButtonTypesExample,\n    CardFancyExample,\n    CardOverviewExample,\n    CdkTableBasicExample,\n    CheckboxConfigurableExample,\n    CheckboxOverviewExample,\n    ChipsInputExample,\n    ChipsOverviewExample,\n    ChipsStackedExample,\n    DatepickerApiExample,\n    DatepickerFilterExample,\n    DatepickerMinMaxExample,\n    DatepickerOverviewExample,\n    DatepickerStartViewExample,\n    DatepickerTouchExample,\n    DialogContentExampleDialog, DialogContentExample,\n    DialogDataExampleDialog, DialogDataExample,\n    DialogElementsExampleDialog, DialogElementsExample,\n    DialogOverviewExampleDialog, DialogOverviewExample,\n    ExpansionOverviewExample,\n    ExpansionStepsExample,\n    GridListDynamicExample,\n    GridListOverviewExample,\n    IconOverviewExample,\n    IconSvgExample,\n    InputClearableExample,\n    InputErrorsExample,\n    InputFormExample,\n    InputHintExample,\n    InputOverviewExample,\n    InputPrefixSuffixExample,\n    ListOverviewExample,\n    ListSectionsExample,\n    ListSelectionExample,\n    MenuIconsExample,\n    MenuOverviewExample,\n    NestedMenuExample,\n    PaginatorConfigurableExample,\n    PaginatorOverviewExample,\n    ProgressBarConfigurableExample,\n    ProgressBarOverviewExample,\n    ProgressSpinnerConfigurableExample,\n    ProgressSpinnerOverviewExample,\n    RadioNgModelExample,\n    RadioOverviewExample,\n    SelectFormExample,\n    SelectOverviewExample,\n    SidenavFabExample,\n    SidenavOverviewExample,\n    SlideToggleConfigurableExample,\n    SlideToggleFormsExample,\n    SlideToggleOverviewExample,\n    SliderConfigurableExample,\n    SliderOverviewExample,\n    PizzaPartyComponent, SnackBarComponentExample,\n    SnackBarOverviewExample,\n    SortOverviewExample,\n    StepperOverviewExample,\n    TableBasicExample,\n    TableFilteringExample,\n    TableHttpExample,\n    TableOverviewExample,\n    TablePaginationExample,\n    TableSortingExample,\n    TabsOverviewExample,\n    TabsTemplateLabelExample,\n    ToolbarMultirowExample,\n    ToolbarOverviewExample,\n    TooltipOverviewExample,\n    TooltipPositionExample,\n];\nexport class ExampleModule {\n}\nExampleModule.decorators = [\n    { type: NgModule, args: [{\n                declarations: EXAMPLE_LIST,\n                entryComponents: EXAMPLE_LIST,\n                imports: [\n                    ExampleMaterialModule,\n                    FormsModule,\n                    ReactiveFormsModule,\n                    CommonModule\n                ]\n            },] },\n];\n/**\n * @nocollapse\n */\nExampleModule.ctorParameters = () => [];\nfunction ExampleModule_tsickle_Closure_declarations() {\n    /** @type {?} */\n    ExampleModule.decorators;\n    /**\n     * @nocollapse\n     * @type {?}\n     */\n    ExampleModule.ctorParameters;\n}\n//# sourceMappingURL=example-module.js.map","import { EXAMPLE_COMPONENTS } from './example-module';\n/**\n * Example data\n *   with information about Component name, selector, files used in example, and path to examples\n */\nexport class ExampleData {\n    /**\n     * @param {?} example\n     */\n    constructor(example) {\n        // TODO: figure out how do we get these variables.\n        this.description = 'Some description for material';\n        // TODO: use real example and delete the example/ folder.\n        this.examplePath = '/assets/example/';\n        this.exampleFiles = ['button-demo.html', 'button-demo.scss', 'button-demo.ts'];\n        // TODO: extract these variables from example code.\n        this.selectorName = 'button-demo';\n        this.indexFilename = 'button-demo';\n        this.componentName = 'ButtonDemo';\n        if (example && EXAMPLE_COMPONENTS[example]) {\n            this.examplePath = `/assets/plunker/examples/${example}/`;\n            // TODO(tinayuangao): Do not hard-code extensions\n            this.exampleFiles = ['html', 'ts', 'css']\n                .map((extension) => `${example}-example.${extension}`);\n            if (EXAMPLE_COMPONENTS[example].additionalFiles) {\n                this.exampleFiles = this.exampleFiles.concat(EXAMPLE_COMPONENTS[example].additionalFiles);\n            }\n            this.selectorName = this.indexFilename = `${example}-example`;\n            let exampleName = example.replace(/(?:^\\w|\\b\\w)/g, letter => letter.toUpperCase());\n            if (EXAMPLE_COMPONENTS[example].title) {\n                this.description = EXAMPLE_COMPONENTS[example].title;\n            }\n            else {\n                this.description = exampleName.replace(/[\\-]+/g, ' ') + ' Example';\n            }\n            if (EXAMPLE_COMPONENTS[example].selectorName) {\n                this.componentName = EXAMPLE_COMPONENTS[example].selectorName;\n            }\n            else {\n                this.componentName = exampleName.replace(/[\\-]+/g, '') + 'Example';\n            }\n        }\n    }\n}\nfunction ExampleData_tsickle_Closure_declarations() {\n    /** @type {?} */\n    ExampleData.prototype.description;\n    /** @type {?} */\n    ExampleData.prototype.examplePath;\n    /** @type {?} */\n    ExampleData.prototype.exampleFiles;\n    /** @type {?} */\n    ExampleData.prototype.selectorName;\n    /** @type {?} */\n    ExampleData.prototype.indexFilename;\n    /** @type {?} */\n    ExampleData.prototype.componentName;\n}\n//# sourceMappingURL=example-data.js.map","/**\n * Generated bundle index. Do not edit.\n */\nexport { ExampleData, EXAMPLE_COMPONENTS, EXAMPLE_LIST, ExampleModule, ListOverviewExample, DatepickerOverviewExample, CardFancyExample, ToolbarMultirowExample, ButtonToggleOverviewExample, ExpansionOverviewExample, StepperOverviewExample } from './public-api';\nexport { AutocompleteDisplayExample as ɵa } from './autocomplete-display/autocomplete-display-example';\nexport { AutocompleteFilterExample as ɵb } from './autocomplete-filter/autocomplete-filter-example';\nexport { AutocompleteOverviewExample as ɵc } from './autocomplete-overview/autocomplete-overview-example';\nexport { AutocompleteSimpleExample as ɵd } from './autocomplete-simple/autocomplete-simple-example';\nexport { ButtonOverviewExample as ɵe } from './button-overview/button-overview-example';\nexport { ButtonToggleExclusiveExample as ɵf } from './button-toggle-exclusive/button-toggle-exclusive-example';\nexport { ButtonTypesExample as ɵg } from './button-types/button-types-example';\nexport { CardOverviewExample as ɵh } from './card-overview/card-overview-example';\nexport { CdkTableBasicExample as ɵi } from './cdk-table-basic/cdk-table-basic-example';\nexport { CheckboxConfigurableExample as ɵj } from './checkbox-configurable/checkbox-configurable-example';\nexport { CheckboxOverviewExample as ɵk } from './checkbox-overview/checkbox-overview-example';\nexport { ChipsInputExample as ɵl } from './chips-input/chips-input-example';\nexport { ChipsOverviewExample as ɵm } from './chips-overview/chips-overview-example';\nexport { ChipsStackedExample as ɵn } from './chips-stacked/chips-stacked-example';\nexport { DatepickerApiExample as ɵo } from './datepicker-api/datepicker-api-example';\nexport { DatepickerFilterExample as ɵp } from './datepicker-filter/datepicker-filter-example';\nexport { DatepickerMinMaxExample as ɵq } from './datepicker-min-max/datepicker-min-max-example';\nexport { DatepickerStartViewExample as ɵr } from './datepicker-start-view/datepicker-start-view-example';\nexport { DatepickerTouchExample as ɵs } from './datepicker-touch/datepicker-touch-example';\nexport { DialogContentExample as ɵt, DialogContentExampleDialog as ɵu } from './dialog-content/dialog-content-example';\nexport { DialogDataExample as ɵv, DialogDataExampleDialog as ɵw } from './dialog-data/dialog-data-example';\nexport { DialogElementsExample as ɵx, DialogElementsExampleDialog as ɵy } from './dialog-elements/dialog-elements-example';\nexport { DialogOverviewExample as ɵz, DialogOverviewExampleDialog as ɵba } from './dialog-overview/dialog-overview-example';\nexport { ExpansionStepsExample as ɵbb } from './expansion-steps/expansion-steps-example';\nexport { GridListDynamicExample as ɵbc } from './grid-list-dynamic/grid-list-dynamic-example';\nexport { GridListOverviewExample as ɵbd } from './grid-list-overview/grid-list-overview-example';\nexport { IconOverviewExample as ɵbe } from './icon-overview/icon-overview-example';\nexport { IconSvgExample as ɵbf } from './icon-svg-example/icon-svg-example';\nexport { InputClearableExample as ɵbg } from './input-clearable/input-clearable-example';\nexport { InputErrorsExample as ɵbh } from './input-errors/input-errors-example';\nexport { InputFormExample as ɵbi } from './input-form/input-form-example';\nexport { InputHintExample as ɵbj } from './input-hint/input-hint-example';\nexport { InputOverviewExample as ɵbk } from './input-overview/input-overview-example';\nexport { InputPrefixSuffixExample as ɵbl } from './input-prefix-suffix/input-prefix-suffix-example';\nexport { ListSectionsExample as ɵbm } from './list-sections/list-sections-example';\nexport { ListSelectionExample as ɵbn } from './list-selection/list-selection-example';\nexport { ExampleMaterialModule as ɵcx } from './material-module';\nexport { MenuIconsExample as ɵbo } from './menu-icons/menu-icons-example';\nexport { MenuOverviewExample as ɵbp } from './menu-overview/menu-overview-example';\nexport { NestedMenuExample as ɵbq } from './nested-menu/nested-menu-example';\nexport { PaginatorConfigurableExample as ɵbr } from './paginator-configurable/paginator-configurable-example';\nexport { PaginatorOverviewExample as ɵbs } from './paginator-overview/paginator-overview-example';\nexport { ProgressBarConfigurableExample as ɵbt } from './progress-bar-configurable/progress-bar-configurable-example';\nexport { ProgressBarOverviewExample as ɵbu } from './progress-bar-overview/progress-bar-overview-example';\nexport { ProgressSpinnerConfigurableExample as ɵbv } from './progress-spinner-configurable/progress-spinner-configurable-example';\nexport { ProgressSpinnerOverviewExample as ɵbw } from './progress-spinner-overview/progress-spinner-overview-example';\nexport { RadioNgModelExample as ɵbx } from './radio-ng-model/radio-ng-model-example';\nexport { RadioOverviewExample as ɵby } from './radio-overview/radio-overview-example';\nexport { SelectFormExample as ɵbz } from './select-form/select-form-example';\nexport { SelectOverviewExample as ɵca } from './select-overview/select-overview-example';\nexport { SidenavFabExample as ɵcb } from './sidenav-fab/sidenav-fab-example';\nexport { SidenavOverviewExample as ɵcc } from './sidenav-overview/sidenav-overview-example';\nexport { SlideToggleConfigurableExample as ɵcd } from './slide-toggle-configurable/slide-toggle-configurable-example';\nexport { SlideToggleFormsExample as ɵce } from './slide-toggle-forms/slide-toggle-forms-example';\nexport { SlideToggleOverviewExample as ɵcf } from './slide-toggle-overview/slide-toggle-overview-example';\nexport { SliderConfigurableExample as ɵcg } from './slider-configurable/slider-configurable-example';\nexport { SliderOverviewExample as ɵch } from './slider-overview/slider-overview-example';\nexport { PizzaPartyComponent as ɵcj, SnackBarComponentExample as ɵci } from './snack-bar-component/snack-bar-component-example';\nexport { SnackBarOverviewExample as ɵck } from './snack-bar-overview/snack-bar-overview-example';\nexport { SortOverviewExample as ɵcl } from './sort-overview/sort-overview-example';\nexport { TableBasicExample as ɵcm } from './table-basic/table-basic-example';\nexport { TableFilteringExample as ɵcn } from './table-filtering/table-filtering-example';\nexport { TableHttpExample as ɵco } from './table-http/table-http-example';\nexport { TableOverviewExample as ɵcp } from './table-overview/table-overview-example';\nexport { TablePaginationExample as ɵcq } from './table-pagination/table-pagination-example';\nexport { TableSortingExample as ɵcr } from './table-sorting/table-sorting-example';\nexport { TabsOverviewExample as ɵcs } from './tabs-overview/tabs-overview-example';\nexport { TabsTemplateLabelExample as ɵct } from './tabs-template-label/tabs-template-label-example';\nexport { ToolbarOverviewExample as ɵcu } from './toolbar-overview/toolbar-overview-example';\nexport { TooltipOverviewExample as ɵcv } from './tooltip-overview/tooltip-overview-example';\nexport { TooltipPositionExample as ɵcw } from './tooltip-position/tooltip-position-example';\n//# sourceMappingURL=index.js.map"],"names":["ExampleDataSource","ExampleDatabase","COLORS","NAMES"],"mappings":"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E;CAChB,CAAC;;;;AAIF,sBAAsB,CAAC,cAAc,GAAG,MAAM,EAAE,CAAC,AACjD,AAUC,AACD;;AC/BA;;AAEA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AAAO,MAAuB,kBAAkB,GAAG;IAC/C,sBAAsB,EAAE;QACpB,KAAK,EAAE,4BAA4B;QACnC,SAAS,EAAE,0BAA0B;QACrC,eAAe,EAAE,IAAI;QACrB,YAAY,EAAE,IAAI;KACrB;IACD,qBAAqB,EAAE;QACnB,KAAK,EAAE,qBAAqB;QAC5B,SAAS,EAAE,yBAAyB;QACpC,eAAe,EAAE,IAAI;QACrB,YAAY,EAAE,IAAI;KACrB;IACD,uBAAuB,EAAE;QACrB,KAAK,EAAE,uBAAuB;QAC9B,SAAS,EAAE,2BAA2B;QACtC,eAAe,EAAE,IAAI;QACrB,YAAY,EAAE,IAAI;KACrB;IACD,qBAAqB,EAAE;QACnB,KAAK,EAAE,qBAAqB;QAC5B,SAAS,EAAE,yBAAyB;QACpC,eAAe,EAAE,IAAI;QACrB,YAAY,EAAE,IAAI;KACrB;IACD,iBAAiB,EAAE;QACf,KAAK,EAAE,eAAe;QACtB,SAAS,EAAE,qBAAqB;QAChC,eAAe,EAAE,IAAI;QACrB,YAAY,EAAE,IAAI;KACrB;IACD,yBAAyB,EAAE;QACvB,KAAK,EAAE,qBAAqB;QAC5B,SAAS,EAAE,4BAA4B;QACvC,eAAe,EAAE,IAAI;QACrB,YAAY,EAAE,IAAI;KACrB;IACD,wBAAwB,EAAE;QACtB,KAAK,EAAE,sBAAsB;QAC7B,SAAS,EAAE,2BAA2B;QACtC,eAAe,EAAE,IAAI;QACrB,YAAY,EAAE,IAAI;KACrB;IACD,cAAc,EAAE;QACZ,KAAK,EAAE,kBAAkB;QACzB,SAAS,EAAE,kBAAkB;QAC7B,eAAe,EAAE,IAAI;QACrB,YAAY,EAAE,IAAI;KACrB;IACD,YAAY,EAAE;QACV,KAAK,EAAE,6BAA6B;QACpC,SAAS,EAAE,gBAAgB;QAC3B,eAAe,EAAE,IAAI;QACrB,YAAY,EAAE,IAAI;KACrB;IACD,eAAe,EAAE;QACb,KAAK,EAAE,aAAa;QACpB,SAAS,EAAE,mBAAmB;QAC9B,eAAe,EAAE,IAAI;QACrB,YAAY,EAAE,IAAI;KACrB;IACD,iBAAiB,EAAE;QACf,KAAK,EAAE,sBAAsB;QAC7B,SAAS,EAAE,oBAAoB;QAC/B,eAAe,EAAE,IAAI;QACrB,YAAY,EAAE,IAAI;KACrB;IACD,uBAAuB,EAAE;QACrB,KAAK,EAAE,uBAAuB;QAC9B,SAAS,EAAE,2BAA2B;QACtC,eAAe,EAAE,IAAI;QACrB,YAAY,EAAE,IAAI;KACrB;IACD,mBAAmB,EAAE;QACjB,KAAK,EAAE,kBAAkB;QACzB,SAAS,EAAE,uBAAuB;QAClC,eAAe,EAAE,IAAI;QACrB,YAAY,EAAE,IAAI;KACrB;IACD,aAAa,EAAE;QACX,KAAK,EAAE,kBAAkB;QACzB,SAAS,EAAE,iBAAiB;QAC5B,eAAe,EAAE,IAAI;QACrB,YAAY,EAAE,IAAI;KACrB;IACD,gBAAgB,EAAE;QACd,KAAK,EAAE,aAAa;QACpB,SAAS,EAAE,oBAAoB;QAC/B,eAAe,EAAE,IAAI;QACrB,YAAY,EAAE,IAAI;KACrB;IACD,eAAe,EAAE;QACb,KAAK,EAAE,eAAe;QACtB,SAAS,EAAE,mBAAmB;QAC9B,eAAe,EAAE,IAAI;QACrB,YAAY,EAAE,IAAI;KACrB;IACD,gBAAgB,EAAE;QACd,KAAK,EAAE,gBAAgB;QACvB,SAAS,EAAE,oBAAoB;QAC/B,eAAe,EAAE,IAAI;QACrB,YAAY,EAAE,IAAI;KACrB;IACD,mBAAmB,EAAE;QACjB,KAAK,EAAE,mBAAmB;QAC1B,SAAS,EAAE,uBAAuB;QAClC,eAAe,EAAE,IAAI;QACrB,YAAY,EAAE,IAAI;KACrB;IACD,oBAAoB,EAAE;QAClB,KAAK,EAAE,oBAAoB;QAC3B,SAAS,EAAE,uBAAuB;QAClC,eAAe,EAAE,IAAI;QACrB,YAAY,EAAE,IAAI;KACrB;IACD,qBAAqB,EAAE;QACnB,KAAK,EAAE,kBAAkB;QACzB,SAAS,EAAE,yBAAyB;QACpC,eAAe,EAAE,IAAI;QACrB,YAAY,EAAE,IAAI;KACrB;IACD,uBAAuB,EAAE;QACrB,KAAK,EAAE,uBAAuB;QAC9B,SAAS,EAAE,0BAA0B;QACrC,eAAe,EAAE,IAAI;QACrB,YAAY,EAAE,IAAI;KACrB;IACD,kBAAkB,EAAE;QAChB,KAAK,EAAE,kBAAkB;QACzB,SAAS,EAAE,sBAAsB;QACjC,eAAe,EAAE,IAAI;QACrB,YAAY,EAAE,IAAI;KACrB;IACD,gBAAgB,EAAE;QACd,KAAK,EAAE,oDAAoD;QAC3D,SAAS,EAAE,oBAAoB;QAC/B,eAAe,EAAE,CAAC,oCAAoC,CAAC;QACvD,YAAY,EAAE,kDAAkD;KACnE;IACD,aAAa,EAAE;QACX,KAAK,EAAE,sCAAsC;QAC7C,SAAS,EAAE,iBAAiB;QAC5B,eAAe,EAAE,CAAC,iCAAiC,CAAC;QACpD,YAAY,EAAE,4CAA4C;KAC7D;IACD,iBAAiB,EAAE;QACf,KAAK,EAAE,iBAAiB;QACxB,SAAS,EAAE,qBAAqB;QAChC,eAAe,EAAE,CAAC,qCAAqC,CAAC;QACxD,YAAY,EAAE,oDAAoD;KACrE;IACD,iBAAiB,EAAE;QACf,KAAK,EAAE,iBAAiB;QACxB,SAAS,EAAE,qBAAqB;QAChC,eAAe,EAAE,CAAC,qCAAqC,CAAC;QACxD,YAAY,EAAE,oDAAoD;KACrE;IACD,oBAAoB,EAAE;QAClB,KAAK,EAAE,uBAAuB;QAC9B,SAAS,EAAE,wBAAwB;QACnC,eAAe,EAAE,IAAI;QACrB,YAAY,EAAE,IAAI;KACrB;IACD,iBAAiB,EAAE;QACf,KAAK,EAAE,8BAA8B;QACrC,SAAS,EAAE,qBAAqB;QAChC,eAAe,EAAE,IAAI;QACrB,YAAY,EAAE,IAAI;KACrB;IACD,mBAAmB,EAAE;QACjB,KAAK,EAAE,mBAAmB;QAC1B,SAAS,EAAE,sBAAsB;QACjC,eAAe,EAAE,IAAI;QACrB,YAAY,EAAE,IAAI;KACrB;IACD,oBAAoB,EAAE;QAClB,KAAK,EAAE,iBAAiB;QACxB,SAAS,EAAE,uBAAuB;QAClC,eAAe,EAAE,IAAI;QACrB,YAAY,EAAE,IAAI;KACrB;IACD,eAAe,EAAE;QACb,KAAK,EAAE,aAAa;QACpB,SAAS,EAAE,mBAAmB;QAC9B,eAAe,EAAE,IAAI;QACrB,YAAY,EAAE,IAAI;KACrB;IACD,UAAU,EAAE;QACR,KAAK,EAAE,WAAW;QAClB,SAAS,EAAE,cAAc;QACzB,eAAe,EAAE,IAAI;QACrB,YAAY,EAAE,IAAI;KACrB;IACD,iBAAiB,EAAE;QACf,KAAK,EAAE,iBAAiB;QACxB,SAAS,EAAE,qBAAqB;QAChC,eAAe,EAAE,IAAI;QACrB,YAAY,EAAE,IAAI;KACrB;IACD,cAAc,EAAE;QACZ,KAAK,EAAE,cAAc;QACrB,SAAS,EAAE,kBAAkB;QAC7B,eAAe,EAAE,IAAI;QACrB,YAAY,EAAE,IAAI;KACrB;IACD,YAAY,EAAE;QACV,KAAK,EAAE,kBAAkB;QACzB,SAAS,EAAE,gBAAgB;QAC3B,eAAe,EAAE,IAAI;QACrB,YAAY,EAAE,IAAI;KACrB;IACD,YAAY,EAAE;QACV,KAAK,EAAE,aAAa;QACpB,SAAS,EAAE,gBAAgB;QAC3B,eAAe,EAAE,IAAI;QACrB,YAAY,EAAE,IAAI;KACrB;IACD,gBAAgB,EAAE;QACd,KAAK,EAAE,cAAc;QACrB,SAAS,EAAE,oBAAoB;QAC/B,eAAe,EAAE,IAAI;QACrB,YAAY,EAAE,IAAI;KACrB;IACD,qBAAqB,EAAE;QACnB,KAAK,EAAE,6BAA6B;QACpC,SAAS,EAAE,wBAAwB;QACnC,eAAe,EAAE,IAAI;QACrB,YAAY,EAAE,IAAI;KACrB;IACD,eAAe,EAAE;QACb,KAAK,EAAE,YAAY;QACnB,SAAS,EAAE,mBAAmB;QAC9B,eAAe,EAAE,IAAI;QACrB,YAAY,EAAE,IAAI;KACrB;IACD,eAAe,EAAE;QACb,KAAK,EAAE,oBAAoB;QAC3B,SAAS,EAAE,mBAAmB;QAC9B,eAAe,EAAE,IAAI;QACrB,YAAY,EAAE,IAAI;KACrB;IACD,gBAAgB,EAAE;QACd,KAAK,EAAE,qBAAqB;QAC5B,SAAS,EAAE,oBAAoB;QAC/B,eAAe,EAAE,IAAI;QACrB,YAAY,EAAE,IAAI;KACrB;IACD,YAAY,EAAE;QACV,KAAK,EAAE,iBAAiB;QACxB,SAAS,EAAE,gBAAgB;QAC3B,eAAe,EAAE,IAAI;QACrB,YAAY,EAAE,IAAI;KACrB;IACD,eAAe,EAAE;QACb,KAAK,EAAE,YAAY;QACnB,SAAS,EAAE,mBAAmB;QAC9B,eAAe,EAAE,IAAI;QACrB,YAAY,EAAE,IAAI;KACrB;IACD,aAAa,EAAE;QACX,KAAK,EAAE,aAAa;QACpB,SAAS,EAAE,iBAAiB;QAC5B,eAAe,EAAE,IAAI;QACrB,YAAY,EAAE,IAAI;KACrB;IACD,wBAAwB,EAAE;QACtB,KAAK,EAAE,wBAAwB;QAC/B,SAAS,EAAE,4BAA4B;QACvC,eAAe,EAAE,IAAI;QACrB,YAAY,EAAE,IAAI;KACrB;IACD,oBAAoB,EAAE;QAClB,KAAK,EAAE,WAAW;QAClB,SAAS,EAAE,wBAAwB;QACnC,eAAe,EAAE,IAAI;QACrB,YAAY,EAAE,IAAI;KACrB;IACD,2BAA2B,EAAE;QACzB,KAAK,EAAE,2BAA2B;QAClC,SAAS,EAAE,8BAA8B;QACzC,eAAe,EAAE,IAAI;QACrB,YAAY,EAAE,IAAI;KACrB;IACD,uBAAuB,EAAE;QACrB,KAAK,EAAE,oBAAoB;QAC3B,SAAS,EAAE,0BAA0B;QACrC,eAAe,EAAE,IAAI;QACrB,YAAY,EAAE,IAAI;KACrB;IACD,+BAA+B,EAAE;QAC7B,KAAK,EAAE,+BAA+B;QACtC,SAAS,EAAE,kCAAkC;QAC7C,eAAe,EAAE,IAAI;QACrB,YAAY,EAAE,IAAI;KACrB;IACD,2BAA2B,EAAE;QACzB,KAAK,EAAE,wBAAwB;QAC/B,SAAS,EAAE,8BAA8B;QACzC,eAAe,EAAE,IAAI;QACrB,YAAY,EAAE,IAAI;KACrB;IACD,gBAAgB,EAAE;QACd,KAAK,EAAE,qBAAqB;QAC5B,SAAS,EAAE,mBAAmB;QAC9B,eAAe,EAAE,IAAI;QACrB,YAAY,EAAE,IAAI;KACrB;IACD,gBAAgB,EAAE;QACd,KAAK,EAAE,cAAc;QACrB,SAAS,EAAE,oBAAoB;QAC/B,eAAe,EAAE,IAAI;QACrB,YAAY,EAAE,IAAI;KACrB;IACD,aAAa,EAAE;QACX,KAAK,EAAE,kBAAkB;QACzB,SAAS,EAAE,iBAAiB;QAC5B,eAAe,EAAE,IAAI;QACrB,YAAY,EAAE,IAAI;KACrB;IACD,iBAAiB,EAAE;QACf,KAAK,EAAE,cAAc;QACrB,SAAS,EAAE,qBAAqB;QAChC,eAAe,EAAE,IAAI;QACrB,YAAY,EAAE,IAAI;KACrB;IACD,aAAa,EAAE;QACX,KAAK,EAAE,oBAAoB;QAC3B,SAAS,EAAE,iBAAiB;QAC5B,eAAe,EAAE,IAAI;QACrB,YAAY,EAAE,IAAI;KACrB;IACD,kBAAkB,EAAE;QAChB,KAAK,EAAE,eAAe;QACtB,SAAS,EAAE,sBAAsB;QACjC,eAAe,EAAE,IAAI;QACrB,YAAY,EAAE,IAAI;KACrB;IACD,2BAA2B,EAAE;QACzB,KAAK,EAAE,2BAA2B;QAClC,SAAS,EAAE,8BAA8B;QACzC,eAAe,EAAE,IAAI;QACrB,YAAY,EAAE,IAAI;KACrB;IACD,oBAAoB,EAAE;QAClB,KAAK,EAAE,yBAAyB;QAChC,SAAS,EAAE,uBAAuB;QAClC,eAAe,EAAE,IAAI;QACrB,YAAY,EAAE,IAAI;KACrB;IACD,uBAAuB,EAAE;QACrB,KAAK,EAAE,qBAAqB;QAC5B,SAAS,EAAE,0BAA0B;QACrC,eAAe,EAAE,IAAI;QACrB,YAAY,EAAE,IAAI;KACrB;IACD,qBAAqB,EAAE;QACnB,KAAK,EAAE,qBAAqB;QAC5B,SAAS,EAAE,yBAAyB;QACpC,eAAe,EAAE,IAAI;QACrB,YAAY,EAAE,IAAI;KACrB;IACD,iBAAiB,EAAE;QACf,KAAK,EAAE,cAAc;QACrB,SAAS,EAAE,qBAAqB;QAChC,eAAe,EAAE,IAAI;QACrB,YAAY,EAAE,IAAI;KACrB;IACD,qBAAqB,EAAE;QACnB,KAAK,EAAE,mCAAmC;QAC1C,SAAS,EAAE,wBAAwB;QACnC,eAAe,EAAE,CAAC,wCAAwC,CAAC;QAC3D,YAAY,EAAE,+CAA+C;KAChE;IACD,oBAAoB,EAAE;QAClB,KAAK,EAAE,iBAAiB;QACxB,SAAS,EAAE,uBAAuB;QAClC,eAAe,EAAE,IAAI;QACrB,YAAY,EAAE,IAAI;KACrB;IACD,eAAe,EAAE;QACb,KAAK,EAAE,kBAAkB;QACzB,SAAS,EAAE,mBAAmB;QAC9B,eAAe,EAAE,IAAI;QACrB,YAAY,EAAE,IAAI;KACrB;IACD,kBAAkB,EAAE;QAChB,KAAK,EAAE,kBAAkB;QACzB,SAAS,EAAE,sBAAsB;QACjC,eAAe,EAAE,IAAI;QACrB,YAAY,EAAE,IAAI;KACrB;IACD,aAAa,EAAE;QACX,KAAK,EAAE,aAAa;QACpB,SAAS,EAAE,iBAAiB;QAC5B,eAAe,EAAE,IAAI;QACrB,YAAY,EAAE,IAAI;KACrB;IACD,iBAAiB,EAAE;QACf,KAAK,EAAE,sBAAsB;QAC7B,SAAS,EAAE,qBAAqB;QAChC,eAAe,EAAE,IAAI;QACrB,YAAY,EAAE,IAAI;KACrB;IACD,YAAY,EAAE;QACV,KAAK,EAAE,oCAAoC;QAC3C,SAAS,EAAE,gBAAgB;QAC3B,eAAe,EAAE,IAAI;QACrB,YAAY,EAAE,IAAI;KACrB;IACD,gBAAgB,EAAE;QACd,KAAK,EAAE,yBAAyB;QAChC,SAAS,EAAE,oBAAoB;QAC/B,eAAe,EAAE,IAAI;QACrB,YAAY,EAAE,IAAI;KACrB;IACD,kBAAkB,EAAE;QAChB,KAAK,EAAE,uBAAuB;QAC9B,SAAS,EAAE,sBAAsB;QACjC,eAAe,EAAE,IAAI;QACrB,YAAY,EAAE,IAAI;KACrB;IACD,eAAe,EAAE;QACb,KAAK,EAAE,oBAAoB;QAC3B,SAAS,EAAE,mBAAmB;QAC9B,eAAe,EAAE,IAAI;QACrB,YAAY,EAAE,IAAI;KACrB;IACD,eAAe,EAAE;QACb,KAAK,EAAE,YAAY;QACnB,SAAS,EAAE,mBAAmB;QAC9B,eAAe,EAAE,IAAI;QACrB,YAAY,EAAE,IAAI;KACrB;IACD,qBAAqB,EAAE;QACnB,KAAK,EAAE,iBAAiB;QACxB,SAAS,EAAE,wBAAwB;QACnC,eAAe,EAAE,IAAI;QACrB,YAAY,EAAE,IAAI;KACrB;IACD,kBAAkB,EAAE;QAChB,KAAK,EAAE,mBAAmB;QAC1B,SAAS,EAAE,sBAAsB;QACjC,eAAe,EAAE,IAAI;QACrB,YAAY,EAAE,IAAI;KACrB;IACD,kBAAkB,EAAE;QAChB,KAAK,EAAE,eAAe;QACtB,SAAS,EAAE,sBAAsB;QACjC,eAAe,EAAE,IAAI;QACrB,YAAY,EAAE,IAAI;KACrB;IACD,kBAAkB,EAAE;QAChB,KAAK,EAAE,eAAe;QACtB,SAAS,EAAE,sBAAsB;QACjC,eAAe,EAAE,IAAI;QACrB,YAAY,EAAE,IAAI;KACrB;IACD,kBAAkB,EAAE;QAChB,KAAK,EAAE,8BAA8B;QACrC,SAAS,EAAE,sBAAsB;QACjC,eAAe,EAAE,IAAI;QACrB,YAAY,EAAE,IAAI;KACrB;CACJ,CAAC;AACF,AAAO,MAAuB,YAAY,GAAG;IACzC,0BAA0B;IAC1B,yBAAyB;IACzB,2BAA2B;IAC3B,yBAAyB;IACzB,qBAAqB;IACrB,4BAA4B;IAC5B,2BAA2B;IAC3B,kBAAkB;IAClB,gBAAgB;IAChB,mBAAmB;IACnB,oBAAoB;IACpB,2BAA2B;IAC3B,uBAAuB;IACvB,iBAAiB;IACjB,oBAAoB;IACpB,mBAAmB;IACnB,oBAAoB;IACpB,uBAAuB;IACvB,uBAAuB;IACvB,yBAAyB;IACzB,0BAA0B;IAC1B,sBAAsB;IACtB,0BAA0B,EAAE,oBAAoB;IAChD,uBAAuB,EAAE,iBAAiB;IAC1C,2BAA2B,EAAE,qBAAqB;IAClD,2BAA2B,EAAE,qBAAqB;IAClD,wBAAwB;IACxB,qBAAqB;IACrB,sBAAsB;IACtB,uBAAuB;IACvB,mBAAmB;IACnB,cAAc;IACd,qBAAqB;IACrB,kBAAkB;IAClB,gBAAgB;IAChB,gBAAgB;IAChB,oBAAoB;IACpB,wBAAwB;IACxB,mBAAmB;IACnB,mBAAmB;IACnB,oBAAoB;IACpB,gBAAgB;IAChB,mBAAmB;IACnB,iBAAiB;IACjB,4BAA4B;IAC5B,wBAAwB;IACxB,8BAA8B;IAC9B,0BAA0B;IAC1B,kCAAkC;IAClC,8BAA8B;IAC9B,mBAAmB;IACnB,oBAAoB;IACpB,iBAAiB;IACjB,qBAAqB;IACrB,iBAAiB;IACjB,sBAAsB;IACtB,8BAA8B;IAC9B,uBAAuB;IACvB,0BAA0B;IAC1B,yBAAyB;IACzB,qBAAqB;IACrB,mBAAmB,EAAE,wBAAwB;IAC7C,uBAAuB;IACvB,mBAAmB;IACnB,sBAAsB;IACtB,iBAAiB;IACjB,qBAAqB;IACrB,gBAAgB;IAChB,oBAAoB;IACpB,sBAAsB;IACtB,mBAAmB;IACnB,mBAAmB;IACnB,wBAAwB;IACxB,sBAAsB;IACtB,sBAAsB;IACtB,sBAAsB;IACtB,sBAAsB;CACzB,CAAC;AACF,AAAO,MAAM,aAAa,CAAC;CAC1B;AACD,aAAa,CAAC,UAAU,GAAG;IACvB,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;gBACb,YAAY,EAAE,YAAY;gBAC1B,eAAe,EAAE,YAAY;gBAC7B,OAAO,EAAE;oBACL,qBAAqB;oBACrB,WAAW;oBACX,mBAAmB;oBACnB,YAAY;iBACf;aACJ,EAAE,EAAE;CAChB,CAAC;;;;AAIF,aAAa,CAAC,cAAc,GAAG,MAAM,EAAE,CAAC,AACxC,AAQC,AACD;;AC5oBA;;;;AAIA,AAAO,MAAM,WAAW,CAAC;;;;IAIrB,WAAW,CAAC,OAAO,EAAE;;QAEjB,IAAI,CAAC,WAAW,GAAG,+BAA+B,CAAC;;QAEnD,IAAI,CAAC,WAAW,GAAG,kBAAkB,CAAC;QACtC,IAAI,CAAC,YAAY,GAAG,CAAC,kBAAkB,EAAE,kBAAkB,EAAE,gBAAgB,CAAC,CAAC;;QAE/E,IAAI,CAAC,YAAY,GAAG,aAAa,CAAC;QAClC,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;QACnC,IAAI,CAAC,aAAa,GAAG,YAAY,CAAC;QAClC,IAAI,OAAO,IAAI,kBAAkB,CAAC,OAAO,CAAC,EAAE;YACxC,IAAI,CAAC,WAAW,GAAG,CAAC,yBAAyB,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC;;YAE1D,IAAI,CAAC,YAAY,GAAG,CAAC,MAAM,EAAE,IAAI,EAAE,KAAK,CAAC;iBACpC,GAAG,CAAC,CAAC,SAAS,KAAK,CAAC,EAAE,OAAO,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC,CAAC,CAAC;YAC3D,IAAI,kBAAkB,CAAC,OAAO,CAAC,CAAC,eAAe,EAAE;gBAC7C,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,kBAAkB,CAAC,OAAO,CAAC,CAAC,eAAe,CAAC,CAAC;aAC7F;YACD,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,aAAa,GAAG,CAAC,EAAE,OAAO,CAAC,QAAQ,CAAC,CAAC;YAC9D,IAAI,WAAW,GAAG,OAAO,CAAC,OAAO,CAAC,eAAe,EAAE,MAAM,IAAI,MAAM,CAAC,WAAW,EAAE,CAAC,CAAC;YACnF,IAAI,kBAAkB,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE;gBACnC,IAAI,CAAC,WAAW,GAAG,kBAAkB,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC;aACxD;iBACI;gBACD,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC,OAAO,CAAC,QAAQ,EAAE,GAAG,CAAC,GAAG,UAAU,CAAC;aACtE;YACD,IAAI,kBAAkB,CAAC,OAAO,CAAC,CAAC,YAAY,EAAE;gBAC1C,IAAI,CAAC,aAAa,GAAG,kBAAkB,CAAC,OAAO,CAAC,CAAC,YAAY,CAAC;aACjE;iBACI;gBACD,IAAI,CAAC,aAAa,GAAG,WAAW,CAAC,OAAO,CAAC,QAAQ,EAAE,EAAE,CAAC,GAAG,SAAS,CAAC;aACtE;SACJ;KACJ;CACJ,AACD,AAaC,AACD;;AC1DA;;GAEG,AACH,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AAA4F,AAC5F;;"}